var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/MonacoDiffEditorComponent.html",[0,0.871,1,0.871]],["body/components/MonacoDiffEditorComponent.html",[0,0.951,1,1.082,2,1.103,3,0.329,4,0.329,5,2.038,6,1.037,7,1.037,8,0.264,9,0.646,10,0.35,11,2.179,12,1.678,13,1.816,14,0.697,15,1.103,16,1.369,17,2.038,18,2.038,19,0.697,20,1.641,21,1.641,22,1.254,23,2.318,24,1.013,25,2.038,26,0.073,27,2.441,28,1.655,29,2.182,30,2.038,31,2.038,32,2.038,33,2.038,34,2.687,35,3.006,36,2.687,37,2.038,38,3.243,39,3.006,40,2.687,41,2.038,42,2.182,43,2.038,44,2.687,45,2.815,46,2.182,47,2.038,48,2.038,49,2.038,50,2.038,51,1.655,52,1.641,53,0.329,54,0.919,55,2.038,56,1.103,57,0.951,58,2.318,59,1.641,60,2.318,61,1.557,62,1.103,63,1.103,64,2.815,65,1.655,66,2.815,67,0.484,68,1.037,69,1.082,70,1.491,71,2.109,72,0.951,73,1.254,74,0.744,75,0.788,76,1.641,77,1.298,78,1.332,79,2.619,80,1.332,81,1.332,82,1.332,83,1.414,84,1.179,85,1.641,86,2.318,87,1.037,88,0.842,89,1.332,90,1.332,91,1.641,92,1.037,93,0.697,94,1.641,95,1.332,96,2.109,97,1.332,98,1.369,99,1.037,100,2.109,101,0.735,102,1.037,103,1.557,104,1.037,105,0.264,106,1.037,107,1.037,108,1.037,109,0.842,110,0.842,111,1.037,112,1.414,113,0.264,114,0.154,115,0.697,116,1.037,117,1.037,118,1.037,119,1.037,120,0.842,121,1.037,122,1.037,123,1.037,124,2.526,125,1.332,126,1.332,127,1.332,128,1.332,129,2.109,130,2.109,131,2.109,132,1.037,133,1.037,134,1.037,135,1.037,136,1.037,137,2.318,138,0.697,139,0.842,140,0.697,141,1.037,142,1.641,143,1.037,144,1.332,145,1.641,146,1.037,147,1.037,148,1.037,149,0.697,150,1.333,151,0.919,152,0.329,153,2.318,154,1.037,155,1.037,156,0.484,157,0.58,158,0.401,159,1.037,160,0.329,161,0.697,162,1.037,163,0.02,164,0.031,165,0.02]],["title/components/MonacoEditorComponent.html",[0,0.871,156,0.871]],["body/components/MonacoEditorComponent.html",[0,0.811,1,0.383,2,0.913,3,0.26,4,0.26,5,1.738,6,0.82,7,0.82,8,0.209,9,0.664,10,0.352,11,2.242,12,0.383,13,1.869,14,0.551,15,0.913,16,1.168,17,1.738,18,1.738,19,0.551,20,1.358,21,1.358,22,1.126,23,2.02,24,0.949,25,1.738,26,0.073,27,2.25,28,1.411,29,1.959,30,1.738,31,1.738,32,1.738,33,1.738,34,2.412,35,2.771,36,2.412,37,1.738,38,3.049,39,2.771,40,2.412,41,1.738,42,1.959,43,1.738,44,2.412,45,2.554,46,1.959,47,2.238,48,1.738,49,1.738,50,1.738,51,1.411,52,1.358,53,0.26,54,0.761,55,1.738,56,0.913,57,1.397,58,2.02,59,1.358,60,2.02,61,1.357,62,0.913,63,0.913,65,1.411,67,0.383,68,0.82,69,0.943,70,1.546,72,1.192,73,1.333,74,0.802,75,1.072,76,1.358,77,0.761,83,1.599,84,1.503,85,1.358,86,2.02,87,0.82,88,0.666,91,1.358,92,0.82,93,0.551,94,1.358,98,1.168,99,0.82,101,0.71,102,0.82,103,0.913,104,0.82,105,0.209,106,0.82,107,0.82,108,0.82,109,0.666,110,0.666,111,0.82,112,0.761,113,0.209,114,0.122,115,0.551,116,0.82,117,0.82,118,0.82,119,0.82,120,0.666,121,0.82,122,0.82,123,0.82,124,2.238,132,0.82,133,0.82,134,0.82,135,0.82,136,0.82,137,2.02,139,1.959,140,0.551,141,0.82,142,1.738,143,0.82,145,1.358,146,0.82,147,0.82,148,0.82,149,0.551,150,1.103,151,0.761,152,0.26,153,2.02,154,0.82,155,0.82,156,1.247,157,0.459,158,0.317,159,0.82,160,0.26,161,0.551,162,0.82,163,0.016,164,0.026,165,0.016,166,2.233,167,2.233,168,0.913,169,2.596,170,2.233,171,2.596,172,2.877,173,2.596,174,2.233,175,2.233,176,2.233,177,2.596,178,2.233,179,2.074,180,1.745,181,1.745,182,1.745,183,2.596,184,1.745,185,1.745,186,2.233,187,1.054,188,1.054,189,1.054,190,1.054,191,1.054,192,1.054,193,1.745,194,3.1,195,1.745,196,1.054,197,1.054,198,1.054,199,2.02,200,1.054,201,2.233,202,1.745,203,1.054,204,1.054,205,1.745,206,1.054,207,1.745,208,1.054,209,1.358,210,1.054,211,1.054,212,1.054,213,0.666,214,1.054,215,1.054,216,1.054,217,1.054,218,1.054,219,1.745,220,1.054,221,1.054,222,1.054,223,1.745,224,0.666,225,2.877,226,0.82,227,1.054,228,2.233,229,1.054,230,1.745,231,1.054,232,0.666,233,0.82,234,0.82,235,1.054,236,1.054,237,1.054,238,1.054,239,1.745,240,1.054,241,1.054,242,1.054]],["title/directives/MonacoEditorLoaderDirective.html",[152,0.591,158,0.722]],["body/directives/MonacoEditorLoaderDirective.html",[3,0.681,4,0.681,8,0.547,9,0.649,10,0.332,19,1.443,22,1.298,24,1.071,26,0.072,53,0.681,57,1.439,63,1.868,67,1.298,69,1.644,70,1.439,72,1.298,73,1.298,74,0.786,75,1.076,83,1.202,84,1.002,101,0.881,103,1.868,105,0.547,109,1.744,110,1.744,113,0.547,114,0.318,120,1.744,152,0.881,157,1.202,158,1.076,163,0.041,164,0.053,165,0.041,179,2.258,243,3.261,244,2.147,245,3.573,246,4.19,247,2.78,248,2.759,249,4.446,250,3.962,251,4.19,252,2.759,253,3.573,254,2.759,255,2.147,256,2.759,257,2.759,258,2.759,259,2.759,260,2.759]],["title/injectables/MonacoEditorLoaderService.html",[69,0.871,261,1.254]],["body/injectables/MonacoEditorLoaderService.html",[3,0.517,4,0.517,8,0.416,9,0.653,10,0.351,24,1.039,26,0.073,53,0.517,54,1.292,56,1.551,57,1.25,67,0.761,69,1.077,70,1.488,72,1.077,73,1.077,74,0.783,75,0.893,77,0.913,83,1.292,84,1.077,101,0.731,105,0.416,112,1.63,113,0.416,114,0.242,139,1.325,163,0.031,164,0.044,165,0.031,179,2.495,226,1.631,247,2.308,255,1.631,261,1.551,262,2.096,263,3.278,264,1.631,265,3.441,266,3.441,267,3.441,268,3.741,269,2.965,270,2.965,271,3.947,272,2.096,273,2.096,274,2.965,275,2.308,276,2.965,277,2.096,278,3.441,279,1.551,280,2.965,281,2.096,282,2.096,283,2.096,284,2.096,285,1.631,286,2.096,287,1.631,288,2.096,289,2.965,290,3.741,291,2.965,292,3.441,293,3.741,294,3.441,295,2.096,296,2.096,297,1.631,298,2.096,299,2.096,300,2.096,301,3.441,302,2.096,303,2.096,304,2.096,305,3.441,306,2.965,307,2.965,308,2.965,309,2.965,310,2.965,311,2.965,312,2.096,313,2.096,314,2.965,315,1.096,316,2.965,317,2.965,318,2.096,319,2.096,320,2.096,321,2.096,322,2.096,323,2.096,324,2.096,325,2.096,326,2.096]],["title/modules/MonacoEditorModule.html",[327,1.254,328,1.045]],["body/modules/MonacoEditorModule.html",[1,1.726,3,0.65,4,0.65,8,0.523,9,0.408,10,0.209,12,1.259,13,1.511,24,0.65,26,0.072,101,1.055,105,0.523,113,0.523,114,0.304,149,1.378,156,1.726,158,1.416,160,1.16,163,0.039,164,0.051,165,0.039,168,1.378,327,1.378,328,2.087,329,1.378,330,1.378,331,2.449,332,1.666,333,3.015,334,2.051,335,2.051,336,2.051,337,2.698,338,2.051,339,1.666,340,2.636,341,2.636,342,3.468,343,2.698,344,2.636,345,2.636,346,3.468,347,3.468,348,2.636,349,2.636,350,2.051]],["title/interfaces/MonacoOptions.html",[351,1.254,352,1.515]],["body/interfaces/MonacoOptions.html",[3,0.74,4,0.74,8,0.595,9,0.465,10,0.238,26,0.07,53,0.74,54,1.642,74,0.915,75,1.442,77,1.98,113,0.595,138,2.26,140,2.26,163,0.044,164,0.055,165,0.044,209,3.728,232,2.731,233,3.363,234,3.363,351,1.569,352,2.382,353,3,354,2.335,355,2.335,356,4.322,357,4.322]],["title/directives/ResizedDirective.html",[152,0.591,160,0.591]],["body/directives/ResizedDirective.html",[3,0.55,4,0.55,8,0.442,9,0.677,10,0.346,15,1.618,16,1.859,19,1.165,22,1.124,26,0.072,53,0.55,54,1.349,56,1.618,57,1.663,61,2.009,62,2.009,67,1.124,70,1.557,72,0.809,73,0.809,74,0.801,75,0.671,83,1.349,84,1.396,93,1.165,98,2.111,101,0.763,105,0.442,112,1.55,113,0.614,114,0.357,115,1.165,138,2.241,151,1.674,152,0.763,157,0.971,160,0.763,161,1.859,163,0.033,164,0.046,165,0.033,224,1.408,279,1.859,315,1.165,358,2.762,359,1.408,360,2.99,361,2.99,362,2.767,363,3.095,364,2.767,365,1.734,366,3.095,367,2.767,368,2.228,369,2.228,370,2.228,371,3.401,372,2.228,373,2.228,374,2.767,375,1.408,376,1.408,377,1.618,378,2.99,379,2.99,380,1.734,381,1.734,382,1.734,383,1.734,384,1.408,385,2.408,386,2.408,387,2.408,388,2.767,389,2.767,390,1.734,391,1.734]],["title/classes/ResizedEvent.html",[114,0.277,377,1.254]],["body/classes/ResizedEvent.html",[3,0.624,4,0.624,8,0.502,9,0.523,10,0.267,15,1.322,16,1.764,22,0.918,26,0.072,57,1.471,61,1.322,62,1.322,67,1.225,70,0.918,72,0.918,73,0.918,74,0.502,75,0.761,84,1.225,93,1.322,98,2.206,101,0.832,105,0.502,112,1.654,113,0.669,114,0.389,115,1.322,138,2.317,151,1.765,152,0.832,160,0.624,161,1.764,163,0.037,164,0.05,165,0.037,224,1.598,279,1.985,315,1.322,358,2.132,359,1.598,360,3.151,361,3.151,362,1.968,364,1.968,365,1.968,367,2.625,371,3.678,374,2.625,375,1.598,376,1.598,377,1.985,378,3.377,379,3.377,380,1.968,381,1.968,382,1.968,383,1.968,384,1.598,385,2.625,386,2.625,387,2.625,388,2.954,389,2.954,390,1.968,391,1.968,392,2.529,393,2.529]],["title/coverage.html",[394,2.533]],["body/coverage.html",[0,1.346,1,1.061,8,0.58,9,0.726,10,0.376,11,2.238,12,1.555,13,1.865,14,2.238,24,0.914,26,0.07,42,2.96,51,1.847,69,1.061,74,0.58,114,0.337,152,0.914,156,1.061,158,0.88,160,0.721,163,0.043,164,0.055,165,0.043,243,2.274,244,2.274,261,1.528,263,2.274,264,2.274,279,1.528,351,1.528,352,1.847,354,2.274,355,2.274,358,2.343,359,2.343,377,1.528,394,2.274,395,2.274,396,2.922,397,2.922,398,2.922,399,3.706,400,3.706,401,2.922,402,2.922,403,3.706,404,2.922,405,2.922,406,2.922]],["title/dependencies.html",[330,1.505,407,2.011]],["body/dependencies.html",[10,0.255,24,0.794,26,0.072,105,0.638,151,1.402,163,0.047,164,0.058,165,0.047,213,2.034,285,2.504,315,1.683,330,1.683,376,2.034,408,3.218,409,4.814,410,3.218,411,3.218,412,3.218,413,3.218,414,3.218,415,3.218,416,3.218,417,3.218,418,3.218,419,3.063,420,2.488,421,3.218,422,3.218,423,3.218,424,3.218,425,3.218,426,3.218,427,3.218,428,3.218,429,3.218,430,3.218]],["title/index.html",[53,0.496,431,2.011,432,2.011]],["body/index.html",[0,1.384,2,1.143,10,0.317,12,0.794,22,0.794,24,1.126,26,0.073,27,1.381,29,1.381,46,1.93,63,1.143,64,1.7,65,2.534,66,1.7,77,1.33,88,1.381,101,1.024,103,1.596,105,0.606,113,0.606,114,0.352,140,1.143,150,1.93,163,0.032,164,0.045,165,0.032,168,1.143,199,2.376,213,1.381,232,1.381,275,1.7,287,1.7,297,1.7,327,1.143,328,1.533,329,1.143,331,1.381,332,1.381,339,1.381,343,2.376,350,1.7,375,1.381,384,1.93,395,2.376,419,1.7,420,1.93,433,2.185,434,2.185,435,2.185,436,2.185,437,2.185,438,3.519,439,2.185,440,3.053,441,3.053,442,2.185,443,3.519,444,3.053,445,2.185,446,3.053,447,3.053,448,2.185,449,2.185,450,2.185,451,3.053,452,2.185,453,2.185,454,2.185,455,2.185,456,2.185,457,2.185,458,3.519,459,2.185,460,2.185,461,2.185,462,3.519,463,3.053,464,2.185,465,3.053,466,3.053,467,3.81,468,2.185,469,2.185,470,2.185,471,2.185,472,2.185,473,3.519,474,3.053,475,2.185,476,2.185,477,2.185,478,2.185,479,2.185,480,2.185,481,2.185,482,2.185,483,2.185,484,3.053,485,2.185,486,2.185,487,2.185,488,2.185,489,2.185,490,2.376,491,3.053,492,2.185,493,2.185,494,2.185,495,2.185,496,2.185,497,2.185,498,3.053,499,2.185,500,3.053,501,2.185,502,2.185,503,2.185,504,2.185,505,2.185,506,2.185,507,2.185,508,2.185,509,2.185,510,2.185,511,2.185]],["title/modules.html",[329,1.702]],["body/modules.html",[26,0.064,163,0.055,164,0.064,165,0.055,328,1.636,329,1.963,420,2.373,490,2.922,512,3.755,513,3.755]],["title/overview.html",[514,2.533]],["body/overview.html",[1,1.686,2,1.616,26,0.07,28,2.76,114,0.357,149,1.616,156,1.686,157,1.346,158,1.397,160,1.145,163,0.045,164,0.057,165,0.045,168,1.616,261,1.616,327,2.007,328,2.111,330,1.616,331,1.953,332,1.953,333,2.404,334,2.404,335,2.404,336,2.404,337,2.987,338,2.404,339,1.953,351,1.616,514,2.404,515,3.838]],["title/miscellaneous/variables.html",[516,1.565,517,2.24]],["body/miscellaneous/variables.html",[9,0.643,10,0.374,11,2.172,12,1.605,13,1.81,14,2.387,26,0.067,53,0.868,74,0.824,163,0.052,164,0.061,165,0.052,516,2.739,517,2.739,518,4.154]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":42,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{}}}],["0.15.6",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":44,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["1",{"_index":28,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"overview.html":{}}}],["1.1.1",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":39,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["2",{"_index":515,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["7.2.1",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":214,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["_monacopath",{"_index":265,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["accessors",{"_index":247,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["actual_component",{"_index":162,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["addelectronfixscripts",{"_index":268,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["amd",{"_index":302,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["angular",{"_index":498,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":448,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":105,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":213,"title":{},"body":{"components/MonacoEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/http",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":419,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":436,"title":{},"body":{"index.html":{}}}],["app",{"_index":451,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":468,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":473,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":471,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":464,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":467,"title":{},"body":{"index.html":{}}}],["application",{"_index":500,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":469,"title":{},"body":{"index.html":{}}}],["architect",{"_index":454,"title":{},"body":{"index.html":{}}}],["assets",{"_index":447,"title":{},"body":{"index.html":{}}}],["assets/monaco",{"_index":275,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["automaticlayout",{"_index":233,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["available",{"_index":438,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":278,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["behaviorsubject(false",{"_index":280,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["beta.22",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["bindings",{"_index":483,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":209,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["bootstrap",{"_index":332,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":31,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["both",{"_index":489,"title":{},"body":{"index.html":{}}}],["box",{"_index":29,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["browse",{"_index":513,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":420,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":465,"title":{},"body":{"index.html":{}}}],["build",{"_index":455,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":20,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changedetectionstrategy",{"_index":104,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":21,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes",{"_index":88,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["changes.code",{"_index":125,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.code.firstchange",{"_index":126,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.modified",{"_index":127,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.modified.firstchange",{"_index":128,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.options",{"_index":132,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.language",{"_index":216,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.theme",{"_index":135,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.firstchange",{"_index":133,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.language",{"_index":215,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.theme",{"_index":134,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["class",{"_index":114,"title":{"classes/ResizedEvent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classes",{"_index":392,"title":{},"body":{"classes/ResizedEvent.html":{}}}],["cluster_monacoeditormodule",{"_index":334,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["cluster_monacoeditormodule_declarations",{"_index":335,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["cluster_monacoeditormodule_exports",{"_index":336,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["code",{"_index":477,"title":{},"body":{"index.html":{}}}],["column",{"_index":33,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["component",{"_index":0,"title":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.(eg",{"_index":463,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":154,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["components/monaco",{"_index":346,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["const",{"_index":112,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor",{"_index":67,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(element",{"_index":365,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(monacoloader",{"_index":68,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["constructor(ngzone",{"_index":270,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["constructor(private",{"_index":115,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(templateref",{"_index":248,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["container",{"_index":46,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["controlvalueaccessor",{"_index":166,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["core",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["correctly",{"_index":509,"title":{},"body":{"index.html":{}}}],["cover",{"_index":504,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":394,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":470,"title":{},"body":{"index.html":{}}}],["css",{"_index":315,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["current",{"_index":502,"title":{},"body":{"index.html":{}}}],["dark",{"_index":475,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":331,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["declare",{"_index":111,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["default",{"_index":274,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["defined",{"_index":70,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["demo",{"_index":435,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":330,"title":{"dependencies.html":{}},"body":{"modules/MonacoEditorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["designer",{"_index":501,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":499,"title":{},"body":{"index.html":{}}}],["diff",{"_index":12,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["diffeditoroptions",{"_index":493,"title":{},"body":{"index.html":{}}}],["direction",{"_index":32,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["directive",{"_index":152,"title":{"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["directives",{"_index":157,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"overview.html":{}}}],["directives/monaco",{"_index":344,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["directives/resized",{"_index":348,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["display",{"_index":34,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["document.body.appendchild(electronfixscript",{"_index":326,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.body.appendchild(loaderscript",{"_index":311,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createelement('script",{"_index":305,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createtextnode('self.module",{"_index":319,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createtextnode('self.process.browser",{"_index":323,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["documentation",{"_index":395,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["dynamic",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["editor",{"_index":24,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["editor'},{'name",{"_index":155,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editor.component",{"_index":347,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor.component.ts",{"_index":14,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.component.ts:110",{"_index":203,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:117",{"_index":92,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:121",{"_index":196,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:125",{"_index":200,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:126",{"_index":89,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:133",{"_index":198,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:137",{"_index":188,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:173",{"_index":192,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:182",{"_index":190,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:57",{"_index":95,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:58",{"_index":97,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:60",{"_index":81,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":78,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:62",{"_index":80,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:64",{"_index":71,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":90,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:71",{"_index":204,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":206,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:74",{"_index":212,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":210,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":187,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":87,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:80",{"_index":211,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:81",{"_index":208,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":185,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:86",{"_index":191,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:96",{"_index":189,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:97",{"_index":82,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.idiffeditorconstructionoptions",{"_index":79,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.ieditorconstructionoptions",{"_index":186,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.istandalonecodeeditor",{"_index":205,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.istandalonediffeditor",{"_index":96,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.module.ts",{"_index":341,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html",{"_index":494,"title":{},"body":{"index.html":{}}}],["editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html",{"_index":492,"title":{},"body":{"index.html":{}}}],["editor/min/vs",{"_index":276,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["editor/monaco",{"_index":13,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/src/lib/components/monaco",{"_index":11,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/src/lib/directives/monaco",{"_index":243,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"coverage.html":{}}}],["editor/src/lib/directives/resized",{"_index":358,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["editor/src/lib/interfaces/monaco",{"_index":354,"title":{},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["editor/src/lib/monaco",{"_index":340,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor/src/lib/services/monaco",{"_index":263,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["editorcontent",{"_index":55,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editoroptions",{"_index":474,"title":{},"body":{"index.html":{}}}],["eg",{"_index":484,"title":{},"body":{"index.html":{}}}],["electron",{"_index":508,"title":{},"body":{"index.html":{}}}],["electronfixscript",{"_index":313,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["electronfixscript.appendchild(inlinescript",{"_index":324,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["electronfixscript.appendchild(inlinescript2",{"_index":325,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["element",{"_index":151,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["elementref",{"_index":98,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ellipsis",{"_index":48,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["entrycomponents",{"_index":342,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["environment",{"_index":317,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["event",{"_index":93,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["event.directive",{"_index":349,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["event.directive.ts",{"_index":359,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["event.directive.ts:21",{"_index":368,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:23",{"_index":373,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:24",{"_index":372,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:25",{"_index":366,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:30",{"_index":369,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:35",{"_index":370,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:4",{"_index":393,"title":{},"body":{"classes/ResizedEvent.html":{}}}],["event.newheight",{"_index":147,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["event.newwidth",{"_index":146,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["eventemitter",{"_index":367,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["export",{"_index":113,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["exportas",{"_index":380,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["exports",{"_index":333,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["false",{"_index":228,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["feature",{"_index":460,"title":{},"body":{"index.html":{}}}],["features",{"_index":487,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["filter",{"_index":106,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["filter(isloaded",{"_index":119,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["flex",{"_index":27,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["fn",{"_index":194,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["following",{"_index":488,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":466,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":172,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["function",{"_index":199,"title":{},"body":{"components/MonacoEditorComponent.html":{},"index.html":{}}}],["getting",{"_index":431,"title":{"index.html":{}},"body":{}}],["glob",{"_index":446,"title":{},"body":{"index.html":{}}}],["height",{"_index":45,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["hidden",{"_index":36,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["host",{"_index":25,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["html",{"_index":150,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["htmldivelement",{"_index":94,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["https://microsoft.github.io/monaco",{"_index":491,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":15,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["import",{"_index":101,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["imports",{"_index":350,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{}}}],["include",{"_index":458,"title":{},"body":{"index.html":{}}}],["index",{"_index":53,"title":{"index.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["initmonaco",{"_index":58,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["injectable",{"_index":261,"title":{"injectables/MonacoEditorLoaderService.html":{}},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":262,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["inlinescript",{"_index":318,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["inlinescript2",{"_index":322,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["input",{"_index":103,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"index.html":{}}}],["inputs",{"_index":63,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"index.html":{}}}],["install",{"_index":440,"title":{},"body":{"index.html":{}}}],["installation",{"_index":439,"title":{},"body":{"index.html":{}}}],["interface",{"_index":351,"title":{"interfaces/MonacoOptions.html":{}},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":353,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["isloaded",{"_index":120,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["ismonacoloaded",{"_index":266,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["javascript",{"_index":476,"title":{},"body":{"index.html":{}}}],["js",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["language",{"_index":232,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["layout",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":149,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["lib",{"_index":450,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":503,"title":{},"body":{"index.html":{}}}],["library",{"_index":497,"title":{},"body":{"index.html":{}}}],["linenumbers",{"_index":356,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["live",{"_index":434,"title":{},"body":{"index.html":{}}}],["load",{"_index":291,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader",{"_index":303,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.directive",{"_index":345,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["loader.directive.ts",{"_index":244,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"coverage.html":{}}}],["loader.directive.ts:6",{"_index":253,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.directive.ts:8",{"_index":252,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.service",{"_index":110,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.service.ts",{"_index":264,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:13",{"_index":272,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:54",{"_index":273,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:6",{"_index":282,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:7",{"_index":281,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:8",{"_index":277,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:9",{"_index":284,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript",{"_index":301,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.addeventlistener('load",{"_index":310,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.src",{"_index":308,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.type",{"_index":306,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loadmonacoeditor",{"_index":246,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loadmonacoeditor(value",{"_index":256,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["m.message).join",{"_index":241,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["main",{"_index":459,"title":{},"body":{"index.html":{}}}],["make",{"_index":449,"title":{},"body":{"index.html":{}}}],["matching",{"_index":164,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materia",{"_index":443,"title":{},"body":{"index.html":{}}}],["materialoadmonacoeditor",{"_index":245,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["materialoadmonacoeditor]'},{'name",{"_index":159,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["materiaresized",{"_index":161,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["max",{"_index":37,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{}}}],["methods",{"_index":56,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{}}}],["min",{"_index":40,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["minimap",{"_index":357,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["miscellaneous",{"_index":516,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modified",{"_index":64,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"index.html":{}}}],["module",{"_index":327,"title":{"modules/MonacoEditorModule.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":329,"title":{"modules.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"modules.html":{}}}],["monaco",{"_index":10,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(this.container",{"_index":235,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.creatediffeditor(this.container",{"_index":144,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.createmodel(this.modified",{"_index":129,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.createmodel(this.original",{"_index":130,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.getmodelmarkers({}).map(m",{"_index":240,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.setmodellanguage",{"_index":217,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.settheme(changes.options.currentvalue.theme",{"_index":136,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["monacodiffeditorcomponent",{"_index":1,"title":{"components/MonacoDiffEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorcomponent",{"_index":156,"title":{"components/MonacoEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorloaderdirective",{"_index":158,"title":{"directives/MonacoEditorLoaderDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorloaderservice",{"_index":69,"title":{"injectables/MonacoEditorLoaderService.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["monacoeditorloaderservice.ismonacoloaded.subscribe(isloaded",{"_index":258,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["monacoeditormodule",{"_index":328,"title":{"modules/MonacoEditorModule.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["monacoloader",{"_index":76,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["monacooptions",{"_index":352,"title":{"interfaces/MonacoOptions.html":{}},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["monacopath",{"_index":269,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["monacopath(value",{"_index":288,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["motivations",{"_index":495,"title":{},"body":{"index.html":{}}}],["multi",{"_index":173,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["name",{"_index":73,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["nconsole.log(\"hello",{"_index":478,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":304,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["needs",{"_index":505,"title":{},"body":{"index.html":{}}}],["new",{"_index":279,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["newheight",{"_index":379,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["newwidth",{"_index":378,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ng_validators",{"_index":174,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ng_value_accessor",{"_index":170,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ngmodel",{"_index":482,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":343,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{}}}],["ngonchanges",{"_index":59,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngonchanges(changes",{"_index":85,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngondestroy",{"_index":60,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngoninit",{"_index":61,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ngx",{"_index":23,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngzone",{"_index":271,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["ngzone.run",{"_index":299,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["node_modules/monaco",{"_index":456,"title":{},"body":{"index.html":{}}}],["noderequire",{"_index":267,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["notably",{"_index":506,"title":{},"body":{"index.html":{}}}],["npm",{"_index":441,"title":{},"body":{"index.html":{}}}],["null",{"_index":226,"title":{},"body":{"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["number",{"_index":371,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["object.assign",{"_index":143,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["oldheight",{"_index":360,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["oldwidth",{"_index":361,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onchanges",{"_index":17,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ondestroy",{"_index":18,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["onerrorstatuschange",{"_index":175,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ongotamdloader",{"_index":290,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["oninit",{"_index":16,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onresized",{"_index":62,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onresized(event",{"_index":91,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ontouched",{"_index":176,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["optional",{"_index":75,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["options",{"_index":65,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["options.ts",{"_index":355,"title":{},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["opts",{"_index":137,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["original",{"_index":66,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"index.html":{}}}],["originalcode",{"_index":480,"title":{},"body":{"index.html":{}}}],["out",{"_index":339,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":375,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["output('resized",{"_index":381,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["outputs",{"_index":363,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["overflow",{"_index":35,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["overview",{"_index":514,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":407,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":72,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["parseerror",{"_index":177,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["pastparseerror",{"_index":239,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["paths",{"_index":296,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["position",{"_index":49,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["private",{"_index":57,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["projects",{"_index":452,"title":{},"body":{"index.html":{}}}],["propagatechange",{"_index":178,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["properties",{"_index":54,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{}}}],["provide",{"_index":169,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["providedin",{"_index":286,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["providers",{"_index":168,"title":{},"body":{"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["queries",{"_index":376,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["reactiveform",{"_index":486,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":138,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["reference",{"_index":437,"title":{},"body":{"index.html":{}}}],["registeronchange",{"_index":180,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronchange(fn",{"_index":193,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registerontouched",{"_index":181,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registerontouched(fn",{"_index":195,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange",{"_index":182,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange(fn",{"_index":197,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange?(fn",{"_index":229,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["relative",{"_index":50,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["repository",{"_index":442,"title":{},"body":{"index.html":{}}}],["reset",{"_index":338,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["resize",{"_index":510,"title":{},"body":{"index.html":{}}}],["resized",{"_index":364,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizeddirective",{"_index":160,"title":{"directives/ResizedDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"overview.html":{}}}],["resizedevent",{"_index":377,"title":{"classes/ResizedEvent.html":{}},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["resizeevent",{"_index":362,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizesensor",{"_index":374,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizesensor(this.element.nativeelement",{"_index":383,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["result",{"_index":163,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":165,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":224,"title":{},"body":{"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["returns",{"_index":83,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{}}}],["root",{"_index":287,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["rxjs",{"_index":285,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":108,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["sample",{"_index":457,"title":{},"body":{"index.html":{}}}],["saveadd",{"_index":445,"title":{},"body":{"index.html":{}}}],["scrollbeyondlastline",{"_index":234,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["services/monaco",{"_index":109,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["set",{"_index":255,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["setloadmonacoeditor(value",{"_index":254,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["setmonacopath(value",{"_index":283,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["simplechanges",{"_index":86,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["size",{"_index":511,"title":{},"body":{"index.html":{}}}],["sizing",{"_index":30,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["src/.../monaco",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":9,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":432,"title":{"index.html":{}},"body":{}}],["statements",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["subscribe",{"_index":122,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["support",{"_index":490,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":512,"title":{},"body":{"modules.html":{}}}],["table",{"_index":51,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":107,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["take(1",{"_index":121,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["templateref",{"_index":249,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["templateurl",{"_index":472,"title":{},"body":{"index.html":{}}}],["text",{"_index":47,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["text/javascript",{"_index":307,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["theme",{"_index":140,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["this._monacopath",{"_index":289,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this._monacopath}/loader.js",{"_index":309,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.addelectronfixscripts",{"_index":312,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.container",{"_index":116,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor",{"_index":124,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.dispose",{"_index":148,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.getmodel",{"_index":218,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.layout",{"_index":145,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidblureditortext",{"_index":242,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":236,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidchangemodeldecorations",{"_index":238,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.setmodel",{"_index":131,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["this.editor.setvalue(value",{"_index":221,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editorcontent.nativeelement",{"_index":117,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.element",{"_index":390,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.element.nativeelement.clientheight",{"_index":387,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.element.nativeelement.clientwidth",{"_index":386,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.initmonaco",{"_index":123,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.ismonacoloaded.next(true",{"_index":300,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.monacoeditorloaderservice.monacopath",{"_index":257,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["this.monacoloader.ismonacoloaded.pipe",{"_index":118,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.noderequire",{"_index":294,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.oldheight",{"_index":389,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.oldwidth",{"_index":388,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.onerrorstatuschange",{"_index":230,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.onresized",{"_index":385,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.ontouched",{"_index":223,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.options",{"_index":142,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.options.language",{"_index":219,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.parseerror",{"_index":225,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.propagatechange",{"_index":222,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.propagatechange(this.editor.getvalue",{"_index":237,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.resized.next(event",{"_index":391,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.resizeevent",{"_index":382,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.value",{"_index":220,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.value].join('\\n",{"_index":231,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.viewcontainer.clear",{"_index":260,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":259,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["todo",{"_index":481,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["true",{"_index":139,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["try",{"_index":433,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":321,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["ui/ngx",{"_index":444,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":320,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["understanding",{"_index":316,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["use",{"_index":462,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":171,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["using",{"_index":485,"title":{},"body":{"index.html":{}}}],["valid",{"_index":227,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validate",{"_index":183,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validationerrors",{"_index":201,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validator",{"_index":167,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["value",{"_index":179,"title":{},"body":{"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["var",{"_index":153,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["variable",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":517,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vc",{"_index":141,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["viewchild",{"_index":102,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["viewchild('diffeditor",{"_index":100,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["viewchild('editor",{"_index":207,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["viewcontainer",{"_index":250,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["viewcontainerref",{"_index":251,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["void",{"_index":84,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["vs",{"_index":297,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["want",{"_index":461,"title":{},"body":{"index.html":{}}}],["wanted",{"_index":496,"title":{},"body":{"index.html":{}}}],["wdith",{"_index":41,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["width",{"_index":38,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["window).amdrequire",{"_index":292,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).amdrequire(['vs/editor/editor.main",{"_index":298,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).amdrequire.config",{"_index":295,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).require",{"_index":293,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["workaround",{"_index":314,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["works",{"_index":507,"title":{},"body":{"index.html":{}}}],["world!\");\\n",{"_index":479,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":43,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["writevalue",{"_index":184,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["writevalue(value",{"_index":202,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["x",{"_index":384,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["your_app_name",{"_index":453,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":337,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/MonacoDiffEditorComponent.html":{"url":"components/MonacoDiffEditorComponent.html","title":"component - MonacoDiffEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MonacoDiffEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-monaco-diff-editor\n            \n\n\n            \n                styles\n                :host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}\n            \n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                editorContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMonaco\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modified\n                            \n                            \n                                options\n                            \n                            \n                                original\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(monacoLoader: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monacoLoader\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modified\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     editor.IDiffEditorConstructionOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        original\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMonaco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMonaco()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:126\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLDivElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     editor.IStandaloneDiffEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('diffEditor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    Input,\n    ChangeDetectionStrategy,\n    SimpleChanges\n} from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\nimport { editor } from 'monaco-editor';\n\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\n\ndeclare const monaco: any;\n\n@Component({\n    selector: 'ngx-monaco-diff-editor',\n    template: `\n\n  \n\n`,\n    styles: [\n        `:host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MonacoDiffEditorComponent implements OnInit, OnChanges, OnDestroy {\n    container: HTMLDivElement;\n    editor: editor.IStandaloneDiffEditor;\n\n    @Input() original: string;\n    @Input() modified: string;\n    @Input() options: editor.IDiffEditorConstructionOptions;\n\n    @ViewChild('diffEditor') editorContent: ElementRef;\n\n    constructor(private monacoLoader: MonacoEditorLoaderService) { }\n\n    ngOnInit() {\n        this.container = this.editorContent.nativeElement;\n        this.monacoLoader.isMonacoLoaded.pipe(\n          filter(isLoaded => isLoaded),\n          take(1),\n        ).subscribe(() => {\n            this.initMonaco();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.editor && ((changes.code && ! changes.code.firstChange) || (changes.modified && ! changes.modified.firstChange))) {\n            const modified = monaco.editor.createModel(this.modified);\n            const original = monaco.editor.createModel(this.original);\n            this.editor.setModel({\n                original,\n                modified\n            });\n        }\n        if (\n            this.editor &&\n            changes.options &&\n            ! changes.options.firstChange &&\n            changes.options.previousValue.theme !== changes.options.currentValue.theme\n          ) {\n            monaco.editor.setTheme(changes.options.currentValue.theme);\n        }\n    }\n\n    private initMonaco() {\n        let opts: editor.IDiffEditorConstructionOptions = {\n            readOnly: true,\n            theme: 'vc'\n        };\n        if (this.options) {\n          opts = Object.assign({}, opts, this.options);\n        }\n        this.editor = monaco.editor.createDiffEditor(this.container, opts);\n\n        const original = monaco.editor.createModel(this.original);\n        const modified = monaco.editor.createModel(this.modified);\n\n        this.editor.setModel({\n            original,\n            modified\n        });\n        this.editor.layout();\n    }\n\n    onResized(event) {\n        if (this.editor) {\n            this.editor.layout({\n                width: event.newWidth,\n                height: event.newHeight\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n    }\n}\n\n    \n\n\n    \n            :host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'MonacoDiffEditorComponent', 'selector': 'ngx-monaco-diff-editor'},{'name': 'MonacoEditorComponent', 'selector': 'ngx-monaco-editor'}];\n    var DIRECTIVES = [{'name': 'MonacoEditorLoaderDirective', 'selector': '[materiaLoadMonacoEditor]'},{'name': 'ResizedDirective', 'selector': '[materiaResized]'}];\n    var ACTUAL_COMPONENT = {'name': 'MonacoDiffEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MonacoEditorComponent.html":{"url":"components/MonacoEditorComponent.html","title":"component - MonacoEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MonacoEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n                ControlValueAccessor\n                Validator\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MonacoEditorComponent), multi: true\n}\n                            {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => MonacoEditorComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ngx-monaco-editor\n            \n\n\n            \n                styles\n                :host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}\n            \n\n            \n                template\n                \t\n\t\t\n\t\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                editorContent\n                            \n                            \n                                    Private\n                                onErrorStatusChange\n                            \n                            \n                                    Private\n                                onTouched\n                            \n                            \n                                parseError\n                            \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMonaco\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResized\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(monacoLoader: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monacoLoader\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     editor.IEditorConstructionOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:77\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMonaco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMonaco()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:182\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:173\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            registerOnValidatorChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnValidatorChange(fn: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationErrors\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLDivElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     editor.IStandaloneCodeEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('editor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onErrorStatusChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    Input,\n    ChangeDetectionStrategy,\n    forwardRef,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\nimport { editor } from 'monaco-editor';\n\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\n\ndeclare const monaco: any;\n\n@Component({\n    selector: 'ngx-monaco-editor',\n    template: `\n\t\n\t\t\n\t\n`,\n    styles: [\n        `:host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MonacoEditorComponent),\n            multi: true\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => MonacoEditorComponent),\n            multi: true,\n        }\n    ]\n})\nexport class MonacoEditorComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor, Validator {\n    container: HTMLDivElement;\n    editor: editor.IStandaloneCodeEditor;\n\n    value: string;\n    parseError: boolean;\n\n    @Input() options: editor.IEditorConstructionOptions;\n    @ViewChild('editor') editorContent: ElementRef;\n\n    private propagateChange: (_: any) => any;\n    private onTouched: () => void;\n    private onErrorStatusChange: () => void;\n\n    constructor(private monacoLoader: MonacoEditorLoaderService) { }\n\n    ngOnInit() {\n        this.container = this.editorContent.nativeElement;\n        this.monacoLoader.isMonacoLoaded.pipe(\n          filter(isLoaded => isLoaded),\n          take(1),\n        ).subscribe(() => {\n            this.initMonaco();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.editor && changes.options && ! changes.options.firstChange) {\n          if (changes.options.previousValue.language !== changes.options.currentValue.language) {\n            monaco.editor.setModelLanguage(\n              this.editor.getModel(),\n              this.options && this.options.language ? this.options.language : 'text'\n            );\n          }\n          if (changes.options.previousValue.theme !== changes.options.currentValue.theme) {\n            monaco.editor.setTheme(changes.options.currentValue.theme);\n          }\n        }\n    }\n\n    writeValue(value: any): void {\n        this.value = value;\n        if (this.editor && value) {\n            this.editor.setValue(value);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    validate(): ValidationErrors {\n        return (!this.parseError) ? null : {\n            parseError: {\n                valid: false,\n            }\n        };\n    }\n\n    registerOnValidatorChange?(fn: () => void): void {\n        this.onErrorStatusChange = fn;\n    }\n\n    private initMonaco() {\n        let opts: editor.IEditorConstructionOptions = {\n            value: [this.value].join('\\n'),\n            language: 'text',\n            automaticLayout: true,\n            scrollBeyondLastLine: false,\n            theme: 'vc'\n        };\n        if (this.options) {\n            opts = Object.assign({}, opts, this.options);\n        }\n        this.editor = monaco.editor.create(this.container, opts);\n        this.editor.layout();\n\n        this.editor.onDidChangeModelContent(() => {\n            this.propagateChange(this.editor.getValue());\n        });\n\n        this.editor.onDidChangeModelDecorations(() => {\n            const pastParseError = this.parseError;\n            if (monaco.editor.getModelMarkers({}).map(m => m.message).join(', ')) {\n                this.parseError = true;\n            } else {\n                this.parseError = false;\n            }\n\n            if (pastParseError !== this.parseError) {\n                this.onErrorStatusChange();\n            }\n        });\n\n        this.editor.onDidBlurEditorText(() => {\n            this.onTouched();\n        });\n    }\n\n    onResized(event) {\n        if (this.editor) {\n            this.editor.layout({\n                width: event.newWidth,\n                height: event.newHeight\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n    }\n}\n\n    \n\n\n    \n            :host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'MonacoDiffEditorComponent', 'selector': 'ngx-monaco-diff-editor'},{'name': 'MonacoEditorComponent', 'selector': 'ngx-monaco-editor'}];\n    var DIRECTIVES = [{'name': 'MonacoEditorLoaderDirective', 'selector': '[materiaLoadMonacoEditor]'},{'name': 'ResizedDirective', 'selector': '[materiaResized]'}];\n    var ACTUAL_COMPONENT = {'name': 'MonacoEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MonacoEditorLoaderDirective.html":{"url":"directives/MonacoEditorLoaderDirective.html","title":"directive - MonacoEditorLoaderDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MonacoEditorLoaderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [materiaLoadMonacoEditor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadMonacoEditor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loadMonacoEditor\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, monacoEditorLoaderService: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        monacoEditorLoaderService\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadMonacoEditor\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:6\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loadMonacoEditor\n                    \n                \n\n\n                \n                    \n                        setloadMonacoEditor(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:6\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { MonacoEditorLoaderService } from '../services/monaco-editor-loader.service';\n\n@Directive({ selector: '[materiaLoadMonacoEditor]' })\nexport class MonacoEditorLoaderDirective {\n    @Input() set loadMonacoEditor(value: any) {\n        this.monacoEditorLoaderService.monacoPath = value;\n    }\n\n    constructor(\n        private templateRef: TemplateRef,\n        private viewContainer: ViewContainerRef,\n        private monacoEditorLoaderService: MonacoEditorLoaderService) {\n        monacoEditorLoaderService.isMonacoLoaded.subscribe(isLoaded => {\n            if (isLoaded) {\n                this.viewContainer.createEmbeddedView(this.templateRef);\n            } else {\n                this.viewContainer.clear();\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MonacoEditorLoaderService.html":{"url":"injectables/MonacoEditorLoaderService.html","title":"injectable - MonacoEditorLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MonacoEditorLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _monacoPath\n                            \n                            \n                                isMonacoLoaded\n                            \n                            \n                                nodeRequire\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElectronFixScripts\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    monacoPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElectronFixScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElectronFixScripts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _monacoPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/monaco-editor/min/vs'\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMonacoLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeRequire\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        monacoPath\n                    \n                \n\n\n                \n                    \n                        setmonacoPath(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:9\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class MonacoEditorLoaderService {\n    nodeRequire: any;\n    isMonacoLoaded: BehaviorSubject = new BehaviorSubject(false);\n    private _monacoPath = 'assets/monaco-editor/min/vs';\n    set monacoPath(value: any) {\n        if (value) {\n            this._monacoPath = value;\n        }\n    }\n\n    constructor(ngZone: NgZone) {\n        const onGotAmdLoader = () => {\n            // Load monaco\n            (window).amdRequire =  (window).require;\n            if (this.nodeRequire) {\n                (window).require = this.nodeRequire;\n            }\n            (window).amdRequire.config({ paths: { 'vs': this._monacoPath } });\n            (window).amdRequire(['vs/editor/editor.main'], () => {\n                ngZone.run(() => this.isMonacoLoaded.next(true));\n            });\n        };\n\n        let loaderScript: any = null;\n        // Load AMD loader if necessary\n        if (!(window).require && !(window).amdRequire) {\n\n            loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = `${this._monacoPath}/loader.js`;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n\n        } else if (!(window).amdRequire) {\n\n            this.addElectronFixScripts();\n\n            this.nodeRequire =  (window).require;\n            loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = `${this._monacoPath}/loader.js`;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n\n        } else {\n            onGotAmdLoader();\n        }\n    }\n\n    addElectronFixScripts() {\n        const electronFixScript = document.createElement('script');\n        // workaround monaco-css not understanding the environment\n        const inlineScript = document.createTextNode('self.module = undefined;');\n        // workaround monaco-typescript not understanding the environment\n        const inlineScript2 = document.createTextNode('self.process.browser = true;');\n        electronFixScript.appendChild(inlineScript);\n        electronFixScript.appendChild(inlineScript2);\n        document.body.appendChild(electronFixScript);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MonacoEditorModule.html":{"url":"modules/MonacoEditorModule.html","title":"module - MonacoEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MonacoEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonacoEditorModule\n\n\n\ncluster_MonacoEditorModule_declarations\n\n\n\ncluster_MonacoEditorModule_exports\n\n\n\n\nMonacoDiffEditorComponent\n\nMonacoDiffEditorComponent\n\n\n\nMonacoEditorModule\n\nMonacoEditorModule\n\nMonacoEditorModule -->\n\nMonacoDiffEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorComponent\n\nMonacoEditorComponent\n\nMonacoEditorModule -->\n\nMonacoEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorLoaderDirective\n\nMonacoEditorLoaderDirective\n\nMonacoEditorModule -->\n\nMonacoEditorLoaderDirective->MonacoEditorModule\n\n\n\n\n\nResizedDirective\n\nResizedDirective\n\nMonacoEditorModule -->\n\nResizedDirective->MonacoEditorModule\n\n\n\n\n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent  -->\n\nMonacoEditorModule->MonacoDiffEditorComponent \n\n\n\n\n\nMonacoEditorComponent \n\nMonacoEditorComponent \n\nMonacoEditorComponent  -->\n\nMonacoEditorModule->MonacoEditorComponent \n\n\n\n\n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective  -->\n\nMonacoEditorModule->MonacoEditorLoaderDirective \n\n\n\n\n\nResizedDirective \n\nResizedDirective \n\nResizedDirective  -->\n\nMonacoEditorModule->ResizedDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/monaco-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                        \n                            MonacoEditorLoaderDirective\n                        \n                        \n                            ResizedDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                        \n                            MonacoEditorLoaderDirective\n                        \n                        \n                            ResizedDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MonacoEditorLoaderDirective } from './directives/monaco-editor-loader.directive';\nimport { MonacoEditorComponent } from './components/monaco-editor/monaco-editor.component';\nimport { ResizedDirective } from './directives/resized-event.directive';\nimport { MonacoDiffEditorComponent } from './components/monaco-diff-editor/monaco-diff-editor.component';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    MonacoEditorLoaderDirective,\n    MonacoEditorComponent,\n    ResizedDirective,\n    MonacoDiffEditorComponent\n  ],\n  exports: [\n    MonacoEditorLoaderDirective,\n    MonacoEditorComponent,\n    MonacoDiffEditorComponent,\n    ResizedDirective\n  ],\n  entryComponents: [MonacoEditorComponent, MonacoDiffEditorComponent]\n})\nexport class MonacoEditorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonacoOptions.html":{"url":"interfaces/MonacoOptions.html","title":"interface - MonacoOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonacoOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/interfaces/monaco-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        automaticLayout\n                                \n                                \n                                        language\n                                \n                                \n                                            Optional\n                                        lineNumbers\n                                \n                                \n                                            Optional\n                                        minimap\n                                \n                                \n                                            Optional\n                                        readOnly\n                                \n                                \n                                            Optional\n                                        scrollBeyondLastLine\n                                \n                                \n                                            Optional\n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        automaticLayout\n                                    \n                                \n                                \n                                    \n                                        automaticLayout:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineNumbers\n                                    \n                                \n                                \n                                    \n                                        lineNumbers:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimap\n                                    \n                                \n                                \n                                    \n                                        minimap:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollBeyondLastLine\n                                    \n                                \n                                \n                                    \n                                        scrollBeyondLastLine:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MonacoOptions {\n    language: string;\n    lineNumbers?: boolean;\n    theme?: string;\n    readOnly?: boolean;\n    scrollBeyondLastLine?: boolean;\n    automaticLayout?: boolean;\n    minimap?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResizedDirective.html":{"url":"directives/ResizedDirective.html","title":"directive - ResizedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ResizedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [materiaResized]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                oldHeight\n                            \n                            \n                                    Private\n                                oldWidth\n                            \n                            \n                                    Private\n                                resizeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onResized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        resized\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onResized()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resizeEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Output, OnInit } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\nexport class ResizedEvent {\n    constructor(\n        readonly element: ElementRef,\n        readonly newWidth: number,\n        readonly newHeight: number,\n        readonly oldWidth: number,\n        readonly oldHeight: number\n    ) { }\n}\n\n@Directive({\n    selector: '[materiaResized]',\n    exportAs: 'materiaResized'\n})\nexport class ResizedDirective implements OnInit {\n\n    @Output('resized')\n    readonly resized = new EventEmitter();\n\n    private oldWidth: number;\n    private oldHeight: number;\n    private resizeEvent: ResizeSensor;\n\n    constructor(private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.resizeEvent = new ResizeSensor(this.element.nativeElement, x => this.onResized());\n        this.onResized();\n    }\n\n    private onResized(): void {\n        const newWidth = this.element.nativeElement.clientWidth;\n        const newHeight = this.element.nativeElement.clientHeight;\n\n        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n            return;\n        }\n\n        const event = new ResizedEvent(\n            this.element,\n            newWidth,\n            newHeight,\n            this.oldWidth,\n            this.oldHeight);\n\n        this.oldWidth = this.element.nativeElement.clientWidth;\n        this.oldHeight = this.element.nativeElement.clientHeight;\n\n        this.resized.next(event);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResizedEvent.html":{"url":"classes/ResizedEvent.html","title":"class - ResizedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResizedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, newWidth: number, newHeight: number, oldWidth: number, oldHeight: number)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oldWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oldHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Output, OnInit } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\nexport class ResizedEvent {\n    constructor(\n        readonly element: ElementRef,\n        readonly newWidth: number,\n        readonly newHeight: number,\n        readonly oldWidth: number,\n        readonly oldHeight: number\n    ) { }\n}\n\n@Directive({\n    selector: '[materiaResized]',\n    exportAs: 'materiaResized'\n})\nexport class ResizedDirective implements OnInit {\n\n    @Output('resized')\n    readonly resized = new EventEmitter();\n\n    private oldWidth: number;\n    private oldHeight: number;\n    private resizeEvent: ResizeSensor;\n\n    constructor(private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.resizeEvent = new ResizeSensor(this.element.nativeElement, x => this.onResized());\n        this.onResized();\n    }\n\n    private onResized(): void {\n        const newWidth = this.element.nativeElement.clientWidth;\n        const newHeight = this.element.nativeElement.clientHeight;\n\n        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n            return;\n        }\n\n        const event = new ResizedEvent(\n            this.element,\n            newWidth,\n            newHeight,\n            this.oldWidth,\n            this.oldHeight);\n\n        this.oldWidth = this.element.nativeElement.clientWidth;\n        this.oldHeight = this.element.nativeElement.clientHeight;\n\n        this.resized.next(event);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n            \n            component\n            MonacoDiffEditorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n            \n            component\n            MonacoEditorComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts\n            \n            directive\n            MonacoEditorLoaderDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n            \n            directive\n            ResizedDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n            \n            class\n            ResizedEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/interfaces/monaco-options.ts\n            \n            interface\n            MonacoOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts\n            \n            injectable\n            MonacoEditorLoaderService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.1\n        \n            @angular/cdk : ^7.2.1\n        \n            @angular/common : ~7.2.1\n        \n            @angular/compiler : ~7.2.1\n        \n            @angular/core : ~7.2.1\n        \n            @angular/flex-layout : 7.0.0-beta.22\n        \n            @angular/forms : ~7.2.1\n        \n            @angular/http : ~7.2.1\n        \n            @angular/material : ^7.2.1\n        \n            @angular/platform-browser : ~7.2.1\n        \n            @angular/platform-browser-dynamic : ~7.2.1\n        \n            @angular/router : ~7.2.1\n        \n            core-js : ^2.5.4\n        \n            css-element-queries : ^1.1.1\n        \n            monaco-editor : ^0.15.6\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDocumentation\nTry it out on : live demo.\nApi reference available on : documentation.\nInstallation\nInstall from npm repository:\nnpm install @materia-ui/ngx-monaco-editor --saveAdd the glob to assets in angular.json (to make monaco-editor lib available to the app):\n{\n    ...\n    \"projects\": {\n      \"YOUR_APP_NAME\": {\n          ...\n          \"architect\": {\n              \"build\": {\n                ...\n                \"options\": {\n                    ...\n                    \"assets\": [\n                        { \"glob\": \"**/*\", \"input\": \"node_modules/monaco-editor\", \"output\": \"assets/monaco-editor/\" }\n                    ],\n                    ...\n                }\n                ...\n              }\n            }\n            ...\n        }\n    },\n    ...\n}Sample\nInclude MonacoEditorModule in Main Module and Feature Modules where you want to use the editor component.(eg: app.module.ts): \nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MonacoEditorModule } from '@materia-ui/ngx-monaco-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MonacoEditorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Create Editor options in component.(eg: app.component.ts)\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  editorOptions = {theme: 'vs-dark', language: 'javascript'};\n  code: string = 'function x() {\\nconsole.log(\"Hello world!\");\\n}';\n  originalCode: string = 'function x() { // TODO }';\n}Include editor component in your html with options input and ngModel bindings  (eg: app.component.html) or using ReactiveForm features.\nInclude diff-editor component in your html and use the following inputs: options, original and modified (eg: app.component.html).\nBoth components support all available monaco-editor options:\n\nEditorOptions: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html,\nDiffEditorOptions: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html.\n\nMotivations\nWe wanted to use monaco-editor library with angular in our desktop application: Materia Designer.\nThe current angular libraries did not cover all of our needs, notably:\n\nWorks on Browser and Electron application,\nSupport flex-box container and correctly resize editor when container size changes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MonacoEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonacoEditorModule\n\n\n\ncluster_MonacoEditorModule_declarations\n\n\n\ncluster_MonacoEditorModule_exports\n\n\n\n\nMonacoDiffEditorComponent\n\nMonacoDiffEditorComponent\n\n\n\nMonacoEditorModule\n\nMonacoEditorModule\n\nMonacoEditorModule -->\n\nMonacoDiffEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorComponent\n\nMonacoEditorComponent\n\nMonacoEditorModule -->\n\nMonacoEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorLoaderDirective\n\nMonacoEditorLoaderDirective\n\nMonacoEditorModule -->\n\nMonacoEditorLoaderDirective->MonacoEditorModule\n\n\n\n\n\nResizedDirective\n\nResizedDirective\n\nMonacoEditorModule -->\n\nResizedDirective->MonacoEditorModule\n\n\n\n\n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent  -->\n\nMonacoEditorModule->MonacoDiffEditorComponent \n\n\n\n\n\nMonacoEditorComponent \n\nMonacoEditorComponent \n\nMonacoEditorComponent  -->\n\nMonacoEditorModule->MonacoEditorComponent \n\n\n\n\n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective  -->\n\nMonacoEditorModule->MonacoEditorLoaderDirective \n\n\n\n\n\nResizedDirective \n\nResizedDirective \n\nResizedDirective  -->\n\nMonacoEditorModule->ResizedDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            monaco   (src/.../monaco-diff-editor.component.ts)\n                        \n                        \n                            monaco   (src/.../monaco-editor.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monaco\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monaco\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
