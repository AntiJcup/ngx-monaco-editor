var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/MonacoDiffEditorComponent.html",[0,0.946,1,0.946]],["body/components/MonacoDiffEditorComponent.html",[0,1.009,1,1.15,2,1.141,3,0.357,4,0.357,5,2.079,6,1.049,7,1.049,8,0.295,9,0.758,10,0.471,11,2.283,12,1.802,13,1.922,14,0.717,15,1.141,16,1.421,17,2.079,18,2.079,19,0.717,20,1.669,21,1.669,22,1.337,23,2.37,24,1.121,25,2.079,26,0.068,27,2.53,28,1.702,29,2.256,30,2.079,31,2.079,32,2.079,33,2.079,34,2.755,35,3.09,36,2.755,37,2.079,38,3.34,39,3.09,40,2.755,41,2.079,42,2.256,43,2.079,44,2.755,45,2.889,46,2.256,47,2.079,48,2.079,49,2.079,50,2.079,51,1.702,52,1.669,53,0.357,54,0.96,55,2.079,56,1.141,57,1.009,58,2.37,59,1.669,60,2.37,61,1.619,62,1.141,63,1.141,64,2.889,65,1.702,66,2.889,67,0.509,68,1.049,69,1.15,70,1.597,71,2.128,72,1.009,73,1.337,74,0.842,75,0.849,76,1.669,77,1.363,78,1.338,79,2.651,80,1.338,81,1.338,82,1.338,83,1.488,84,1.255,85,1.669,86,2.37,87,1.338,88,0.859,89,1.338,90,1.338,91,1.669,92,1.338,93,0.603,94,1.669,95,1.338,96,2.128,97,1.338,98,1.421,99,1.049,100,2.128,101,0.807,102,1.049,103,1.619,104,1.049,105,0.295,106,1.049,107,1.049,108,1.049,109,0.859,110,0.859,111,1.049,112,1.488,113,0.295,114,0.187,115,0.717,116,1.049,117,1.049,118,1.049,119,1.049,120,0.859,121,1.049,122,1.049,123,1.049,124,2.587,125,1.338,126,1.338,127,1.338,128,1.338,129,2.128,130,2.128,131,2.128,132,1.049,133,1.049,134,1.049,135,1.049,136,1.049,137,1.049,138,1.669,139,1.049,140,0.96,141,2.37,142,0.859,143,0.717,144,1.049,145,1.669,146,1.049,147,1.338,148,1.669,149,1.049,150,1.049,151,1.049,152,0.717,153,1.367,154,0.96,155,0.357,156,2.37,157,1.049,158,1.049,159,0.509,160,0.603,161,0.428,162,1.049,163,0.357,164,0.717,165,1.049,166,0.018,167,0.029,168,0.018]],["title/components/MonacoEditorComponent.html",[0,0.946,159,0.946]],["body/components/MonacoEditorComponent.html",[0,0.849,1,0.396,2,0.93,3,0.278,4,0.278,5,1.75,6,0.817,7,0.817,8,0.229,9,0.778,10,0.473,11,2.344,12,0.396,13,1.973,14,0.558,15,0.93,16,1.196,17,1.75,18,1.75,19,0.558,20,1.361,21,1.361,22,1.189,23,2.042,24,1.044,25,1.75,26,0.068,27,2.315,28,1.433,29,2.006,30,1.75,31,1.75,32,1.75,33,1.75,34,2.45,35,2.827,36,2.45,37,1.75,38,3.123,39,2.827,40,2.45,41,1.75,42,2.006,43,1.75,44,2.45,45,2.599,46,2.006,47,2.269,48,1.75,49,1.75,50,1.75,51,1.433,52,1.361,53,0.278,54,0.783,55,1.75,56,0.93,57,1.486,58,2.042,59,1.361,60,2.042,61,1.395,62,0.93,63,0.93,65,1.433,67,0.396,68,0.817,69,0.991,70,1.651,72,1.261,73,1.416,74,0.905,75,1.154,76,1.361,77,1.305,83,1.678,84,1.604,85,1.361,86,2.042,88,0.669,91,1.361,93,0.47,94,1.361,98,1.196,99,0.817,101,0.773,102,0.817,103,0.93,104,0.817,105,0.229,106,0.817,107,0.817,108,0.817,109,0.669,110,0.669,111,0.817,112,0.783,113,0.229,114,0.145,115,0.558,116,0.817,117,0.817,118,0.817,119,0.817,120,0.669,121,0.817,122,0.817,123,0.817,124,2.45,132,0.817,133,0.817,134,0.817,135,0.817,136,0.817,137,0.817,138,1.361,139,0.817,140,0.47,141,2.042,142,2.006,143,0.558,144,0.817,145,1.75,146,0.817,148,1.361,149,0.817,150,0.817,151,0.817,152,0.558,153,1.115,154,0.783,155,0.278,156,2.042,157,0.817,158,0.817,159,1.321,160,0.47,161,0.333,162,0.817,163,0.278,164,0.558,165,0.817,166,0.014,167,0.023,168,0.014,169,2.232,170,2.232,171,0.93,172,2.604,173,2.232,174,2.604,175,2.893,176,2.604,177,2.232,178,2.232,179,2.232,180,2.604,181,2.232,182,2.229,183,1.736,184,1.736,185,1.736,186,2.604,187,1.736,188,1.736,189,2.232,190,1.042,191,1.042,192,1.042,193,1.042,194,1.042,195,1.042,196,1.736,197,1.042,198,3.125,199,1.736,200,1.042,201,1.042,202,1.042,203,2.042,204,1.042,205,2.232,206,1.736,207,1.042,208,1.042,209,1.736,210,1.042,211,1.736,212,1.042,213,1.042,214,1.042,215,1.361,216,1.042,217,0.817,218,1.042,219,0.669,220,1.736,221,1.042,222,1.042,223,1.042,224,1.042,225,1.736,226,1.042,227,1.042,228,1.042,229,1.042,230,1.736,231,0.558,232,2.893,233,0.817,234,1.042,235,2.232,236,1.042,237,1.736,238,1.042,239,0.669,240,0.817,241,0.817,242,1.042,243,1.042,244,1.042,245,1.042,246,1.736,247,1.042,248,1.042,249,1.042]],["title/directives/MonacoEditorLoaderDirective.html",[155,0.665,161,0.796]],["body/directives/MonacoEditorLoaderDirective.html",[3,0.753,4,0.753,8,0.62,9,0.764,10,0.448,19,1.509,22,1.391,24,1.19,26,0.068,53,0.753,57,1.545,63,1.959,67,1.391,69,1.767,70,1.545,72,1.391,73,1.391,74,0.894,75,1.17,83,1.271,84,1.072,101,0.977,103,1.959,105,0.62,109,1.808,110,1.808,113,0.62,114,0.393,120,1.808,155,0.977,160,1.271,161,1.17,166,0.038,167,0.049,168,0.038,182,2.347,250,3.369,251,2.209,252,3.656,253,4.296,254,2.867,255,2.817,256,4.562,257,4.059,258,4.296,259,2.817,260,3.656,261,2.817,262,2.209,263,2.817,264,2.817,265,2.817,266,2.817,267,2.817]],["title/injectables/MonacoEditorLoaderService.html",[69,0.946,268,1.333]],["body/injectables/MonacoEditorLoaderService.html",[3,0.56,4,0.56,8,0.461,9,0.764,10,0.473,24,1.148,26,0.068,53,0.56,54,1.348,56,1.601,57,1.325,67,0.797,69,1.137,70,1.588,72,1.137,73,1.137,74,0.884,75,0.956,77,0.945,83,1.348,84,1.137,101,0.798,105,0.461,112,1.713,113,0.461,114,0.292,142,1.918,166,0.028,167,0.04,168,0.028,182,2.578,217,2.343,231,1.123,233,1.643,254,2.343,262,1.643,268,1.601,269,2.095,270,3.369,271,1.643,272,3.483,273,3.483,274,3.483,275,3.797,276,2.988,277,2.988,278,4.015,279,2.095,280,2.095,281,2.343,282,2.988,283,2.095,284,3.483,285,1.601,286,2.988,287,2.095,288,2.095,289,2.095,290,2.095,291,1.643,292,2.095,293,1.643,294,2.095,295,2.988,296,3.797,297,2.988,298,2.988,299,2.988,300,2.988,301,3.483,302,3.797,303,3.483,304,2.095,305,2.095,306,1.643,307,2.095,308,3.483,309,2.095,310,2.095,311,2.095,312,3.483,313,2.988,314,2.988,315,2.988,316,2.988,317,2.988,318,2.988,319,2.095,320,2.095,321,2.988,322,1.123,323,2.988,324,2.988,325,2.095,326,2.095,327,2.095,328,2.095,329,2.095,330,2.095,331,2.095,332,2.095,333,2.095]],["title/modules/MonacoEditorModule.html",[334,1.333,335,1.122]],["body/modules/MonacoEditorModule.html",[1,1.857,3,0.718,4,0.718,8,0.592,9,0.478,10,0.28,12,1.35,13,1.6,24,0.718,26,0.068,101,1.172,105,0.592,113,0.592,114,0.375,152,1.441,159,1.857,161,1.546,163,1.291,166,0.036,167,0.048,168,0.036,171,1.441,334,1.441,335,2.219,336,1.441,337,1.441,338,2.548,339,1.726,340,3.112,341,2.108,342,2.108,343,2.108,344,2.781,345,2.108,346,1.441,347,2.689,348,2.689,349,3.546,350,2.781,351,2.689,352,2.689,353,3.546,354,3.546,355,2.689,356,2.689,357,2.108]],["title/interfaces/MonacoOptions.html",[358,1.333,359,1.597]],["body/interfaces/MonacoOptions.html",[3,0.82,4,0.82,8,0.675,9,0.546,10,0.32,26,0.066,53,0.82,54,1.741,74,1.043,75,1.575,77,2.104,113,0.675,140,2,143,2.376,166,0.041,167,0.052,168,0.041,215,3.859,239,2.847,240,3.477,241,3.477,358,1.643,359,2.479,360,3.067,361,2.405,362,2.405,363,4.434,364,4.434]],["title/directives/ResizedDirective.html",[155,0.665,163,0.665]],["body/directives/ResizedDirective.html",[3,0.606,4,0.606,8,0.499,9,0.797,10,0.467,15,1.693,16,1.948,19,1.215,22,1.202,26,0.068,53,0.606,54,1.425,56,1.693,57,1.788,61,2.107,62,2.107,67,1.202,70,1.672,72,0.863,73,0.863,74,0.911,75,0.726,83,1.425,84,1.496,93,1.023,98,2.216,101,0.844,105,0.499,112,1.64,113,0.696,114,0.441,115,1.215,140,1.982,154,1.774,155,0.844,160,1.023,163,0.844,164,1.948,166,0.03,167,0.042,168,0.03,231,1.215,285,1.948,322,1.215,365,2.877,366,1.456,367,3.084,368,3.084,369,2.851,370,3.159,371,2.851,372,1.778,373,3.159,374,2.851,375,2.267,376,2.267,377,2.267,378,3.514,379,2.267,380,2.267,381,2.851,382,1.456,383,1.456,384,1.693,385,3.084,386,3.084,387,1.778,388,1.778,389,1.778,390,1.778,391,1.456,392,2.477,393,2.477,394,2.477,395,2.851,396,2.851,397,1.778,398,1.778]],["title/classes/ResizedEvent.html",[114,0.347,384,1.333]],["body/classes/ResizedEvent.html",[3,0.689,4,0.689,8,0.568,9,0.614,10,0.36,15,1.381,16,1.848,22,0.981,26,0.068,57,1.579,61,1.381,62,1.381,67,1.312,70,0.981,72,0.981,73,0.981,74,0.568,75,0.825,84,1.312,93,1.163,98,2.318,101,0.921,105,0.568,112,1.753,113,0.759,114,0.481,115,1.381,140,2.05,154,1.872,155,0.921,163,0.689,164,1.848,166,0.035,167,0.046,168,0.035,231,1.381,285,2.082,322,1.381,365,2.214,366,1.655,367,3.254,368,3.254,369,2.021,371,2.021,372,2.021,374,2.704,378,3.806,381,2.704,382,1.655,383,1.655,384,2.082,385,3.49,386,3.49,387,2.021,388,2.021,389,2.021,390,2.021,391,1.655,392,2.704,393,2.704,394,2.704,395,3.047,396,3.047,397,2.021,398,2.021,399,2.577,400,2.577]],["title/coverage.html",[401,2.64]],["body/coverage.html",[0,1.444,1,1.136,8,0.658,9,0.856,10,0.509,11,2.353,12,1.671,13,1.981,14,2.353,24,1.014,26,0.065,42,3.088,51,1.917,69,1.136,74,0.658,114,0.417,155,1.014,159,1.136,161,0.956,163,0.798,166,0.04,167,0.051,168,0.04,250,2.341,251,2.341,268,1.6,270,2.341,271,2.341,285,1.6,358,1.6,359,1.917,361,2.341,362,2.341,365,2.437,366,2.437,384,1.6,401,2.341,402,1.917,403,2.986,404,2.986,405,2.986,406,3.795,407,3.795,408,2.986,409,2.986,410,3.795,411,2.986,412,2.986,413,2.986]],["title/dependencies.html",[337,1.599,414,2.09]],["body/dependencies.html",[10,0.344,24,0.88,26,0.068,105,0.726,154,1.486,166,0.044,167,0.054,168,0.044,219,2.115,291,2.584,322,1.765,337,1.765,383,2.115,415,3.294,416,4.947,417,3.294,418,3.294,419,3.294,420,3.294,421,3.294,422,3.294,423,3.294,424,3.294,425,3.294,426,3.165,427,2.591,428,3.294,429,3.294,430,3.294,431,3.294,432,3.294,433,3.294,434,3.294,435,3.294,436,3.294,437,3.294]],["title/index.html",[53,0.559,438,1.639,439,1.639]],["body/index.html",[0,1.484,2,1.191,10,0.428,12,0.846,22,0.846,24,1.251,26,0.068,27,1.427,29,1.427,46,2,63,1.191,64,1.743,65,2.636,66,1.743,77,1.405,88,1.427,101,1.137,103,1.669,105,0.686,113,0.686,114,0.435,143,1.191,153,2,166,0.03,167,0.042,168,0.03,171,1.191,203,2.443,219,1.427,239,1.427,281,1.743,293,1.743,306,1.743,334,1.191,335,1.623,336,1.191,338,1.427,339,1.427,346,1.191,350,2.443,357,1.743,382,1.427,391,2,402,2,426,1.743,427,2,440,2.222,441,2.222,442,2.222,443,2.222,444,2.222,445,3.597,446,2.222,447,3.115,448,3.115,449,2.222,450,2.821,451,3.115,452,2.222,453,3.115,454,3.115,455,2.222,456,2.222,457,2.222,458,3.115,459,2.222,460,2.222,461,2.222,462,2.222,463,2.222,464,2.222,465,3.597,466,2.222,467,2.222,468,2.222,469,2.821,470,3.115,471,2.222,472,3.115,473,3.115,474,3.898,475,2.222,476,2.222,477,2.222,478,2.222,479,2.222,480,3.597,481,3.115,482,2.222,483,2.222,484,2.222,485,2.222,486,2.222,487,2.222,488,2.222,489,2.222,490,2.222,491,3.115,492,2.222,493,2.222,494,2.222,495,1.743,496,2.222,497,2.443,498,3.115,499,2.222,500,2.222,501,2.222,502,2.222,503,2.222,504,2.222,505,3.115,506,2.222,507,3.115,508,2.222,509,2.222,510,2.222,511,2.222,512,2.222,513,2.222,514,2.222,515,2.222,516,2.222,517,2.222,518,2.222]],["title/license.html",[438,1.639,439,1.639,519,1.639]],["body/license.html",[26,0.052,93,1.373,166,0.041,167,0.052,168,0.041,346,1.631,402,1.955,450,2.387,469,3.013,495,2.387,519,2.387,520,3.044,521,4.21,522,3.044,523,3.044,524,3.842,525,3.044,526,3.044,527,3.044,528,3.044,529,3.044,530,3.044,531,3.842,532,4.827,533,3.044,534,3.044,535,3.044,536,4.21,537,3.044,538,3.842,539,3.044,540,3.044,541,3.044,542,3.044,543,3.044,544,3.044,545,3.044,546,3.044,547,3.044,548,3.842,549,3.044,550,3.044,551,3.044,552,3.044,553,3.044,554,3.044,555,3.842,556,3.842,557,3.044,558,3.044,559,3.044,560,3.044,561,3.044,562,3.044,563,3.044,564,3.044,565,3.044,566,3.044,567,3.044,568,3.044,569,3.044,570,3.044,571,3.044,572,3.044,573,3.044,574,3.044,575,3.044,576,3.044,577,3.044,578,3.044,579,3.044,580,3.044,581,3.044,582,3.044,583,3.044,584,3.044,585,3.044]],["title/modules.html",[336,1.804]],["body/modules.html",[26,0.059,166,0.052,167,0.059,168,0.052,335,1.74,336,2.067,427,2.476,497,3.024,586,3.857,587,3.857]],["title/overview.html",[588,2.64]],["body/overview.html",[1,1.814,2,1.694,26,0.066,28,2.878,114,0.441,152,1.694,159,1.814,160,1.426,161,1.526,163,1.274,166,0.042,167,0.053,168,0.042,171,1.694,268,1.694,334,2.108,335,2.245,337,1.694,338,2.029,339,2.029,340,2.478,341,2.478,342,2.478,343,2.478,344,3.085,345,2.478,346,1.694,358,1.694,588,2.478,589,3.934]],["title/miscellaneous/variables.html",[590,1.639,591,2.34]],["body/miscellaneous/variables.html",[9,0.759,10,0.506,11,2.285,12,1.727,13,1.924,14,2.513,26,0.063,53,0.965,74,0.939,166,0.048,167,0.057,168,0.048,590,2.831,591,2.831,592,4.264]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":42,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{}}}],["0.15.6",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":44,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["1",{"_index":28,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"overview.html":{}}}],["1.1.1",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":39,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["2",{"_index":589,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":523,"title":{},"body":{"license.html":{}}}],["6.3.3",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["7.2.1",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":220,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["_monacopath",{"_index":272,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["above",{"_index":554,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":254,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["action",{"_index":579,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":165,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["addelectronfixscripts",{"_index":275,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["amd",{"_index":309,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["and/or",{"_index":546,"title":{},"body":{"license.html":{}}}],["angular",{"_index":505,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":455,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":105,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":219,"title":{},"body":{"components/MonacoEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/http",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":426,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":443,"title":{},"body":{"index.html":{}}}],["app",{"_index":458,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":475,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":480,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":478,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":471,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":474,"title":{},"body":{"index.html":{}}}],["application",{"_index":507,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":476,"title":{},"body":{"index.html":{}}}],["architect",{"_index":461,"title":{},"body":{"index.html":{}}}],["arising",{"_index":583,"title":{},"body":{"license.html":{}}}],["assets",{"_index":454,"title":{},"body":{"index.html":{}}}],["assets/monaco",{"_index":281,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["associated",{"_index":533,"title":{},"body":{"license.html":{}}}],["authors",{"_index":572,"title":{},"body":{"license.html":{}}}],["automaticlayout",{"_index":240,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["available",{"_index":445,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":284,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["behaviorsubject(false",{"_index":286,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["beta.22",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["bindings",{"_index":490,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":215,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["bootstrap",{"_index":339,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":31,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["both",{"_index":496,"title":{},"body":{"index.html":{}}}],["box",{"_index":29,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["browse",{"_index":587,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":427,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":472,"title":{},"body":{"index.html":{}}}],["build",{"_index":462,"title":{},"body":{"index.html":{}}}],["c",{"_index":522,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":20,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changedetectionstrategy",{"_index":104,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":21,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes",{"_index":88,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["changes.code",{"_index":125,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.code.firstchange",{"_index":126,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.modified",{"_index":127,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.modified.firstchange",{"_index":128,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.options",{"_index":132,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.language",{"_index":222,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.readonly",{"_index":138,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.theme",{"_index":135,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.firstchange",{"_index":133,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.language",{"_index":221,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.readonly",{"_index":137,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.theme",{"_index":134,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["charge",{"_index":528,"title":{},"body":{"license.html":{}}}],["claim",{"_index":575,"title":{},"body":{"license.html":{}}}],["class",{"_index":114,"title":{"classes/ResizedEvent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classes",{"_index":399,"title":{},"body":{"classes/ResizedEvent.html":{}}}],["cluster_monacoeditormodule",{"_index":341,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["cluster_monacoeditormodule_declarations",{"_index":342,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["cluster_monacoeditormodule_exports",{"_index":343,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["code",{"_index":484,"title":{},"body":{"index.html":{}}}],["column",{"_index":33,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["component",{"_index":0,"title":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.(eg",{"_index":470,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":157,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["components/monaco",{"_index":353,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["conditions",{"_index":553,"title":{},"body":{"license.html":{}}}],["connection",{"_index":584,"title":{},"body":{"license.html":{}}}],["const",{"_index":112,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor",{"_index":67,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(element",{"_index":372,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(monacoloader",{"_index":68,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["constructor(ngzone",{"_index":277,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["constructor(private",{"_index":115,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(templateref",{"_index":255,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["container",{"_index":46,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["contract",{"_index":580,"title":{},"body":{"license.html":{}}}],["controlvalueaccessor",{"_index":169,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["copies",{"_index":548,"title":{},"body":{"license.html":{}}}],["copy",{"_index":531,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":521,"title":{},"body":{"license.html":{}}}],["core",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["correctly",{"_index":516,"title":{},"body":{"index.html":{}}}],["cover",{"_index":511,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":401,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":477,"title":{},"body":{"index.html":{}}}],["css",{"_index":322,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["current",{"_index":509,"title":{},"body":{"index.html":{}}}],["damages",{"_index":576,"title":{},"body":{"license.html":{}}}],["dark",{"_index":482,"title":{},"body":{"index.html":{}}}],["deal",{"_index":535,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":585,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":338,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["declare",{"_index":111,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["default",{"_index":217,"title":{},"body":{"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["defined",{"_index":70,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["demo",{"_index":442,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":337,"title":{"dependencies.html":{}},"body":{"modules/MonacoEditorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["designer",{"_index":508,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":506,"title":{},"body":{"index.html":{}}}],["diff",{"_index":12,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["diffeditoroptions",{"_index":500,"title":{},"body":{"index.html":{}}}],["direction",{"_index":32,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["directive",{"_index":155,"title":{"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["directives",{"_index":160,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"overview.html":{}}}],["directives/monaco",{"_index":351,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["directives/resized",{"_index":355,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["display",{"_index":34,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["distribute",{"_index":544,"title":{},"body":{"license.html":{}}}],["document.body.appendchild(electronfixscript",{"_index":333,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.body.appendchild(loaderscript",{"_index":318,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createelement('script",{"_index":312,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createtextnode('self.module",{"_index":326,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createtextnode('self.process.browser",{"_index":330,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["documentation",{"_index":402,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["dynamic",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["editor",{"_index":24,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["editor'},{'name",{"_index":158,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editor.component",{"_index":354,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor.component.ts",{"_index":14,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.component.ts:102",{"_index":82,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:112",{"_index":207,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:121",{"_index":197,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:122",{"_index":92,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:125",{"_index":200,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:129",{"_index":204,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:131",{"_index":89,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:137",{"_index":202,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:141",{"_index":191,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:177",{"_index":195,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:186",{"_index":193,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:57",{"_index":95,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:58",{"_index":97,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:60",{"_index":81,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":78,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:62",{"_index":80,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:64",{"_index":71,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":90,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:71",{"_index":190,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":212,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:74",{"_index":208,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":210,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:76",{"_index":218,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":216,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":87,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:79",{"_index":214,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:80",{"_index":213,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:81",{"_index":188,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:85",{"_index":194,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:95",{"_index":192,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.idiffeditorconstructionoptions",{"_index":79,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.ieditorconstructionoptions",{"_index":189,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.istandalonecodeeditor",{"_index":209,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.istandalonediffeditor",{"_index":96,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.module.ts",{"_index":348,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html",{"_index":501,"title":{},"body":{"index.html":{}}}],["editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html",{"_index":499,"title":{},"body":{"index.html":{}}}],["editor/min/vs",{"_index":282,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["editor/monaco",{"_index":13,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/src/lib/components/monaco",{"_index":11,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/src/lib/directives/monaco",{"_index":250,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"coverage.html":{}}}],["editor/src/lib/directives/resized",{"_index":365,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["editor/src/lib/interfaces/monaco",{"_index":361,"title":{},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["editor/src/lib/monaco",{"_index":347,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor/src/lib/services/monaco",{"_index":270,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["editorcontent",{"_index":55,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editoroptions",{"_index":481,"title":{},"body":{"index.html":{}}}],["eg",{"_index":491,"title":{},"body":{"index.html":{}}}],["electron",{"_index":515,"title":{},"body":{"index.html":{}}}],["electronfixscript",{"_index":320,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["electronfixscript.appendchild(inlinescript",{"_index":331,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["electronfixscript.appendchild(inlinescript2",{"_index":332,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["element",{"_index":154,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["elementref",{"_index":98,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ellipsis",{"_index":48,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["entrycomponents",{"_index":349,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["environment",{"_index":324,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["event",{"_index":93,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"license.html":{}}}],["event.directive",{"_index":356,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["event.directive.ts",{"_index":366,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["event.directive.ts:21",{"_index":375,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:23",{"_index":380,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:24",{"_index":379,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:25",{"_index":373,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:30",{"_index":376,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:35",{"_index":377,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:4",{"_index":400,"title":{},"body":{"classes/ResizedEvent.html":{}}}],["event.newheight",{"_index":150,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["event.newwidth",{"_index":149,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["eventemitter",{"_index":374,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["export",{"_index":113,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["exportas",{"_index":387,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["exports",{"_index":340,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["express",{"_index":563,"title":{},"body":{"license.html":{}}}],["false",{"_index":235,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["feature",{"_index":467,"title":{},"body":{"index.html":{}}}],["features",{"_index":494,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["files",{"_index":534,"title":{},"body":{"license.html":{}}}],["filter",{"_index":106,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["filter(isloaded",{"_index":119,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["fitness",{"_index":568,"title":{},"body":{"license.html":{}}}],["flex",{"_index":27,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["fn",{"_index":198,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["following",{"_index":495,"title":{},"body":{"index.html":{},"license.html":{}}}],["formsmodule",{"_index":473,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":175,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["free",{"_index":527,"title":{},"body":{"license.html":{}}}],["function",{"_index":203,"title":{},"body":{"components/MonacoEditorComponent.html":{},"index.html":{}}}],["furnished",{"_index":551,"title":{},"body":{"license.html":{}}}],["getting",{"_index":438,"title":{"index.html":{},"license.html":{}},"body":{}}],["glob",{"_index":453,"title":{},"body":{"index.html":{}}}],["granted",{"_index":526,"title":{},"body":{"license.html":{}}}],["height",{"_index":45,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["hereby",{"_index":525,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":36,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["holders",{"_index":573,"title":{},"body":{"license.html":{}}}],["host",{"_index":25,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["html",{"_index":153,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["htmldivelement",{"_index":94,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["https://microsoft.github.io/monaco",{"_index":498,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":15,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["implied",{"_index":564,"title":{},"body":{"license.html":{}}}],["import",{"_index":101,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["imports",{"_index":357,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{}}}],["include",{"_index":465,"title":{},"body":{"index.html":{}}}],["included",{"_index":557,"title":{},"body":{"license.html":{}}}],["including",{"_index":538,"title":{},"body":{"license.html":{}}}],["index",{"_index":53,"title":{"index.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["initmonaco",{"_index":58,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["injectable",{"_index":268,"title":{"injectables/MonacoEditorLoaderService.html":{}},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["inlinescript",{"_index":325,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["inlinescript2",{"_index":329,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["input",{"_index":103,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"index.html":{}}}],["inputs",{"_index":63,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"index.html":{}}}],["install",{"_index":447,"title":{},"body":{"index.html":{}}}],["installation",{"_index":446,"title":{},"body":{"index.html":{}}}],["interface",{"_index":358,"title":{"interfaces/MonacoOptions.html":{}},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":360,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["isloaded",{"_index":120,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["ismonacoloaded",{"_index":273,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["javascript",{"_index":483,"title":{},"body":{"index.html":{}}}],["js",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":562,"title":{},"body":{"license.html":{}}}],["language",{"_index":239,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["layout",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":152,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["liability",{"_index":577,"title":{},"body":{"license.html":{}}}],["liable",{"_index":574,"title":{},"body":{"license.html":{}}}],["lib",{"_index":457,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":510,"title":{},"body":{"index.html":{}}}],["library",{"_index":504,"title":{},"body":{"index.html":{}}}],["license",{"_index":519,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":539,"title":{},"body":{"license.html":{}}}],["limited",{"_index":565,"title":{},"body":{"license.html":{}}}],["linenumbers",{"_index":363,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["live",{"_index":441,"title":{},"body":{"index.html":{}}}],["load",{"_index":300,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader",{"_index":310,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.directive",{"_index":352,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["loader.directive.ts",{"_index":251,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"coverage.html":{}}}],["loader.directive.ts:6",{"_index":260,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.directive.ts:8",{"_index":259,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.service",{"_index":110,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.service.ts",{"_index":271,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:13",{"_index":279,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:6",{"_index":288,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:61",{"_index":280,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:7",{"_index":287,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:8",{"_index":283,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:9",{"_index":290,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript",{"_index":308,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.addeventlistener('load",{"_index":317,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.src",{"_index":315,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.type",{"_index":313,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loadmonacoeditor",{"_index":253,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loadmonacoeditor(value",{"_index":263,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["m.message).join",{"_index":248,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["main",{"_index":466,"title":{},"body":{"index.html":{}}}],["make",{"_index":456,"title":{},"body":{"index.html":{}}}],["matching",{"_index":167,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materia",{"_index":450,"title":{},"body":{"index.html":{},"license.html":{}}}],["materialoadmonacoeditor",{"_index":252,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["materialoadmonacoeditor]'},{'name",{"_index":162,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["materiaresized",{"_index":164,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["max",{"_index":37,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["merchantability",{"_index":567,"title":{},"body":{"license.html":{}}}],["merge",{"_index":542,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{}}}],["methods",{"_index":56,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{}}}],["min",{"_index":40,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["minimap",{"_index":364,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["miscellaneous",{"_index":590,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":520,"title":{},"body":{"license.html":{}}}],["modified",{"_index":64,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"index.html":{}}}],["modify",{"_index":541,"title":{},"body":{"license.html":{}}}],["module",{"_index":334,"title":{"modules/MonacoEditorModule.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":336,"title":{"modules.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"modules.html":{}}}],["monaco",{"_index":10,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(this.container",{"_index":242,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.creatediffeditor(this.container",{"_index":147,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.createmodel(this.modified",{"_index":129,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.createmodel(this.original",{"_index":130,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.getmodelmarkers({}).map(m",{"_index":247,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.setmodellanguage",{"_index":223,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.settheme(changes.options.currentvalue.theme",{"_index":136,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["monacodiffeditorcomponent",{"_index":1,"title":{"components/MonacoDiffEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorcomponent",{"_index":159,"title":{"components/MonacoEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorloaderdirective",{"_index":161,"title":{"directives/MonacoEditorLoaderDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorloaderservice",{"_index":69,"title":{"injectables/MonacoEditorLoaderService.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["monacoeditorloaderservice.ismonacoloaded.subscribe(isloaded",{"_index":265,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["monacoeditormodule",{"_index":335,"title":{"modules/MonacoEditorModule.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["monacoloader",{"_index":76,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["monacooptions",{"_index":359,"title":{"interfaces/MonacoOptions.html":{}},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["monacopath",{"_index":276,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["monacopath(value",{"_index":294,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["motivations",{"_index":502,"title":{},"body":{"index.html":{}}}],["multi",{"_index":176,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["name",{"_index":73,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["nconsole.log(\"hello",{"_index":485,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":311,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["needs",{"_index":512,"title":{},"body":{"index.html":{}}}],["new",{"_index":285,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["newheight",{"_index":386,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["newwidth",{"_index":385,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ng_validators",{"_index":177,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ng_value_accessor",{"_index":173,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ngmodel",{"_index":489,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":350,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{}}}],["ngonchanges",{"_index":59,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngonchanges(changes",{"_index":85,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngondestroy",{"_index":60,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngoninit",{"_index":61,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ngx",{"_index":23,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngzone",{"_index":278,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["ngzone.run",{"_index":298,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["node_modules/monaco",{"_index":463,"title":{},"body":{"index.html":{}}}],["noderequire",{"_index":274,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["noninfringement",{"_index":571,"title":{},"body":{"license.html":{}}}],["notably",{"_index":513,"title":{},"body":{"index.html":{}}}],["notice",{"_index":555,"title":{},"body":{"license.html":{}}}],["npm",{"_index":448,"title":{},"body":{"index.html":{}}}],["null",{"_index":233,"title":{},"body":{"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["number",{"_index":378,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["object.assign",{"_index":146,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["obtaining",{"_index":530,"title":{},"body":{"license.html":{}}}],["oldheight",{"_index":367,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["oldwidth",{"_index":368,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onchanges",{"_index":17,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ondestroy",{"_index":18,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["onerrorstatuschange",{"_index":178,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ongotamdloader",{"_index":296,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["oninit",{"_index":16,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onresized",{"_index":62,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onresized(event",{"_index":91,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ontouched",{"_index":179,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["optional",{"_index":75,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["options",{"_index":65,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["options.ts",{"_index":362,"title":{},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["opts",{"_index":141,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["original",{"_index":66,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"index.html":{}}}],["originalcode",{"_index":487,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":582,"title":{},"body":{"license.html":{}}}],["out",{"_index":346,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":382,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["output('resized",{"_index":388,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["outputs",{"_index":370,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["overflow",{"_index":35,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["overview",{"_index":588,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":414,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":72,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["parseerror",{"_index":180,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["particular",{"_index":569,"title":{},"body":{"license.html":{}}}],["pastparseerror",{"_index":246,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["paths",{"_index":305,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["permission",{"_index":524,"title":{},"body":{"license.html":{}}}],["permit",{"_index":549,"title":{},"body":{"license.html":{}}}],["person",{"_index":529,"title":{},"body":{"license.html":{}}}],["persons",{"_index":550,"title":{},"body":{"license.html":{}}}],["portions",{"_index":559,"title":{},"body":{"license.html":{}}}],["position",{"_index":49,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["private",{"_index":57,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["projects",{"_index":459,"title":{},"body":{"index.html":{}}}],["propagatechange",{"_index":181,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["properties",{"_index":54,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{}}}],["provide",{"_index":172,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["provided",{"_index":560,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":292,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["providers",{"_index":171,"title":{},"body":{"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["publish",{"_index":543,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":570,"title":{},"body":{"license.html":{}}}],["queries",{"_index":383,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["reactiveform",{"_index":493,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":140,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["reference",{"_index":444,"title":{},"body":{"index.html":{}}}],["registeronchange",{"_index":183,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronchange(fn",{"_index":196,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registerontouched",{"_index":184,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registerontouched(fn",{"_index":199,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange",{"_index":185,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange(fn",{"_index":201,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange?(fn",{"_index":236,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["relative",{"_index":50,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["repository",{"_index":449,"title":{},"body":{"index.html":{}}}],["reset",{"_index":345,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["resize",{"_index":517,"title":{},"body":{"index.html":{}}}],["resized",{"_index":371,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizeddirective",{"_index":163,"title":{"directives/ResizedDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"overview.html":{}}}],["resizedevent",{"_index":384,"title":{"classes/ResizedEvent.html":{}},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["resizeevent",{"_index":369,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizesensor",{"_index":381,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizesensor(this.element.nativeelement",{"_index":390,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["restriction",{"_index":537,"title":{},"body":{"license.html":{}}}],["result",{"_index":166,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":168,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":231,"title":{},"body":{"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["returns",{"_index":83,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{}}}],["rights",{"_index":540,"title":{},"body":{"license.html":{}}}],["root",{"_index":293,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["rxjs",{"_index":291,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":108,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["sample",{"_index":464,"title":{},"body":{"index.html":{}}}],["saveadd",{"_index":452,"title":{},"body":{"index.html":{}}}],["scrollbeyondlastline",{"_index":241,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["sell",{"_index":547,"title":{},"body":{"license.html":{}}}],["services/monaco",{"_index":109,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["set",{"_index":262,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["setloadmonacoeditor(value",{"_index":261,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["setmonacopath(value",{"_index":289,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["shall",{"_index":556,"title":{},"body":{"license.html":{}}}],["simplechanges",{"_index":86,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["size",{"_index":518,"title":{},"body":{"index.html":{}}}],["sizing",{"_index":30,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["software",{"_index":532,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["src/.../monaco",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":9,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":439,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["subject",{"_index":552,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":545,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":122,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["substantial",{"_index":558,"title":{},"body":{"license.html":{}}}],["support",{"_index":497,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":586,"title":{},"body":{"modules.html":{}}}],["table",{"_index":51,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":107,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["take(1",{"_index":121,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["templateref",{"_index":256,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["templateurl",{"_index":479,"title":{},"body":{"index.html":{}}}],["text",{"_index":47,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["text/javascript",{"_index":314,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["theme",{"_index":143,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["this._monacopath",{"_index":295,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this._monacopath}/loader.js",{"_index":316,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.addelectronfixscripts",{"_index":319,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.container",{"_index":116,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor",{"_index":124,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.dispose",{"_index":151,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.getmodel",{"_index":224,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.layout",{"_index":148,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidblureditortext",{"_index":249,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":243,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidchangemodeldecorations",{"_index":245,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.setmodel",{"_index":131,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["this.editor.setvalue",{"_index":228,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.setvalue(value",{"_index":227,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.updateoptions",{"_index":139,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editorcontent.nativeelement",{"_index":117,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.element",{"_index":397,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.element.nativeelement.clientheight",{"_index":394,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.element.nativeelement.clientwidth",{"_index":393,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.initmonaco",{"_index":123,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.ismonacoloaded.next(true",{"_index":299,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.monacoeditorloaderservice.monacopath",{"_index":264,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["this.monacoloader.ismonacoloaded.pipe",{"_index":118,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.noderequire",{"_index":303,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.oldheight",{"_index":396,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.oldwidth",{"_index":395,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.onerrorstatuschange",{"_index":237,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.onresized",{"_index":392,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.ontouched",{"_index":230,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.options",{"_index":145,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.options.language",{"_index":225,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.parseerror",{"_index":232,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.propagatechange",{"_index":229,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.propagatechange(this.editor.getvalue",{"_index":244,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.resized.next(event",{"_index":398,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.resizeevent",{"_index":389,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.value",{"_index":226,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.value].join('\\n",{"_index":238,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.viewcontainer.clear",{"_index":267,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":266,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["todo",{"_index":488,"title":{},"body":{"index.html":{}}}],["tort",{"_index":581,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["true",{"_index":142,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["try",{"_index":440,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":328,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["ui/ngx",{"_index":451,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":327,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["understanding",{"_index":323,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["use",{"_index":469,"title":{},"body":{"index.html":{},"license.html":{}}}],["useexisting",{"_index":174,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["using",{"_index":492,"title":{},"body":{"index.html":{}}}],["valid",{"_index":234,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validate",{"_index":186,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validationerrors",{"_index":205,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validator",{"_index":170,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["value",{"_index":182,"title":{},"body":{"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["var",{"_index":156,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["variable",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":591,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vc",{"_index":144,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["viewchild",{"_index":102,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["viewchild('diffeditor",{"_index":100,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["viewchild('editor",{"_index":211,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["viewcontainer",{"_index":257,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["viewcontainerref",{"_index":258,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["void",{"_index":84,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["vs",{"_index":306,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["want",{"_index":468,"title":{},"body":{"index.html":{}}}],["wanted",{"_index":503,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":566,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":561,"title":{},"body":{"license.html":{}}}],["wdith",{"_index":41,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["whether",{"_index":578,"title":{},"body":{"license.html":{}}}],["width",{"_index":38,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["window).amdrequire",{"_index":301,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).amdrequire(['vs/editor/editor.main",{"_index":307,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).amdrequire.config",{"_index":304,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).monacoeditoralreadyinitialized",{"_index":297,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).require",{"_index":302,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["without",{"_index":536,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":321,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["works",{"_index":514,"title":{},"body":{"index.html":{}}}],["world!\");\\n",{"_index":486,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":43,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["writevalue",{"_index":187,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["writevalue(value",{"_index":206,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["x",{"_index":391,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["your_app_name",{"_index":460,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":344,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/MonacoDiffEditorComponent.html":{"url":"components/MonacoDiffEditorComponent.html","title":"component - MonacoDiffEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MonacoDiffEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-monaco-diff-editor\n            \n\n\n            \n                styles\n                :host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}\n            \n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                editorContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMonaco\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modified\n                            \n                            \n                                options\n                            \n                            \n                                original\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(monacoLoader: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monacoLoader\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modified\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     editor.IDiffEditorConstructionOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        original\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMonaco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMonaco()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLDivElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     editor.IStandaloneDiffEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('diffEditor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    Input,\n    ChangeDetectionStrategy,\n    SimpleChanges\n} from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\nimport { editor } from 'monaco-editor';\n\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\n\ndeclare const monaco: any;\n\n@Component({\n    selector: 'ngx-monaco-diff-editor',\n    template: `\n\n  \n\n`,\n    styles: [\n        `:host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MonacoDiffEditorComponent implements OnInit, OnChanges, OnDestroy {\n    container: HTMLDivElement;\n    editor: editor.IStandaloneDiffEditor;\n\n    @Input() original: string;\n    @Input() modified: string;\n    @Input() options: editor.IDiffEditorConstructionOptions;\n\n    @ViewChild('diffEditor') editorContent: ElementRef;\n\n    constructor(private monacoLoader: MonacoEditorLoaderService) { }\n\n    ngOnInit() {\n        this.container = this.editorContent.nativeElement;\n        this.monacoLoader.isMonacoLoaded.pipe(\n            filter(isLoaded => isLoaded),\n            take(1),\n        ).subscribe(() => {\n            this.initMonaco();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.editor && ((changes.code && !changes.code.firstChange) || (changes.modified && !changes.modified.firstChange))) {\n            const modified = monaco.editor.createModel(this.modified);\n            const original = monaco.editor.createModel(this.original);\n            this.editor.setModel({\n                original,\n                modified\n            });\n        }\n        if (\n            this.editor &&\n            changes.options &&\n            !changes.options.firstChange\n        ) {\n            if (changes.options.previousValue.theme !== changes.options.currentValue.theme) {\n                monaco.editor.setTheme(changes.options.currentValue.theme);\n            }\n\n            if (changes.options.previousValue.readOnly !== changes.options.currentValue.readOnly) {\n                this.editor.updateOptions({ readOnly: changes.options.currentValue.readOnly })\n            }\n        }\n    }\n\n    private initMonaco() {\n        let opts: editor.IDiffEditorConstructionOptions = {\n            readOnly: true,\n            theme: 'vc'\n        };\n        if (this.options) {\n            opts = Object.assign({}, opts, this.options);\n        }\n        this.editor = monaco.editor.createDiffEditor(this.container, opts);\n\n        const original = monaco.editor.createModel(this.original);\n        const modified = monaco.editor.createModel(this.modified);\n\n        this.editor.setModel({\n            original,\n            modified\n        });\n        this.editor.layout();\n    }\n\n    onResized(event) {\n        if (this.editor) {\n            this.editor.layout({\n                width: event.newWidth,\n                height: event.newHeight\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n    }\n}\n\n    \n\n\n    \n            :host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'MonacoDiffEditorComponent', 'selector': 'ngx-monaco-diff-editor'},{'name': 'MonacoEditorComponent', 'selector': 'ngx-monaco-editor'}];\n    var DIRECTIVES = [{'name': 'MonacoEditorLoaderDirective', 'selector': '[materiaLoadMonacoEditor]'},{'name': 'ResizedDirective', 'selector': '[materiaResized]'}];\n    var ACTUAL_COMPONENT = {'name': 'MonacoDiffEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MonacoEditorComponent.html":{"url":"components/MonacoEditorComponent.html","title":"component - MonacoEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MonacoEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n                ControlValueAccessor\n                Validator\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MonacoEditorComponent), multi: true\n}\n                            {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => MonacoEditorComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ngx-monaco-editor\n            \n\n\n            \n                styles\n                :host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}\n            \n\n            \n                template\n                \t\n\t\t\n\t\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                editorContent\n                            \n                            \n                                    Private\n                                onErrorStatusChange\n                            \n                            \n                                    Private\n                                onTouched\n                            \n                            \n                                parseError\n                            \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMonaco\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResized\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(monacoLoader: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monacoLoader\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     editor.IEditorConstructionOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:71\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMonaco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMonaco()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:177\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            registerOnValidatorChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnValidatorChange(fn: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationErrors\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLDivElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     editor.IStandaloneCodeEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('editor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onErrorStatusChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    Input,\n    ChangeDetectionStrategy,\n    forwardRef,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\nimport { editor } from 'monaco-editor';\n\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\n\ndeclare const monaco: any;\n\n@Component({\n    selector: 'ngx-monaco-editor',\n    template: `\n\t\n\t\t\n\t\n`,\n    styles: [\n        `:host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MonacoEditorComponent),\n            multi: true\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => MonacoEditorComponent),\n            multi: true,\n        }\n    ]\n})\nexport class MonacoEditorComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor, Validator {\n    @Input() options: editor.IEditorConstructionOptions;\n    @ViewChild('editor') editorContent: ElementRef;\n\n    container: HTMLDivElement;\n    editor: editor.IStandaloneCodeEditor;\n    value: string;\n    parseError: boolean;\n\n    private onTouched: () => void;\n    private onErrorStatusChange: () => void;\n    private propagateChange: (_: any) => any = (_: any) => { };\n\n    constructor(private monacoLoader: MonacoEditorLoaderService) { }\n\n    ngOnInit() {\n        this.container = this.editorContent.nativeElement;\n        this.monacoLoader.isMonacoLoaded.pipe(\n            filter(isLoaded => isLoaded),\n            take(1)\n        ).subscribe(() => {\n            this.initMonaco();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.editor && changes.options && !changes.options.firstChange) {\n            if (changes.options.previousValue.language !== changes.options.currentValue.language) {\n                monaco.editor.setModelLanguage(\n                    this.editor.getModel(),\n                    this.options && this.options.language ? this.options.language : 'text'\n                );\n            }\n            if (changes.options.previousValue.theme !== changes.options.currentValue.theme) {\n                monaco.editor.setTheme(changes.options.currentValue.theme);\n            }\n            if (changes.options.previousValue.readOnly !== changes.options.currentValue.readOnly) {\n                this.editor.updateOptions({ readOnly: changes.options.currentValue.readOnly });\n            }\n        }\n    }\n\n    writeValue(value: string): void {\n        this.value = value;\n        if (this.editor && value) {\n            this.editor.setValue(value);\n        } else if (this.editor) {\n            this.editor.setValue('');\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    validate(): ValidationErrors {\n        return (!this.parseError) ? null : {\n            parseError: {\n                valid: false,\n            }\n        };\n    }\n\n    registerOnValidatorChange?(fn: () => void): void {\n        this.onErrorStatusChange = fn;\n    }\n\n    private initMonaco() {\n        let opts: editor.IEditorConstructionOptions = {\n            value: [this.value].join('\\n'),\n            language: 'text',\n            automaticLayout: true,\n            scrollBeyondLastLine: false,\n            theme: 'vc'\n        };\n        if (this.options) {\n            opts = Object.assign({}, opts, this.options);\n        }\n        this.editor = monaco.editor.create(this.container, opts);\n        this.editor.layout();\n\n        this.editor.onDidChangeModelContent(() => {\n            this.propagateChange(this.editor.getValue());\n        });\n\n        this.editor.onDidChangeModelDecorations(() => {\n            const pastParseError = this.parseError;\n            if (monaco.editor.getModelMarkers({}).map(m => m.message).join(', ')) {\n                this.parseError = true;\n            } else {\n                this.parseError = false;\n            }\n\n            if (pastParseError !== this.parseError) {\n                this.onErrorStatusChange();\n            }\n        });\n\n        this.editor.onDidBlurEditorText(() => {\n            this.onTouched();\n        });\n    }\n\n    onResized(event) {\n        if (this.editor) {\n            this.editor.layout({\n                width: event.newWidth,\n                height: event.newHeight\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n    }\n}\n\n    \n\n\n    \n            :host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'MonacoDiffEditorComponent', 'selector': 'ngx-monaco-diff-editor'},{'name': 'MonacoEditorComponent', 'selector': 'ngx-monaco-editor'}];\n    var DIRECTIVES = [{'name': 'MonacoEditorLoaderDirective', 'selector': '[materiaLoadMonacoEditor]'},{'name': 'ResizedDirective', 'selector': '[materiaResized]'}];\n    var ACTUAL_COMPONENT = {'name': 'MonacoEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MonacoEditorLoaderDirective.html":{"url":"directives/MonacoEditorLoaderDirective.html","title":"directive - MonacoEditorLoaderDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MonacoEditorLoaderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [materiaLoadMonacoEditor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadMonacoEditor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loadMonacoEditor\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, monacoEditorLoaderService: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        monacoEditorLoaderService\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadMonacoEditor\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:6\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loadMonacoEditor\n                    \n                \n\n\n                \n                    \n                        setloadMonacoEditor(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:6\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { MonacoEditorLoaderService } from '../services/monaco-editor-loader.service';\n\n@Directive({ selector: '[materiaLoadMonacoEditor]' })\nexport class MonacoEditorLoaderDirective {\n    @Input() set loadMonacoEditor(value: any) {\n        this.monacoEditorLoaderService.monacoPath = value;\n    }\n\n    constructor(\n        private templateRef: TemplateRef,\n        private viewContainer: ViewContainerRef,\n        private monacoEditorLoaderService: MonacoEditorLoaderService) {\n        monacoEditorLoaderService.isMonacoLoaded.subscribe(isLoaded => {\n            if (isLoaded) {\n                this.viewContainer.createEmbeddedView(this.templateRef);\n            } else {\n                this.viewContainer.clear();\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MonacoEditorLoaderService.html":{"url":"injectables/MonacoEditorLoaderService.html","title":"injectable - MonacoEditorLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MonacoEditorLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _monacoPath\n                            \n                            \n                                isMonacoLoaded\n                            \n                            \n                                nodeRequire\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElectronFixScripts\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    monacoPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElectronFixScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElectronFixScripts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _monacoPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/monaco-editor/min/vs'\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMonacoLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeRequire\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        monacoPath\n                    \n                \n\n\n                \n                    \n                        setmonacoPath(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:9\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class MonacoEditorLoaderService {\n    nodeRequire: any;\n    isMonacoLoaded: BehaviorSubject = new BehaviorSubject(false);\n    private _monacoPath = 'assets/monaco-editor/min/vs';\n    set monacoPath(value: any) {\n        if (value) {\n            this._monacoPath = value;\n        }\n    }\n\n    constructor(ngZone: NgZone) {\n        const onGotAmdLoader = () => {\n            if ((window).monacoEditorAlreadyInitialized) {\n                ngZone.run(() => this.isMonacoLoaded.next(true));\n                return\n            }\n\n            (window).monacoEditorAlreadyInitialized = true;\n            \n            // Load monaco\n            (window).amdRequire =  (window).require;\n            if (this.nodeRequire) {\n                (window).require = this.nodeRequire;\n            }\n            (window).amdRequire.config({ paths: { 'vs': this._monacoPath } });\n            (window).amdRequire(['vs/editor/editor.main'], () => {\n                ngZone.run(() => this.isMonacoLoaded.next(true));\n            });\n        };\n\n        let loaderScript: any = null;\n        // Load AMD loader if necessary\n        if (!(window).require && !(window).amdRequire) {\n\n            loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = `${this._monacoPath}/loader.js`;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n\n        } else if (!(window).amdRequire) {\n\n            this.addElectronFixScripts();\n\n            this.nodeRequire =  (window).require;\n            loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = `${this._monacoPath}/loader.js`;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n\n        } else {\n            onGotAmdLoader();\n        }\n    }\n\n    addElectronFixScripts() {\n        const electronFixScript = document.createElement('script');\n        // workaround monaco-css not understanding the environment\n        const inlineScript = document.createTextNode('self.module = undefined;');\n        // workaround monaco-typescript not understanding the environment\n        const inlineScript2 = document.createTextNode('self.process.browser = true;');\n        electronFixScript.appendChild(inlineScript);\n        electronFixScript.appendChild(inlineScript2);\n        document.body.appendChild(electronFixScript);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MonacoEditorModule.html":{"url":"modules/MonacoEditorModule.html","title":"module - MonacoEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MonacoEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonacoEditorModule\n\n\n\ncluster_MonacoEditorModule_declarations\n\n\n\ncluster_MonacoEditorModule_exports\n\n\n\n\nMonacoDiffEditorComponent\n\nMonacoDiffEditorComponent\n\n\n\nMonacoEditorModule\n\nMonacoEditorModule\n\nMonacoEditorModule -->\n\nMonacoDiffEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorComponent\n\nMonacoEditorComponent\n\nMonacoEditorModule -->\n\nMonacoEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorLoaderDirective\n\nMonacoEditorLoaderDirective\n\nMonacoEditorModule -->\n\nMonacoEditorLoaderDirective->MonacoEditorModule\n\n\n\n\n\nResizedDirective\n\nResizedDirective\n\nMonacoEditorModule -->\n\nResizedDirective->MonacoEditorModule\n\n\n\n\n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent  -->\n\nMonacoEditorModule->MonacoDiffEditorComponent \n\n\n\n\n\nMonacoEditorComponent \n\nMonacoEditorComponent \n\nMonacoEditorComponent  -->\n\nMonacoEditorModule->MonacoEditorComponent \n\n\n\n\n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective  -->\n\nMonacoEditorModule->MonacoEditorLoaderDirective \n\n\n\n\n\nResizedDirective \n\nResizedDirective \n\nResizedDirective  -->\n\nMonacoEditorModule->ResizedDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/monaco-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                        \n                            MonacoEditorLoaderDirective\n                        \n                        \n                            ResizedDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                        \n                            MonacoEditorLoaderDirective\n                        \n                        \n                            ResizedDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MonacoEditorLoaderDirective } from './directives/monaco-editor-loader.directive';\nimport { MonacoEditorComponent } from './components/monaco-editor/monaco-editor.component';\nimport { ResizedDirective } from './directives/resized-event.directive';\nimport { MonacoDiffEditorComponent } from './components/monaco-diff-editor/monaco-diff-editor.component';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    MonacoEditorLoaderDirective,\n    MonacoEditorComponent,\n    ResizedDirective,\n    MonacoDiffEditorComponent\n  ],\n  exports: [\n    MonacoEditorLoaderDirective,\n    MonacoEditorComponent,\n    MonacoDiffEditorComponent,\n    ResizedDirective\n  ],\n  entryComponents: [MonacoEditorComponent, MonacoDiffEditorComponent]\n})\nexport class MonacoEditorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonacoOptions.html":{"url":"interfaces/MonacoOptions.html","title":"interface - MonacoOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonacoOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/interfaces/monaco-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        automaticLayout\n                                \n                                \n                                        language\n                                \n                                \n                                            Optional\n                                        lineNumbers\n                                \n                                \n                                            Optional\n                                        minimap\n                                \n                                \n                                            Optional\n                                        readOnly\n                                \n                                \n                                            Optional\n                                        scrollBeyondLastLine\n                                \n                                \n                                            Optional\n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        automaticLayout\n                                    \n                                \n                                \n                                    \n                                        automaticLayout:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineNumbers\n                                    \n                                \n                                \n                                    \n                                        lineNumbers:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimap\n                                    \n                                \n                                \n                                    \n                                        minimap:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollBeyondLastLine\n                                    \n                                \n                                \n                                    \n                                        scrollBeyondLastLine:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MonacoOptions {\n    language: string;\n    lineNumbers?: boolean;\n    theme?: string;\n    readOnly?: boolean;\n    scrollBeyondLastLine?: boolean;\n    automaticLayout?: boolean;\n    minimap?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResizedDirective.html":{"url":"directives/ResizedDirective.html","title":"directive - ResizedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ResizedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [materiaResized]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                oldHeight\n                            \n                            \n                                    Private\n                                oldWidth\n                            \n                            \n                                    Private\n                                resizeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onResized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        resized\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onResized()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resizeEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Output, OnInit } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\nexport class ResizedEvent {\n    constructor(\n        readonly element: ElementRef,\n        readonly newWidth: number,\n        readonly newHeight: number,\n        readonly oldWidth: number,\n        readonly oldHeight: number\n    ) { }\n}\n\n@Directive({\n    selector: '[materiaResized]',\n    exportAs: 'materiaResized'\n})\nexport class ResizedDirective implements OnInit {\n\n    @Output('resized')\n    readonly resized = new EventEmitter();\n\n    private oldWidth: number;\n    private oldHeight: number;\n    private resizeEvent: ResizeSensor;\n\n    constructor(private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.resizeEvent = new ResizeSensor(this.element.nativeElement, x => this.onResized());\n        this.onResized();\n    }\n\n    private onResized(): void {\n        const newWidth = this.element.nativeElement.clientWidth;\n        const newHeight = this.element.nativeElement.clientHeight;\n\n        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n            return;\n        }\n\n        const event = new ResizedEvent(\n            this.element,\n            newWidth,\n            newHeight,\n            this.oldWidth,\n            this.oldHeight);\n\n        this.oldWidth = this.element.nativeElement.clientWidth;\n        this.oldHeight = this.element.nativeElement.clientHeight;\n\n        this.resized.next(event);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResizedEvent.html":{"url":"classes/ResizedEvent.html","title":"class - ResizedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResizedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, newWidth: number, newHeight: number, oldWidth: number, oldHeight: number)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oldWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oldHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Output, OnInit } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\nexport class ResizedEvent {\n    constructor(\n        readonly element: ElementRef,\n        readonly newWidth: number,\n        readonly newHeight: number,\n        readonly oldWidth: number,\n        readonly oldHeight: number\n    ) { }\n}\n\n@Directive({\n    selector: '[materiaResized]',\n    exportAs: 'materiaResized'\n})\nexport class ResizedDirective implements OnInit {\n\n    @Output('resized')\n    readonly resized = new EventEmitter();\n\n    private oldWidth: number;\n    private oldHeight: number;\n    private resizeEvent: ResizeSensor;\n\n    constructor(private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.resizeEvent = new ResizeSensor(this.element.nativeElement, x => this.onResized());\n        this.onResized();\n    }\n\n    private onResized(): void {\n        const newWidth = this.element.nativeElement.clientWidth;\n        const newHeight = this.element.nativeElement.clientHeight;\n\n        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n            return;\n        }\n\n        const event = new ResizedEvent(\n            this.element,\n            newWidth,\n            newHeight,\n            this.oldWidth,\n            this.oldHeight);\n\n        this.oldWidth = this.element.nativeElement.clientWidth;\n        this.oldHeight = this.element.nativeElement.clientHeight;\n\n        this.resized.next(event);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n            \n            component\n            MonacoDiffEditorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n            \n            component\n            MonacoEditorComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts\n            \n            directive\n            MonacoEditorLoaderDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n            \n            directive\n            ResizedDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n            \n            class\n            ResizedEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/interfaces/monaco-options.ts\n            \n            interface\n            MonacoOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts\n            \n            injectable\n            MonacoEditorLoaderService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.1\n        \n            @angular/cdk : ^7.2.1\n        \n            @angular/common : ~7.2.1\n        \n            @angular/compiler : ~7.2.1\n        \n            @angular/core : ~7.2.1\n        \n            @angular/flex-layout : 7.0.0-beta.22\n        \n            @angular/forms : ~7.2.1\n        \n            @angular/http : ~7.2.1\n        \n            @angular/material : ^7.2.1\n        \n            @angular/platform-browser : ~7.2.1\n        \n            @angular/platform-browser-dynamic : ~7.2.1\n        \n            @angular/router : ~7.2.1\n        \n            core-js : ^2.5.4\n        \n            css-element-queries : ^1.1.1\n        \n            monaco-editor : ^0.15.6\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDocumentation\nTry it out on : live demo.\nApi reference available on : documentation.\nInstallation\nInstall from npm repository:\nnpm install @materia-ui/ngx-monaco-editor --saveAdd the glob to assets in angular.json (to make monaco-editor lib available to the app):\n{\n    ...\n    \"projects\": {\n      \"YOUR_APP_NAME\": {\n          ...\n          \"architect\": {\n              \"build\": {\n                ...\n                \"options\": {\n                    ...\n                    \"assets\": [\n                        { \"glob\": \"**/*\", \"input\": \"node_modules/monaco-editor\", \"output\": \"assets/monaco-editor/\" }\n                    ],\n                    ...\n                }\n                ...\n              }\n            }\n            ...\n        }\n    },\n    ...\n}Sample\nInclude MonacoEditorModule in Main Module and Feature Modules where you want to use the editor component.(eg: app.module.ts): \nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MonacoEditorModule } from '@materia-ui/ngx-monaco-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MonacoEditorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Create Editor options in component.(eg: app.component.ts)\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  editorOptions = {theme: 'vs-dark', language: 'javascript'};\n  code: string = 'function x() {\\nconsole.log(\"Hello world!\");\\n}';\n  originalCode: string = 'function x() { // TODO }';\n}Include editor component in your html with options input and ngModel bindings  (eg: app.component.html) or using ReactiveForm features.\nInclude diff-editor component in your html and use the following inputs: options, original and modified (eg: app.component.html).\nBoth components support all available monaco-editor options:\n\nEditorOptions: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html,\nDiffEditorOptions: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html.\n\nMotivations\nWe wanted to use monaco-editor library with angular in our desktop application: Materia Designer.\nThe current angular libraries did not cover all of our needs, notably:\n\nWorks on Browser and Electron application,\nSupport flex-box container and correctly resize editor when container size changes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Materia\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MonacoEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonacoEditorModule\n\n\n\ncluster_MonacoEditorModule_declarations\n\n\n\ncluster_MonacoEditorModule_exports\n\n\n\n\nMonacoDiffEditorComponent\n\nMonacoDiffEditorComponent\n\n\n\nMonacoEditorModule\n\nMonacoEditorModule\n\nMonacoEditorModule -->\n\nMonacoDiffEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorComponent\n\nMonacoEditorComponent\n\nMonacoEditorModule -->\n\nMonacoEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorLoaderDirective\n\nMonacoEditorLoaderDirective\n\nMonacoEditorModule -->\n\nMonacoEditorLoaderDirective->MonacoEditorModule\n\n\n\n\n\nResizedDirective\n\nResizedDirective\n\nMonacoEditorModule -->\n\nResizedDirective->MonacoEditorModule\n\n\n\n\n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent  -->\n\nMonacoEditorModule->MonacoDiffEditorComponent \n\n\n\n\n\nMonacoEditorComponent \n\nMonacoEditorComponent \n\nMonacoEditorComponent  -->\n\nMonacoEditorModule->MonacoEditorComponent \n\n\n\n\n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective  -->\n\nMonacoEditorModule->MonacoEditorLoaderDirective \n\n\n\n\n\nResizedDirective \n\nResizedDirective \n\nResizedDirective  -->\n\nMonacoEditorModule->ResizedDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            monaco   (src/.../monaco-diff-editor.component.ts)\n                        \n                        \n                            monaco   (src/.../monaco-editor.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monaco\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monaco\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
