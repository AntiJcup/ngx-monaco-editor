var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/MonacoDiffEditorComponent.html",[0,0.871,1,0.871]],["body/components/MonacoDiffEditorComponent.html",[0,0.951,1,1.081,2,1.103,3,0.328,4,0.328,5,2.037,6,1.036,7,1.036,8,0.264,9,0.645,10,0.35,11,2.179,12,1.678,13,1.816,14,0.696,15,1.103,16,1.369,17,2.037,18,2.037,19,0.696,20,1.641,21,1.641,22,1.254,23,2.317,24,1.013,25,2.037,26,0.073,27,2.441,28,1.655,29,2.182,30,2.037,31,2.037,32,2.037,33,2.037,34,2.686,35,3.005,36,2.686,37,2.037,38,3.242,39,3.005,40,2.686,41,2.037,42,2.182,43,2.037,44,2.686,45,2.814,46,2.182,47,2.037,48,2.037,49,2.037,50,2.037,51,1.655,52,1.641,53,0.328,54,0.919,55,2.037,56,1.103,57,0.951,58,2.317,59,1.641,60,2.317,61,1.557,62,1.103,63,1.103,64,2.814,65,1.655,66,2.814,67,0.484,68,1.036,69,1.081,70,1.491,71,2.109,72,0.951,73,1.254,74,0.744,75,0.788,76,1.641,77,1.298,78,1.331,79,2.618,80,1.331,81,1.331,82,1.331,83,1.414,84,1.179,85,1.641,86,2.317,87,1.331,88,0.842,89,1.331,90,1.331,91,1.641,92,1.331,93,0.696,94,1.641,95,1.331,96,2.109,97,1.331,98,1.369,99,1.036,100,2.109,101,0.735,102,1.036,103,1.557,104,1.036,105,0.264,106,1.036,107,1.036,108,1.036,109,0.842,110,0.842,111,1.036,112,1.414,113,0.264,114,0.154,115,0.696,116,1.036,117,1.036,118,1.036,119,1.036,120,0.842,121,1.036,122,1.036,123,1.036,124,2.525,125,1.331,126,1.331,127,1.331,128,1.331,129,2.109,130,2.109,131,2.109,132,1.036,133,1.036,134,1.036,135,1.036,136,1.036,137,1.036,138,1.641,139,1.036,140,0.919,141,2.317,142,0.842,143,0.696,144,1.036,145,1.641,146,1.036,147,1.331,148,1.641,149,1.036,150,1.036,151,1.036,152,0.696,153,1.333,154,0.919,155,0.328,156,2.317,157,1.036,158,1.036,159,0.484,160,0.58,161,0.401,162,1.036,163,0.328,164,0.696,165,1.036,166,0.02,167,0.031,168,0.02]],["title/components/MonacoEditorComponent.html",[0,0.871,159,0.871]],["body/components/MonacoEditorComponent.html",[0,0.803,1,0.378,2,0.902,3,0.256,4,0.256,5,1.721,6,0.809,7,0.809,8,0.206,9,0.663,10,0.351,11,2.236,12,0.378,13,1.864,14,0.544,15,0.902,16,1.156,17,1.721,18,1.721,19,0.544,20,1.342,21,1.342,22,1.118,23,2.003,24,0.945,25,1.721,26,0.073,27,2.238,28,1.398,29,1.946,30,1.721,31,1.721,32,1.721,33,1.721,34,2.396,35,2.756,36,2.396,37,1.721,38,3.037,39,2.756,40,2.396,41,1.721,42,1.946,43,1.721,44,2.396,45,2.538,46,1.946,47,2.221,48,1.721,49,1.721,50,1.721,51,1.398,52,1.342,53,0.256,54,0.752,55,1.721,56,0.902,57,1.391,58,2.003,59,1.342,60,2.003,61,1.346,62,0.902,63,0.902,65,1.398,67,0.378,68,0.809,69,0.935,70,1.541,72,1.184,73,1.326,74,0.799,75,1.066,76,1.342,77,1.244,83,1.591,84,1.498,85,1.342,86,2.003,88,0.657,91,1.342,93,0.544,94,1.342,98,1.156,99,0.809,101,0.704,102,0.809,103,0.902,104,0.809,105,0.206,106,0.809,107,0.809,108,0.809,109,0.657,110,0.657,111,0.809,112,0.752,113,0.206,114,0.12,115,0.544,116,0.809,117,0.809,118,0.809,119,0.809,120,0.657,121,0.809,122,0.809,123,0.809,124,2.396,132,0.809,133,0.809,134,0.809,135,0.809,136,0.809,137,0.809,138,1.342,139,0.809,140,0.453,141,2.003,142,1.946,143,0.544,144,0.809,145,1.721,146,0.809,148,1.342,149,0.809,150,0.809,151,0.809,152,0.544,153,1.09,154,0.752,155,0.256,156,2.003,157,0.809,158,0.809,159,1.24,160,0.453,161,0.313,162,0.809,163,0.256,164,0.544,165,0.809,166,0.015,167,0.025,168,0.015,169,2.211,170,2.211,171,0.902,172,2.574,173,2.211,174,2.574,175,2.855,176,2.574,177,2.211,178,2.211,179,2.211,180,2.574,181,2.211,182,2.157,183,1.725,184,1.725,185,1.725,186,2.574,187,1.725,188,1.725,189,2.211,190,1.04,191,1.04,192,1.04,193,1.04,194,1.04,195,1.04,196,1.725,197,1.04,198,3.079,199,1.725,200,1.04,201,1.04,202,1.04,203,2.003,204,1.04,205,2.211,206,1.725,207,1.04,208,1.04,209,1.725,210,1.04,211,1.725,212,1.04,213,1.04,214,1.04,215,1.342,216,1.04,217,0.809,218,1.04,219,0.657,220,1.725,221,1.04,222,1.04,223,1.04,224,1.04,225,1.725,226,1.04,227,1.04,228,1.04,229,1.04,230,1.725,231,0.657,232,2.855,233,0.809,234,1.04,235,2.211,236,1.04,237,1.725,238,1.04,239,0.657,240,0.809,241,0.809,242,1.04,243,1.04,244,1.04,245,1.04,246,1.725,247,1.04,248,1.04,249,1.04]],["title/directives/MonacoEditorLoaderDirective.html",[155,0.591,161,0.722]],["body/directives/MonacoEditorLoaderDirective.html",[3,0.683,4,0.683,8,0.549,9,0.65,10,0.332,19,1.447,22,1.3,24,1.072,26,0.072,53,0.683,57,1.441,63,1.872,67,1.3,69,1.645,70,1.441,72,1.3,73,1.3,74,0.787,75,1.078,83,1.206,84,1.005,101,0.883,103,1.872,105,0.549,109,1.749,110,1.749,113,0.549,114,0.319,120,1.749,155,0.883,160,1.206,161,1.078,166,0.041,167,0.053,168,0.041,182,2.263,250,3.264,251,2.154,252,3.58,253,4.195,254,2.786,255,2.768,256,4.45,257,3.968,258,4.195,259,2.768,260,3.58,261,2.768,262,2.154,263,2.768,264,2.768,265,2.768,266,2.768,267,2.768]],["title/injectables/MonacoEditorLoaderService.html",[69,0.871,268,1.254]],["body/injectables/MonacoEditorLoaderService.html",[3,0.52,4,0.52,8,0.418,9,0.654,10,0.352,24,1.041,26,0.073,53,0.52,54,1.297,56,1.556,57,1.253,67,0.765,69,1.081,70,1.491,72,1.081,73,1.081,74,0.784,75,0.896,77,0.918,83,1.297,84,1.081,101,0.734,105,0.418,112,1.634,113,0.418,114,0.243,142,1.331,166,0.031,167,0.044,168,0.031,182,2.499,217,2.316,233,1.639,254,2.316,262,1.639,268,1.556,269,2.107,270,3.283,271,1.639,272,3.45,273,3.45,274,3.45,275,3.749,276,2.976,277,2.976,278,3.955,279,2.107,280,2.107,281,2.316,282,2.976,283,2.107,284,3.45,285,1.556,286,2.976,287,2.107,288,2.107,289,2.107,290,2.107,291,1.639,292,2.107,293,1.639,294,2.107,295,2.976,296,3.749,297,2.976,298,3.45,299,3.749,300,3.45,301,2.107,302,2.107,303,1.639,304,2.107,305,2.107,306,2.107,307,3.45,308,2.107,309,2.107,310,2.107,311,3.45,312,2.976,313,2.976,314,2.976,315,2.976,316,2.976,317,2.976,318,2.107,319,2.107,320,2.976,321,1.102,322,2.976,323,2.976,324,2.107,325,2.107,326,2.107,327,2.107,328,2.107,329,2.107,330,2.107,331,2.107,332,2.107]],["title/modules/MonacoEditorModule.html",[333,1.254,334,1.045]],["body/modules/MonacoEditorModule.html",[1,1.727,3,0.653,4,0.653,8,0.525,9,0.41,10,0.209,12,1.262,13,1.514,24,0.653,26,0.072,101,1.056,105,0.525,113,0.525,114,0.305,152,1.383,159,1.727,161,1.417,163,1.161,166,0.039,167,0.051,168,0.039,171,1.383,333,1.383,334,2.088,335,1.383,336,1.383,337,2.453,338,1.672,339,3.021,340,2.058,341,2.058,342,2.058,343,2.705,344,2.058,345,1.672,346,2.645,347,2.645,348,3.476,349,2.705,350,2.645,351,2.645,352,3.476,353,3.476,354,2.645,355,2.645,356,2.058]],["title/interfaces/MonacoOptions.html",[357,1.254,358,1.515]],["body/interfaces/MonacoOptions.html",[3,0.742,4,0.742,8,0.597,9,0.466,10,0.238,26,0.07,53,0.742,54,1.645,74,0.915,75,1.443,77,1.981,113,0.597,140,1.885,143,2.262,166,0.044,167,0.056,168,0.044,215,3.729,239,2.734,240,3.366,241,3.366,357,1.573,358,2.385,359,3.007,360,2.34,361,2.34,362,4.326,363,4.326]],["title/directives/ResizedDirective.html",[155,0.591,163,0.591]],["body/directives/ResizedDirective.html",[3,0.552,4,0.552,8,0.444,9,0.678,10,0.346,15,1.623,16,1.864,19,1.17,22,1.128,26,0.072,53,0.552,54,1.353,56,1.623,57,1.665,61,2.013,62,2.013,67,1.128,70,1.559,72,0.813,73,0.813,74,0.802,75,0.674,83,1.353,84,1.398,93,1.17,98,2.115,101,0.766,105,0.444,112,1.553,113,0.616,114,0.358,115,1.17,140,1.87,154,1.678,155,0.766,160,0.975,163,0.766,164,1.864,166,0.033,167,0.046,168,0.033,231,1.415,285,1.864,321,1.17,364,2.765,365,1.415,366,2.996,367,2.996,368,2.774,369,3.105,370,2.774,371,1.742,372,3.105,373,2.774,374,2.238,375,2.238,376,2.238,377,3.404,378,2.238,379,2.238,380,2.774,381,1.415,382,1.415,383,1.623,384,2.996,385,2.996,386,1.742,387,1.742,388,1.742,389,1.742,390,1.415,391,2.416,392,2.416,393,2.416,394,2.774,395,2.774,396,1.742,397,1.742]],["title/classes/ResizedEvent.html",[114,0.277,383,1.254]],["body/classes/ResizedEvent.html",[3,0.626,4,0.626,8,0.503,9,0.524,10,0.268,15,1.327,16,1.768,22,0.922,26,0.072,57,1.473,61,1.327,62,1.327,67,1.228,70,0.922,72,0.922,73,0.922,74,0.503,75,0.764,84,1.228,93,1.327,98,2.209,101,0.834,105,0.503,112,1.657,113,0.671,114,0.39,115,1.327,140,1.932,154,1.767,155,0.834,163,0.626,164,1.768,166,0.037,167,0.05,168,0.037,231,1.604,285,1.989,321,1.327,364,2.137,365,1.604,366,3.156,367,3.156,368,1.975,370,1.975,371,1.975,373,2.631,377,3.68,380,2.631,381,1.604,382,1.604,383,1.989,384,3.381,385,3.381,386,1.975,387,1.975,388,1.975,389,1.975,390,1.604,391,2.631,392,2.631,393,2.631,394,2.959,395,2.959,396,1.975,397,1.975,398,2.538,399,2.538]],["title/coverage.html",[400,2.533]],["body/coverage.html",[0,1.348,1,1.064,8,0.581,9,0.726,10,0.376,11,2.24,12,1.556,13,1.867,14,2.24,24,0.916,26,0.07,42,2.962,51,1.852,69,1.064,74,0.581,114,0.338,155,0.916,159,1.064,161,0.882,163,0.723,166,0.043,167,0.055,168,0.043,250,2.28,251,2.28,268,1.532,270,2.28,271,2.28,285,1.532,357,1.532,358,1.852,360,2.28,361,2.28,364,2.346,365,2.346,383,1.532,400,2.28,401,2.28,402,2.93,403,2.93,404,2.93,405,3.713,406,3.713,407,2.93,408,2.93,409,3.713,410,2.93,411,2.93,412,2.93]],["title/dependencies.html",[336,1.505,413,2.011]],["body/dependencies.html",[10,0.255,24,0.795,26,0.072,105,0.64,154,1.405,166,0.047,167,0.058,168,0.047,219,2.038,291,2.509,321,1.686,336,1.686,382,2.038,414,3.224,415,4.816,416,3.224,417,3.224,418,3.224,419,3.224,420,3.224,421,3.224,422,3.224,423,3.224,424,3.224,425,3.066,426,2.49,427,3.224,428,3.224,429,3.224,430,3.224,431,3.224,432,3.224,433,3.224,434,3.224,435,3.224,436,3.224]],["title/index.html",[53,0.496,437,2.011,438,2.011]],["body/index.html",[0,1.387,2,1.148,10,0.318,12,0.797,22,0.797,24,1.127,26,0.073,27,1.387,29,1.387,46,1.936,63,1.148,64,1.708,65,2.538,66,1.708,77,1.335,88,1.387,101,1.026,103,1.602,105,0.608,113,0.608,114,0.353,143,1.148,153,1.936,166,0.032,167,0.045,168,0.032,171,1.148,203,2.384,219,1.387,239,1.387,281,1.708,293,1.708,303,1.708,333,1.148,334,1.537,335,1.148,337,1.387,338,1.387,345,1.387,349,2.384,356,1.708,381,1.387,390,1.936,401,2.384,425,1.708,426,1.936,439,2.195,440,2.195,441,2.195,442,2.195,443,2.195,444,3.528,445,2.195,446,3.063,447,3.063,448,2.195,449,3.528,450,3.063,451,2.195,452,3.063,453,3.063,454,2.195,455,2.195,456,2.195,457,3.063,458,2.195,459,2.195,460,2.195,461,2.195,462,2.195,463,2.195,464,3.528,465,2.195,466,2.195,467,2.195,468,3.528,469,3.063,470,2.195,471,3.063,472,3.063,473,3.818,474,2.195,475,2.195,476,2.195,477,2.195,478,2.195,479,3.528,480,3.063,481,2.195,482,2.195,483,2.195,484,2.195,485,2.195,486,2.195,487,2.195,488,2.195,489,2.195,490,3.063,491,2.195,492,2.195,493,2.195,494,2.195,495,2.195,496,2.384,497,3.063,498,2.195,499,2.195,500,2.195,501,2.195,502,2.195,503,2.195,504,3.063,505,2.195,506,3.063,507,2.195,508,2.195,509,2.195,510,2.195,511,2.195,512,2.195,513,2.195,514,2.195,515,2.195,516,2.195,517,2.195]],["title/modules.html",[335,1.702]],["body/modules.html",[26,0.064,166,0.055,167,0.064,168,0.055,334,1.637,335,1.964,426,2.374,496,2.923,518,3.756,519,3.756]],["title/overview.html",[520,2.533]],["body/overview.html",[1,1.687,2,1.619,26,0.07,28,2.763,114,0.357,152,1.619,159,1.687,160,1.349,161,1.398,163,1.146,166,0.046,167,0.057,168,0.046,171,1.619,268,1.619,333,2.01,334,2.111,336,1.619,337,1.957,338,1.957,339,2.41,340,2.41,341,2.41,342,2.41,343,2.991,344,2.41,345,1.957,357,1.619,520,2.41,521,3.844]],["title/miscellaneous/variables.html",[522,1.565,523,2.24]],["body/miscellaneous/variables.html",[9,0.644,10,0.374,11,2.173,12,1.606,13,1.811,14,2.388,26,0.067,53,0.869,74,0.824,166,0.052,167,0.061,168,0.052,522,2.742,523,2.742,524,4.156]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":42,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{}}}],["0.15.6",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":44,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["1",{"_index":28,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"overview.html":{}}}],["1.1.1",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":39,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["2",{"_index":521,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["7.2.1",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":220,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["_monacopath",{"_index":272,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["accessors",{"_index":254,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["actual_component",{"_index":165,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["addelectronfixscripts",{"_index":275,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["amd",{"_index":308,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["angular",{"_index":504,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":454,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":105,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":219,"title":{},"body":{"components/MonacoEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/http",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":425,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":442,"title":{},"body":{"index.html":{}}}],["app",{"_index":457,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":474,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":479,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":477,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":470,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":473,"title":{},"body":{"index.html":{}}}],["application",{"_index":506,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":475,"title":{},"body":{"index.html":{}}}],["architect",{"_index":460,"title":{},"body":{"index.html":{}}}],["assets",{"_index":453,"title":{},"body":{"index.html":{}}}],["assets/monaco",{"_index":281,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["automaticlayout",{"_index":240,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["available",{"_index":444,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":284,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["behaviorsubject(false",{"_index":286,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["beta.22",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["bindings",{"_index":489,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":215,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["bootstrap",{"_index":338,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":31,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["both",{"_index":495,"title":{},"body":{"index.html":{}}}],["box",{"_index":29,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["browse",{"_index":519,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":426,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":471,"title":{},"body":{"index.html":{}}}],["build",{"_index":461,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":20,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changedetectionstrategy",{"_index":104,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":21,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes",{"_index":88,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["changes.code",{"_index":125,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.code.firstchange",{"_index":126,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.modified",{"_index":127,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.modified.firstchange",{"_index":128,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.options",{"_index":132,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.language",{"_index":222,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.readonly",{"_index":138,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.theme",{"_index":135,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.firstchange",{"_index":133,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.language",{"_index":221,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.readonly",{"_index":137,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.theme",{"_index":134,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["class",{"_index":114,"title":{"classes/ResizedEvent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classes",{"_index":398,"title":{},"body":{"classes/ResizedEvent.html":{}}}],["cluster_monacoeditormodule",{"_index":340,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["cluster_monacoeditormodule_declarations",{"_index":341,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["cluster_monacoeditormodule_exports",{"_index":342,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["code",{"_index":483,"title":{},"body":{"index.html":{}}}],["column",{"_index":33,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["component",{"_index":0,"title":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.(eg",{"_index":469,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":157,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["components/monaco",{"_index":352,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["const",{"_index":112,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor",{"_index":67,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(element",{"_index":371,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(monacoloader",{"_index":68,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["constructor(ngzone",{"_index":277,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["constructor(private",{"_index":115,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(templateref",{"_index":255,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["container",{"_index":46,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["controlvalueaccessor",{"_index":169,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["core",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["correctly",{"_index":515,"title":{},"body":{"index.html":{}}}],["cover",{"_index":510,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":400,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":476,"title":{},"body":{"index.html":{}}}],["css",{"_index":321,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["current",{"_index":508,"title":{},"body":{"index.html":{}}}],["dark",{"_index":481,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":337,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["declare",{"_index":111,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["default",{"_index":217,"title":{},"body":{"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["defined",{"_index":70,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["demo",{"_index":441,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":336,"title":{"dependencies.html":{}},"body":{"modules/MonacoEditorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["designer",{"_index":507,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":505,"title":{},"body":{"index.html":{}}}],["diff",{"_index":12,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["diffeditoroptions",{"_index":499,"title":{},"body":{"index.html":{}}}],["direction",{"_index":32,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["directive",{"_index":155,"title":{"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["directives",{"_index":160,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"overview.html":{}}}],["directives/monaco",{"_index":350,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["directives/resized",{"_index":354,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["display",{"_index":34,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["document.body.appendchild(electronfixscript",{"_index":332,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.body.appendchild(loaderscript",{"_index":317,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createelement('script",{"_index":311,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createtextnode('self.module",{"_index":325,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createtextnode('self.process.browser",{"_index":329,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["documentation",{"_index":401,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["dynamic",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["editor",{"_index":24,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["editor'},{'name",{"_index":158,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editor.component",{"_index":353,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor.component.ts",{"_index":14,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.component.ts:102",{"_index":82,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:112",{"_index":207,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:121",{"_index":197,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:122",{"_index":92,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:125",{"_index":200,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:129",{"_index":204,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:131",{"_index":89,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:137",{"_index":202,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:141",{"_index":191,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:177",{"_index":195,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:186",{"_index":193,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:57",{"_index":95,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:58",{"_index":97,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:60",{"_index":81,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":78,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:62",{"_index":80,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:64",{"_index":71,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":90,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:71",{"_index":190,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":212,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:74",{"_index":208,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":210,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:76",{"_index":218,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":216,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":87,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:79",{"_index":214,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:80",{"_index":213,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:81",{"_index":188,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:85",{"_index":194,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:95",{"_index":192,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.idiffeditorconstructionoptions",{"_index":79,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.ieditorconstructionoptions",{"_index":189,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.istandalonecodeeditor",{"_index":209,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.istandalonediffeditor",{"_index":96,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.module.ts",{"_index":347,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html",{"_index":500,"title":{},"body":{"index.html":{}}}],["editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html",{"_index":498,"title":{},"body":{"index.html":{}}}],["editor/min/vs",{"_index":282,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["editor/monaco",{"_index":13,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/src/lib/components/monaco",{"_index":11,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/src/lib/directives/monaco",{"_index":250,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"coverage.html":{}}}],["editor/src/lib/directives/resized",{"_index":364,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["editor/src/lib/interfaces/monaco",{"_index":360,"title":{},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["editor/src/lib/monaco",{"_index":346,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor/src/lib/services/monaco",{"_index":270,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["editorcontent",{"_index":55,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editoroptions",{"_index":480,"title":{},"body":{"index.html":{}}}],["eg",{"_index":490,"title":{},"body":{"index.html":{}}}],["electron",{"_index":514,"title":{},"body":{"index.html":{}}}],["electronfixscript",{"_index":319,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["electronfixscript.appendchild(inlinescript",{"_index":330,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["electronfixscript.appendchild(inlinescript2",{"_index":331,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["element",{"_index":154,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["elementref",{"_index":98,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ellipsis",{"_index":48,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["entrycomponents",{"_index":348,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["environment",{"_index":323,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["event",{"_index":93,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["event.directive",{"_index":355,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["event.directive.ts",{"_index":365,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["event.directive.ts:21",{"_index":374,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:23",{"_index":379,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:24",{"_index":378,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:25",{"_index":372,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:30",{"_index":375,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:35",{"_index":376,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:4",{"_index":399,"title":{},"body":{"classes/ResizedEvent.html":{}}}],["event.newheight",{"_index":150,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["event.newwidth",{"_index":149,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["eventemitter",{"_index":373,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["export",{"_index":113,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["exportas",{"_index":386,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["exports",{"_index":339,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["false",{"_index":235,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["feature",{"_index":466,"title":{},"body":{"index.html":{}}}],["features",{"_index":493,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["filter",{"_index":106,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["filter(isloaded",{"_index":119,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["flex",{"_index":27,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["fn",{"_index":198,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["following",{"_index":494,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":472,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":175,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["function",{"_index":203,"title":{},"body":{"components/MonacoEditorComponent.html":{},"index.html":{}}}],["getting",{"_index":437,"title":{"index.html":{}},"body":{}}],["glob",{"_index":452,"title":{},"body":{"index.html":{}}}],["height",{"_index":45,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["hidden",{"_index":36,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["host",{"_index":25,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["html",{"_index":153,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["htmldivelement",{"_index":94,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["https://microsoft.github.io/monaco",{"_index":497,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":15,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["import",{"_index":101,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["imports",{"_index":356,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{}}}],["include",{"_index":464,"title":{},"body":{"index.html":{}}}],["index",{"_index":53,"title":{"index.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["initmonaco",{"_index":58,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["injectable",{"_index":268,"title":{"injectables/MonacoEditorLoaderService.html":{}},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":269,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["inlinescript",{"_index":324,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["inlinescript2",{"_index":328,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["input",{"_index":103,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"index.html":{}}}],["inputs",{"_index":63,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"index.html":{}}}],["install",{"_index":446,"title":{},"body":{"index.html":{}}}],["installation",{"_index":445,"title":{},"body":{"index.html":{}}}],["interface",{"_index":357,"title":{"interfaces/MonacoOptions.html":{}},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":359,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["isloaded",{"_index":120,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["ismonacoloaded",{"_index":273,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["javascript",{"_index":482,"title":{},"body":{"index.html":{}}}],["js",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["language",{"_index":239,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["layout",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":152,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["lib",{"_index":456,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":509,"title":{},"body":{"index.html":{}}}],["library",{"_index":503,"title":{},"body":{"index.html":{}}}],["linenumbers",{"_index":362,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["live",{"_index":440,"title":{},"body":{"index.html":{}}}],["load",{"_index":297,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader",{"_index":309,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.directive",{"_index":351,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["loader.directive.ts",{"_index":251,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"coverage.html":{}}}],["loader.directive.ts:6",{"_index":260,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.directive.ts:8",{"_index":259,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.service",{"_index":110,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.service.ts",{"_index":271,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:13",{"_index":279,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:54",{"_index":280,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:6",{"_index":288,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:7",{"_index":287,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:8",{"_index":283,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:9",{"_index":290,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript",{"_index":307,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.addeventlistener('load",{"_index":316,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.src",{"_index":314,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.type",{"_index":312,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loadmonacoeditor",{"_index":253,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loadmonacoeditor(value",{"_index":263,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["m.message).join",{"_index":248,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["main",{"_index":465,"title":{},"body":{"index.html":{}}}],["make",{"_index":455,"title":{},"body":{"index.html":{}}}],["matching",{"_index":167,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materia",{"_index":449,"title":{},"body":{"index.html":{}}}],["materialoadmonacoeditor",{"_index":252,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["materialoadmonacoeditor]'},{'name",{"_index":162,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["materiaresized",{"_index":164,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["max",{"_index":37,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{}}}],["methods",{"_index":56,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{}}}],["min",{"_index":40,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["minimap",{"_index":363,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["miscellaneous",{"_index":522,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modified",{"_index":64,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"index.html":{}}}],["module",{"_index":333,"title":{"modules/MonacoEditorModule.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":335,"title":{"modules.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"modules.html":{}}}],["monaco",{"_index":10,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(this.container",{"_index":242,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.creatediffeditor(this.container",{"_index":147,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.createmodel(this.modified",{"_index":129,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.createmodel(this.original",{"_index":130,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.getmodelmarkers({}).map(m",{"_index":247,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.setmodellanguage",{"_index":223,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.settheme(changes.options.currentvalue.theme",{"_index":136,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["monacodiffeditorcomponent",{"_index":1,"title":{"components/MonacoDiffEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorcomponent",{"_index":159,"title":{"components/MonacoEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorloaderdirective",{"_index":161,"title":{"directives/MonacoEditorLoaderDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorloaderservice",{"_index":69,"title":{"injectables/MonacoEditorLoaderService.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["monacoeditorloaderservice.ismonacoloaded.subscribe(isloaded",{"_index":265,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["monacoeditormodule",{"_index":334,"title":{"modules/MonacoEditorModule.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["monacoloader",{"_index":76,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["monacooptions",{"_index":358,"title":{"interfaces/MonacoOptions.html":{}},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["monacopath",{"_index":276,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["monacopath(value",{"_index":294,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["motivations",{"_index":501,"title":{},"body":{"index.html":{}}}],["multi",{"_index":176,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["name",{"_index":73,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["nconsole.log(\"hello",{"_index":484,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":310,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["needs",{"_index":511,"title":{},"body":{"index.html":{}}}],["new",{"_index":285,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["newheight",{"_index":385,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["newwidth",{"_index":384,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ng_validators",{"_index":177,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ng_value_accessor",{"_index":173,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ngmodel",{"_index":488,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":349,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{}}}],["ngonchanges",{"_index":59,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngonchanges(changes",{"_index":85,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngondestroy",{"_index":60,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngoninit",{"_index":61,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ngx",{"_index":23,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngzone",{"_index":278,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["ngzone.run",{"_index":305,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["node_modules/monaco",{"_index":462,"title":{},"body":{"index.html":{}}}],["noderequire",{"_index":274,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["notably",{"_index":512,"title":{},"body":{"index.html":{}}}],["npm",{"_index":447,"title":{},"body":{"index.html":{}}}],["null",{"_index":233,"title":{},"body":{"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["number",{"_index":377,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["object.assign",{"_index":146,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["oldheight",{"_index":366,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["oldwidth",{"_index":367,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onchanges",{"_index":17,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ondestroy",{"_index":18,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["onerrorstatuschange",{"_index":178,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ongotamdloader",{"_index":296,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["oninit",{"_index":16,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onresized",{"_index":62,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onresized(event",{"_index":91,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ontouched",{"_index":179,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["optional",{"_index":75,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["options",{"_index":65,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["options.ts",{"_index":361,"title":{},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["opts",{"_index":141,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["original",{"_index":66,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"index.html":{}}}],["originalcode",{"_index":486,"title":{},"body":{"index.html":{}}}],["out",{"_index":345,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":381,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["output('resized",{"_index":387,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["outputs",{"_index":369,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["overflow",{"_index":35,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["overview",{"_index":520,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":413,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":72,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["parseerror",{"_index":180,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["pastparseerror",{"_index":246,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["paths",{"_index":302,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["position",{"_index":49,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["private",{"_index":57,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["projects",{"_index":458,"title":{},"body":{"index.html":{}}}],["propagatechange",{"_index":181,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["properties",{"_index":54,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{}}}],["provide",{"_index":172,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["providedin",{"_index":292,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["providers",{"_index":171,"title":{},"body":{"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["queries",{"_index":382,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["reactiveform",{"_index":492,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":140,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["reference",{"_index":443,"title":{},"body":{"index.html":{}}}],["registeronchange",{"_index":183,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronchange(fn",{"_index":196,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registerontouched",{"_index":184,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registerontouched(fn",{"_index":199,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange",{"_index":185,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange(fn",{"_index":201,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange?(fn",{"_index":236,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["relative",{"_index":50,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["repository",{"_index":448,"title":{},"body":{"index.html":{}}}],["reset",{"_index":344,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["resize",{"_index":516,"title":{},"body":{"index.html":{}}}],["resized",{"_index":370,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizeddirective",{"_index":163,"title":{"directives/ResizedDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"overview.html":{}}}],["resizedevent",{"_index":383,"title":{"classes/ResizedEvent.html":{}},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["resizeevent",{"_index":368,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizesensor",{"_index":380,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizesensor(this.element.nativeelement",{"_index":389,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["result",{"_index":166,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":168,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":231,"title":{},"body":{"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["returns",{"_index":83,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{}}}],["root",{"_index":293,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["rxjs",{"_index":291,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":108,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["sample",{"_index":463,"title":{},"body":{"index.html":{}}}],["saveadd",{"_index":451,"title":{},"body":{"index.html":{}}}],["scrollbeyondlastline",{"_index":241,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["services/monaco",{"_index":109,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["set",{"_index":262,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["setloadmonacoeditor(value",{"_index":261,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["setmonacopath(value",{"_index":289,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["simplechanges",{"_index":86,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["size",{"_index":517,"title":{},"body":{"index.html":{}}}],["sizing",{"_index":30,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["src/.../monaco",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":9,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":438,"title":{"index.html":{}},"body":{}}],["statements",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["subscribe",{"_index":122,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["support",{"_index":496,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":518,"title":{},"body":{"modules.html":{}}}],["table",{"_index":51,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":107,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["take(1",{"_index":121,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["templateref",{"_index":256,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["templateurl",{"_index":478,"title":{},"body":{"index.html":{}}}],["text",{"_index":47,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["text/javascript",{"_index":313,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["theme",{"_index":143,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["this._monacopath",{"_index":295,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this._monacopath}/loader.js",{"_index":315,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.addelectronfixscripts",{"_index":318,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.container",{"_index":116,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor",{"_index":124,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.dispose",{"_index":151,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.getmodel",{"_index":224,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.layout",{"_index":148,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidblureditortext",{"_index":249,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":243,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidchangemodeldecorations",{"_index":245,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.setmodel",{"_index":131,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["this.editor.setvalue",{"_index":228,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.setvalue(value",{"_index":227,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.updateoptions",{"_index":139,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editorcontent.nativeelement",{"_index":117,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.element",{"_index":396,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.element.nativeelement.clientheight",{"_index":393,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.element.nativeelement.clientwidth",{"_index":392,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.initmonaco",{"_index":123,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.ismonacoloaded.next(true",{"_index":306,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.monacoeditorloaderservice.monacopath",{"_index":264,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["this.monacoloader.ismonacoloaded.pipe",{"_index":118,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.noderequire",{"_index":300,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.oldheight",{"_index":395,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.oldwidth",{"_index":394,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.onerrorstatuschange",{"_index":237,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.onresized",{"_index":391,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.ontouched",{"_index":230,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.options",{"_index":145,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.options.language",{"_index":225,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.parseerror",{"_index":232,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.propagatechange",{"_index":229,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.propagatechange(this.editor.getvalue",{"_index":244,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.resized.next(event",{"_index":397,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.resizeevent",{"_index":388,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.value",{"_index":226,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.value].join('\\n",{"_index":238,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.viewcontainer.clear",{"_index":267,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":266,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["todo",{"_index":487,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["true",{"_index":142,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["try",{"_index":439,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":327,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["ui/ngx",{"_index":450,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":326,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["understanding",{"_index":322,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["use",{"_index":468,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":174,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["using",{"_index":491,"title":{},"body":{"index.html":{}}}],["valid",{"_index":234,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validate",{"_index":186,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validationerrors",{"_index":205,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validator",{"_index":170,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["value",{"_index":182,"title":{},"body":{"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["var",{"_index":156,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["variable",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":523,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vc",{"_index":144,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["viewchild",{"_index":102,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["viewchild('diffeditor",{"_index":100,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["viewchild('editor",{"_index":211,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["viewcontainer",{"_index":257,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["viewcontainerref",{"_index":258,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["void",{"_index":84,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["vs",{"_index":303,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["want",{"_index":467,"title":{},"body":{"index.html":{}}}],["wanted",{"_index":502,"title":{},"body":{"index.html":{}}}],["wdith",{"_index":41,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["width",{"_index":38,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["window).amdrequire",{"_index":298,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).amdrequire(['vs/editor/editor.main",{"_index":304,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).amdrequire.config",{"_index":301,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).require",{"_index":299,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["workaround",{"_index":320,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["works",{"_index":513,"title":{},"body":{"index.html":{}}}],["world!\");\\n",{"_index":485,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":43,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["writevalue",{"_index":187,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["writevalue(value",{"_index":206,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["x",{"_index":390,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["your_app_name",{"_index":459,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":343,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/MonacoDiffEditorComponent.html":{"url":"components/MonacoDiffEditorComponent.html","title":"component - MonacoDiffEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MonacoDiffEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-monaco-diff-editor\n            \n\n\n            \n                styles\n                :host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}\n            \n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                editorContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMonaco\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modified\n                            \n                            \n                                options\n                            \n                            \n                                original\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(monacoLoader: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monacoLoader\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modified\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     editor.IDiffEditorConstructionOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        original\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMonaco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMonaco()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLDivElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     editor.IStandaloneDiffEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('diffEditor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    Input,\n    ChangeDetectionStrategy,\n    SimpleChanges\n} from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\nimport { editor } from 'monaco-editor';\n\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\n\ndeclare const monaco: any;\n\n@Component({\n    selector: 'ngx-monaco-diff-editor',\n    template: `\n\n  \n\n`,\n    styles: [\n        `:host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MonacoDiffEditorComponent implements OnInit, OnChanges, OnDestroy {\n    container: HTMLDivElement;\n    editor: editor.IStandaloneDiffEditor;\n\n    @Input() original: string;\n    @Input() modified: string;\n    @Input() options: editor.IDiffEditorConstructionOptions;\n\n    @ViewChild('diffEditor') editorContent: ElementRef;\n\n    constructor(private monacoLoader: MonacoEditorLoaderService) { }\n\n    ngOnInit() {\n        this.container = this.editorContent.nativeElement;\n        this.monacoLoader.isMonacoLoaded.pipe(\n            filter(isLoaded => isLoaded),\n            take(1),\n        ).subscribe(() => {\n            this.initMonaco();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.editor && ((changes.code && !changes.code.firstChange) || (changes.modified && !changes.modified.firstChange))) {\n            const modified = monaco.editor.createModel(this.modified);\n            const original = monaco.editor.createModel(this.original);\n            this.editor.setModel({\n                original,\n                modified\n            });\n        }\n        if (\n            this.editor &&\n            changes.options &&\n            !changes.options.firstChange\n        ) {\n            if (changes.options.previousValue.theme !== changes.options.currentValue.theme) {\n                monaco.editor.setTheme(changes.options.currentValue.theme);\n            }\n\n            if (changes.options.previousValue.readOnly !== changes.options.currentValue.readOnly) {\n                this.editor.updateOptions({ readOnly: changes.options.currentValue.readOnly })\n            }\n        }\n    }\n\n    private initMonaco() {\n        let opts: editor.IDiffEditorConstructionOptions = {\n            readOnly: true,\n            theme: 'vc'\n        };\n        if (this.options) {\n            opts = Object.assign({}, opts, this.options);\n        }\n        this.editor = monaco.editor.createDiffEditor(this.container, opts);\n\n        const original = monaco.editor.createModel(this.original);\n        const modified = monaco.editor.createModel(this.modified);\n\n        this.editor.setModel({\n            original,\n            modified\n        });\n        this.editor.layout();\n    }\n\n    onResized(event) {\n        if (this.editor) {\n            this.editor.layout({\n                width: event.newWidth,\n                height: event.newHeight\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n    }\n}\n\n    \n\n\n    \n            :host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'MonacoDiffEditorComponent', 'selector': 'ngx-monaco-diff-editor'},{'name': 'MonacoEditorComponent', 'selector': 'ngx-monaco-editor'}];\n    var DIRECTIVES = [{'name': 'MonacoEditorLoaderDirective', 'selector': '[materiaLoadMonacoEditor]'},{'name': 'ResizedDirective', 'selector': '[materiaResized]'}];\n    var ACTUAL_COMPONENT = {'name': 'MonacoDiffEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MonacoEditorComponent.html":{"url":"components/MonacoEditorComponent.html","title":"component - MonacoEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MonacoEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n                ControlValueAccessor\n                Validator\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MonacoEditorComponent), multi: true\n}\n                            {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => MonacoEditorComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ngx-monaco-editor\n            \n\n\n            \n                styles\n                :host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}\n            \n\n            \n                template\n                \t\n\t\t\n\t\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                editorContent\n                            \n                            \n                                    Private\n                                onErrorStatusChange\n                            \n                            \n                                    Private\n                                onTouched\n                            \n                            \n                                parseError\n                            \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMonaco\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResized\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(monacoLoader: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monacoLoader\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     editor.IEditorConstructionOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:71\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMonaco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMonaco()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:177\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            registerOnValidatorChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnValidatorChange(fn: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationErrors\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLDivElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     editor.IStandaloneCodeEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('editor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onErrorStatusChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    Input,\n    ChangeDetectionStrategy,\n    forwardRef,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\nimport { editor } from 'monaco-editor';\n\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\n\ndeclare const monaco: any;\n\n@Component({\n    selector: 'ngx-monaco-editor',\n    template: `\n\t\n\t\t\n\t\n`,\n    styles: [\n        `:host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MonacoEditorComponent),\n            multi: true\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => MonacoEditorComponent),\n            multi: true,\n        }\n    ]\n})\nexport class MonacoEditorComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor, Validator {\n    @Input() options: editor.IEditorConstructionOptions;\n    @ViewChild('editor') editorContent: ElementRef;\n\n    container: HTMLDivElement;\n    editor: editor.IStandaloneCodeEditor;\n    value: string;\n    parseError: boolean;\n\n    private onTouched: () => void;\n    private onErrorStatusChange: () => void;\n    private propagateChange: (_: any) => any = (_: any) => { };\n\n    constructor(private monacoLoader: MonacoEditorLoaderService) { }\n\n    ngOnInit() {\n        this.container = this.editorContent.nativeElement;\n        this.monacoLoader.isMonacoLoaded.pipe(\n            filter(isLoaded => isLoaded),\n            take(1)\n        ).subscribe(() => {\n            this.initMonaco();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.editor && changes.options && !changes.options.firstChange) {\n            if (changes.options.previousValue.language !== changes.options.currentValue.language) {\n                monaco.editor.setModelLanguage(\n                    this.editor.getModel(),\n                    this.options && this.options.language ? this.options.language : 'text'\n                );\n            }\n            if (changes.options.previousValue.theme !== changes.options.currentValue.theme) {\n                monaco.editor.setTheme(changes.options.currentValue.theme);\n            }\n            if (changes.options.previousValue.readOnly !== changes.options.currentValue.readOnly) {\n                this.editor.updateOptions({ readOnly: changes.options.currentValue.readOnly });\n            }\n        }\n    }\n\n    writeValue(value: string): void {\n        this.value = value;\n        if (this.editor && value) {\n            this.editor.setValue(value);\n        } else if (this.editor) {\n            this.editor.setValue('');\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    validate(): ValidationErrors {\n        return (!this.parseError) ? null : {\n            parseError: {\n                valid: false,\n            }\n        };\n    }\n\n    registerOnValidatorChange?(fn: () => void): void {\n        this.onErrorStatusChange = fn;\n    }\n\n    private initMonaco() {\n        let opts: editor.IEditorConstructionOptions = {\n            value: [this.value].join('\\n'),\n            language: 'text',\n            automaticLayout: true,\n            scrollBeyondLastLine: false,\n            theme: 'vc'\n        };\n        if (this.options) {\n            opts = Object.assign({}, opts, this.options);\n        }\n        this.editor = monaco.editor.create(this.container, opts);\n        this.editor.layout();\n\n        this.editor.onDidChangeModelContent(() => {\n            this.propagateChange(this.editor.getValue());\n        });\n\n        this.editor.onDidChangeModelDecorations(() => {\n            const pastParseError = this.parseError;\n            if (monaco.editor.getModelMarkers({}).map(m => m.message).join(', ')) {\n                this.parseError = true;\n            } else {\n                this.parseError = false;\n            }\n\n            if (pastParseError !== this.parseError) {\n                this.onErrorStatusChange();\n            }\n        });\n\n        this.editor.onDidBlurEditorText(() => {\n            this.onTouched();\n        });\n    }\n\n    onResized(event) {\n        if (this.editor) {\n            this.editor.layout({\n                width: event.newWidth,\n                height: event.newHeight\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n    }\n}\n\n    \n\n\n    \n            :host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'MonacoDiffEditorComponent', 'selector': 'ngx-monaco-diff-editor'},{'name': 'MonacoEditorComponent', 'selector': 'ngx-monaco-editor'}];\n    var DIRECTIVES = [{'name': 'MonacoEditorLoaderDirective', 'selector': '[materiaLoadMonacoEditor]'},{'name': 'ResizedDirective', 'selector': '[materiaResized]'}];\n    var ACTUAL_COMPONENT = {'name': 'MonacoEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MonacoEditorLoaderDirective.html":{"url":"directives/MonacoEditorLoaderDirective.html","title":"directive - MonacoEditorLoaderDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MonacoEditorLoaderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [materiaLoadMonacoEditor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadMonacoEditor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loadMonacoEditor\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, monacoEditorLoaderService: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        monacoEditorLoaderService\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadMonacoEditor\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:6\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loadMonacoEditor\n                    \n                \n\n\n                \n                    \n                        setloadMonacoEditor(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:6\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { MonacoEditorLoaderService } from '../services/monaco-editor-loader.service';\n\n@Directive({ selector: '[materiaLoadMonacoEditor]' })\nexport class MonacoEditorLoaderDirective {\n    @Input() set loadMonacoEditor(value: any) {\n        this.monacoEditorLoaderService.monacoPath = value;\n    }\n\n    constructor(\n        private templateRef: TemplateRef,\n        private viewContainer: ViewContainerRef,\n        private monacoEditorLoaderService: MonacoEditorLoaderService) {\n        monacoEditorLoaderService.isMonacoLoaded.subscribe(isLoaded => {\n            if (isLoaded) {\n                this.viewContainer.createEmbeddedView(this.templateRef);\n            } else {\n                this.viewContainer.clear();\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MonacoEditorLoaderService.html":{"url":"injectables/MonacoEditorLoaderService.html","title":"injectable - MonacoEditorLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MonacoEditorLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _monacoPath\n                            \n                            \n                                isMonacoLoaded\n                            \n                            \n                                nodeRequire\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElectronFixScripts\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    monacoPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElectronFixScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElectronFixScripts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _monacoPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/monaco-editor/min/vs'\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMonacoLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeRequire\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        monacoPath\n                    \n                \n\n\n                \n                    \n                        setmonacoPath(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:9\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class MonacoEditorLoaderService {\n    nodeRequire: any;\n    isMonacoLoaded: BehaviorSubject = new BehaviorSubject(false);\n    private _monacoPath = 'assets/monaco-editor/min/vs';\n    set monacoPath(value: any) {\n        if (value) {\n            this._monacoPath = value;\n        }\n    }\n\n    constructor(ngZone: NgZone) {\n        const onGotAmdLoader = () => {\n            // Load monaco\n            (window).amdRequire =  (window).require;\n            if (this.nodeRequire) {\n                (window).require = this.nodeRequire;\n            }\n            (window).amdRequire.config({ paths: { 'vs': this._monacoPath } });\n            (window).amdRequire(['vs/editor/editor.main'], () => {\n                ngZone.run(() => this.isMonacoLoaded.next(true));\n            });\n        };\n\n        let loaderScript: any = null;\n        // Load AMD loader if necessary\n        if (!(window).require && !(window).amdRequire) {\n\n            loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = `${this._monacoPath}/loader.js`;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n\n        } else if (!(window).amdRequire) {\n\n            this.addElectronFixScripts();\n\n            this.nodeRequire =  (window).require;\n            loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = `${this._monacoPath}/loader.js`;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n\n        } else {\n            onGotAmdLoader();\n        }\n    }\n\n    addElectronFixScripts() {\n        const electronFixScript = document.createElement('script');\n        // workaround monaco-css not understanding the environment\n        const inlineScript = document.createTextNode('self.module = undefined;');\n        // workaround monaco-typescript not understanding the environment\n        const inlineScript2 = document.createTextNode('self.process.browser = true;');\n        electronFixScript.appendChild(inlineScript);\n        electronFixScript.appendChild(inlineScript2);\n        document.body.appendChild(electronFixScript);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MonacoEditorModule.html":{"url":"modules/MonacoEditorModule.html","title":"module - MonacoEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MonacoEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonacoEditorModule\n\n\n\ncluster_MonacoEditorModule_declarations\n\n\n\ncluster_MonacoEditorModule_exports\n\n\n\n\nMonacoDiffEditorComponent\n\nMonacoDiffEditorComponent\n\n\n\nMonacoEditorModule\n\nMonacoEditorModule\n\nMonacoEditorModule -->\n\nMonacoDiffEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorComponent\n\nMonacoEditorComponent\n\nMonacoEditorModule -->\n\nMonacoEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorLoaderDirective\n\nMonacoEditorLoaderDirective\n\nMonacoEditorModule -->\n\nMonacoEditorLoaderDirective->MonacoEditorModule\n\n\n\n\n\nResizedDirective\n\nResizedDirective\n\nMonacoEditorModule -->\n\nResizedDirective->MonacoEditorModule\n\n\n\n\n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent  -->\n\nMonacoEditorModule->MonacoDiffEditorComponent \n\n\n\n\n\nMonacoEditorComponent \n\nMonacoEditorComponent \n\nMonacoEditorComponent  -->\n\nMonacoEditorModule->MonacoEditorComponent \n\n\n\n\n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective  -->\n\nMonacoEditorModule->MonacoEditorLoaderDirective \n\n\n\n\n\nResizedDirective \n\nResizedDirective \n\nResizedDirective  -->\n\nMonacoEditorModule->ResizedDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/monaco-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                        \n                            MonacoEditorLoaderDirective\n                        \n                        \n                            ResizedDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                        \n                            MonacoEditorLoaderDirective\n                        \n                        \n                            ResizedDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MonacoEditorLoaderDirective } from './directives/monaco-editor-loader.directive';\nimport { MonacoEditorComponent } from './components/monaco-editor/monaco-editor.component';\nimport { ResizedDirective } from './directives/resized-event.directive';\nimport { MonacoDiffEditorComponent } from './components/monaco-diff-editor/monaco-diff-editor.component';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    MonacoEditorLoaderDirective,\n    MonacoEditorComponent,\n    ResizedDirective,\n    MonacoDiffEditorComponent\n  ],\n  exports: [\n    MonacoEditorLoaderDirective,\n    MonacoEditorComponent,\n    MonacoDiffEditorComponent,\n    ResizedDirective\n  ],\n  entryComponents: [MonacoEditorComponent, MonacoDiffEditorComponent]\n})\nexport class MonacoEditorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonacoOptions.html":{"url":"interfaces/MonacoOptions.html","title":"interface - MonacoOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonacoOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/interfaces/monaco-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        automaticLayout\n                                \n                                \n                                        language\n                                \n                                \n                                            Optional\n                                        lineNumbers\n                                \n                                \n                                            Optional\n                                        minimap\n                                \n                                \n                                            Optional\n                                        readOnly\n                                \n                                \n                                            Optional\n                                        scrollBeyondLastLine\n                                \n                                \n                                            Optional\n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        automaticLayout\n                                    \n                                \n                                \n                                    \n                                        automaticLayout:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineNumbers\n                                    \n                                \n                                \n                                    \n                                        lineNumbers:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimap\n                                    \n                                \n                                \n                                    \n                                        minimap:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollBeyondLastLine\n                                    \n                                \n                                \n                                    \n                                        scrollBeyondLastLine:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MonacoOptions {\n    language: string;\n    lineNumbers?: boolean;\n    theme?: string;\n    readOnly?: boolean;\n    scrollBeyondLastLine?: boolean;\n    automaticLayout?: boolean;\n    minimap?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResizedDirective.html":{"url":"directives/ResizedDirective.html","title":"directive - ResizedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ResizedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [materiaResized]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                oldHeight\n                            \n                            \n                                    Private\n                                oldWidth\n                            \n                            \n                                    Private\n                                resizeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onResized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        resized\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onResized()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resizeEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Output, OnInit } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\nexport class ResizedEvent {\n    constructor(\n        readonly element: ElementRef,\n        readonly newWidth: number,\n        readonly newHeight: number,\n        readonly oldWidth: number,\n        readonly oldHeight: number\n    ) { }\n}\n\n@Directive({\n    selector: '[materiaResized]',\n    exportAs: 'materiaResized'\n})\nexport class ResizedDirective implements OnInit {\n\n    @Output('resized')\n    readonly resized = new EventEmitter();\n\n    private oldWidth: number;\n    private oldHeight: number;\n    private resizeEvent: ResizeSensor;\n\n    constructor(private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.resizeEvent = new ResizeSensor(this.element.nativeElement, x => this.onResized());\n        this.onResized();\n    }\n\n    private onResized(): void {\n        const newWidth = this.element.nativeElement.clientWidth;\n        const newHeight = this.element.nativeElement.clientHeight;\n\n        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n            return;\n        }\n\n        const event = new ResizedEvent(\n            this.element,\n            newWidth,\n            newHeight,\n            this.oldWidth,\n            this.oldHeight);\n\n        this.oldWidth = this.element.nativeElement.clientWidth;\n        this.oldHeight = this.element.nativeElement.clientHeight;\n\n        this.resized.next(event);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResizedEvent.html":{"url":"classes/ResizedEvent.html","title":"class - ResizedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResizedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, newWidth: number, newHeight: number, oldWidth: number, oldHeight: number)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oldWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oldHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Output, OnInit } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\nexport class ResizedEvent {\n    constructor(\n        readonly element: ElementRef,\n        readonly newWidth: number,\n        readonly newHeight: number,\n        readonly oldWidth: number,\n        readonly oldHeight: number\n    ) { }\n}\n\n@Directive({\n    selector: '[materiaResized]',\n    exportAs: 'materiaResized'\n})\nexport class ResizedDirective implements OnInit {\n\n    @Output('resized')\n    readonly resized = new EventEmitter();\n\n    private oldWidth: number;\n    private oldHeight: number;\n    private resizeEvent: ResizeSensor;\n\n    constructor(private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.resizeEvent = new ResizeSensor(this.element.nativeElement, x => this.onResized());\n        this.onResized();\n    }\n\n    private onResized(): void {\n        const newWidth = this.element.nativeElement.clientWidth;\n        const newHeight = this.element.nativeElement.clientHeight;\n\n        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n            return;\n        }\n\n        const event = new ResizedEvent(\n            this.element,\n            newWidth,\n            newHeight,\n            this.oldWidth,\n            this.oldHeight);\n\n        this.oldWidth = this.element.nativeElement.clientWidth;\n        this.oldHeight = this.element.nativeElement.clientHeight;\n\n        this.resized.next(event);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n            \n            component\n            MonacoDiffEditorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n            \n            component\n            MonacoEditorComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts\n            \n            directive\n            MonacoEditorLoaderDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n            \n            directive\n            ResizedDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n            \n            class\n            ResizedEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/interfaces/monaco-options.ts\n            \n            interface\n            MonacoOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts\n            \n            injectable\n            MonacoEditorLoaderService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.1\n        \n            @angular/cdk : ^7.2.1\n        \n            @angular/common : ~7.2.1\n        \n            @angular/compiler : ~7.2.1\n        \n            @angular/core : ~7.2.1\n        \n            @angular/flex-layout : 7.0.0-beta.22\n        \n            @angular/forms : ~7.2.1\n        \n            @angular/http : ~7.2.1\n        \n            @angular/material : ^7.2.1\n        \n            @angular/platform-browser : ~7.2.1\n        \n            @angular/platform-browser-dynamic : ~7.2.1\n        \n            @angular/router : ~7.2.1\n        \n            core-js : ^2.5.4\n        \n            css-element-queries : ^1.1.1\n        \n            monaco-editor : ^0.15.6\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDocumentation\nTry it out on : live demo.\nApi reference available on : documentation.\nInstallation\nInstall from npm repository:\nnpm install @materia-ui/ngx-monaco-editor --saveAdd the glob to assets in angular.json (to make monaco-editor lib available to the app):\n{\n    ...\n    \"projects\": {\n      \"YOUR_APP_NAME\": {\n          ...\n          \"architect\": {\n              \"build\": {\n                ...\n                \"options\": {\n                    ...\n                    \"assets\": [\n                        { \"glob\": \"**/*\", \"input\": \"node_modules/monaco-editor\", \"output\": \"assets/monaco-editor/\" }\n                    ],\n                    ...\n                }\n                ...\n              }\n            }\n            ...\n        }\n    },\n    ...\n}Sample\nInclude MonacoEditorModule in Main Module and Feature Modules where you want to use the editor component.(eg: app.module.ts): \nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MonacoEditorModule } from '@materia-ui/ngx-monaco-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MonacoEditorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Create Editor options in component.(eg: app.component.ts)\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  editorOptions = {theme: 'vs-dark', language: 'javascript'};\n  code: string = 'function x() {\\nconsole.log(\"Hello world!\");\\n}';\n  originalCode: string = 'function x() { // TODO }';\n}Include editor component in your html with options input and ngModel bindings  (eg: app.component.html) or using ReactiveForm features.\nInclude diff-editor component in your html and use the following inputs: options, original and modified (eg: app.component.html).\nBoth components support all available monaco-editor options:\n\nEditorOptions: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html,\nDiffEditorOptions: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html.\n\nMotivations\nWe wanted to use monaco-editor library with angular in our desktop application: Materia Designer.\nThe current angular libraries did not cover all of our needs, notably:\n\nWorks on Browser and Electron application,\nSupport flex-box container and correctly resize editor when container size changes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MonacoEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonacoEditorModule\n\n\n\ncluster_MonacoEditorModule_declarations\n\n\n\ncluster_MonacoEditorModule_exports\n\n\n\n\nMonacoDiffEditorComponent\n\nMonacoDiffEditorComponent\n\n\n\nMonacoEditorModule\n\nMonacoEditorModule\n\nMonacoEditorModule -->\n\nMonacoDiffEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorComponent\n\nMonacoEditorComponent\n\nMonacoEditorModule -->\n\nMonacoEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorLoaderDirective\n\nMonacoEditorLoaderDirective\n\nMonacoEditorModule -->\n\nMonacoEditorLoaderDirective->MonacoEditorModule\n\n\n\n\n\nResizedDirective\n\nResizedDirective\n\nMonacoEditorModule -->\n\nResizedDirective->MonacoEditorModule\n\n\n\n\n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent  -->\n\nMonacoEditorModule->MonacoDiffEditorComponent \n\n\n\n\n\nMonacoEditorComponent \n\nMonacoEditorComponent \n\nMonacoEditorComponent  -->\n\nMonacoEditorModule->MonacoEditorComponent \n\n\n\n\n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective  -->\n\nMonacoEditorModule->MonacoEditorLoaderDirective \n\n\n\n\n\nResizedDirective \n\nResizedDirective \n\nResizedDirective  -->\n\nMonacoEditorModule->ResizedDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            monaco   (src/.../monaco-diff-editor.component.ts)\n                        \n                        \n                            monaco   (src/.../monaco-editor.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monaco\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monaco\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
