var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/MonacoDiffEditorComponent.html",[0,0.871,1,0.871]],["body/components/MonacoDiffEditorComponent.html",[0,0.952,1,1.083,2,1.104,3,0.329,4,0.329,5,2.04,6,1.038,7,1.038,8,0.265,9,0.646,10,0.35,11,2.18,12,1.678,13,1.816,14,0.697,15,1.104,16,1.371,17,2.04,18,2.04,19,0.697,20,1.643,21,1.643,22,1.255,23,2.319,24,1.013,25,2.04,26,0.073,27,2.442,28,1.657,29,2.183,30,2.04,31,2.04,32,2.04,33,2.04,34,2.688,35,3.007,36,2.688,37,2.04,38,3.244,39,3.007,40,2.688,41,2.04,42,2.183,43,2.04,44,2.688,45,2.816,46,2.183,47,2.04,48,2.04,49,2.04,50,2.04,51,1.657,52,1.643,53,0.329,54,0.92,55,2.04,56,1.104,57,0.952,58,2.319,59,1.643,60,2.319,61,1.559,62,1.104,63,1.104,64,2.816,65,1.657,66,2.816,67,0.484,68,1.038,69,1.083,70,1.492,71,2.112,72,0.952,73,1.255,74,0.744,75,0.789,76,1.643,77,1.299,78,1.334,79,2.621,80,1.334,81,1.334,82,1.334,83,1.415,84,1.18,85,1.643,86,2.319,87,1.038,88,0.843,89,1.038,90,1.334,91,1.643,92,1.334,93,0.697,94,1.643,95,1.334,96,2.112,97,1.334,98,1.371,99,1.038,100,2.112,101,0.735,102,1.038,103,1.559,104,1.038,105,0.265,106,1.038,107,1.038,108,1.038,109,0.843,110,0.843,111,1.038,112,1.415,113,0.265,114,0.154,115,0.697,116,1.038,117,1.038,118,1.038,119,1.038,120,0.843,121,1.038,122,1.038,123,1.038,124,2.528,125,1.334,126,1.334,127,1.334,128,1.334,129,2.112,130,2.112,131,2.112,132,1.038,133,1.038,134,1.038,135,1.334,136,1.038,137,2.319,138,0.697,139,0.843,140,1.643,141,1.038,142,1.334,143,1.643,144,1.038,145,1.038,146,1.038,147,0.697,148,1.335,149,0.92,150,0.329,151,2.319,152,1.038,153,1.038,154,0.484,155,0.581,156,0.402,157,1.038,158,0.329,159,0.697,160,1.038,161,0.02,162,0.031,163,0.02]],["title/components/MonacoEditorComponent.html",[0,0.871,154,0.871]],["body/components/MonacoEditorComponent.html",[0,0.812,1,0.383,2,0.913,3,0.26,4,0.26,5,1.739,6,0.821,7,0.821,8,0.209,9,0.664,10,0.352,11,2.243,12,0.383,13,1.869,14,0.552,15,0.913,16,1.168,17,1.739,18,1.739,19,0.552,20,1.359,21,1.359,22,1.126,23,2.021,24,0.949,25,1.739,26,0.073,27,2.251,28,1.412,29,1.96,30,1.739,31,1.739,32,1.739,33,1.739,34,2.413,35,2.771,36,2.413,37,1.739,38,3.05,39,2.771,40,2.413,41,1.739,42,1.96,43,1.739,44,2.413,45,2.555,46,1.96,47,2.239,48,1.739,49,1.739,50,1.739,51,1.412,52,1.359,53,0.26,54,0.761,55,1.739,56,0.913,57,1.397,58,2.021,59,1.359,60,2.021,61,1.358,62,0.913,63,0.913,65,1.412,67,0.383,68,0.821,69,0.943,70,1.546,72,1.192,73,1.333,74,0.802,75,1.072,76,1.359,77,0.761,83,1.599,84,1.504,85,1.359,86,2.021,87,0.821,88,0.667,89,0.821,91,1.359,93,0.552,94,1.359,98,1.168,99,0.821,101,0.71,102,0.821,103,0.913,104,0.821,105,0.209,106,0.821,107,0.821,108,0.821,109,0.667,110,0.667,111,0.821,112,0.761,113,0.209,114,0.122,115,0.552,116,0.821,117,0.821,118,0.821,119,0.821,120,0.667,121,0.821,122,0.821,123,0.821,124,2.239,132,0.821,133,0.821,134,0.821,136,0.821,137,2.021,139,1.96,140,1.739,141,0.821,143,1.359,144,0.821,145,0.821,146,0.821,147,0.552,148,1.104,149,0.761,150,0.26,151,2.021,152,0.821,153,0.821,154,1.247,155,0.46,156,0.318,157,0.821,158,0.26,159,0.552,160,0.821,161,0.016,162,0.026,163,0.016,164,2.234,165,2.234,166,0.913,167,2.597,168,2.234,169,2.597,170,2.878,171,2.597,172,2.234,173,2.234,174,2.234,175,2.597,176,2.234,177,2.075,178,1.746,179,1.746,180,1.746,181,2.597,182,1.746,183,1.746,184,2.234,185,1.055,186,1.055,187,1.055,188,1.055,189,1.055,190,1.055,191,1.746,192,1.055,193,3.101,194,1.746,195,1.055,196,1.055,197,1.055,198,2.021,199,2.234,200,1.746,201,1.055,202,1.055,203,1.746,204,1.055,205,1.746,206,1.055,207,1.359,208,1.055,209,1.055,210,1.055,211,0.667,212,1.055,213,1.055,214,1.746,215,1.055,216,1.055,217,1.746,218,1.055,219,1.055,220,1.055,221,1.746,222,0.667,223,2.878,224,0.821,225,1.055,226,2.234,227,1.055,228,1.746,229,1.055,230,0.667,231,0.821,232,0.821,233,1.055,234,1.055,235,1.055,236,1.055,237,1.746,238,1.055,239,1.055,240,1.055]],["title/directives/MonacoEditorLoaderDirective.html",[150,0.591,156,0.722]],["body/directives/MonacoEditorLoaderDirective.html",[3,0.68,4,0.68,8,0.547,9,0.649,10,0.332,19,1.442,22,1.297,24,1.07,26,0.072,53,0.68,57,1.439,63,1.868,67,1.297,69,1.643,70,1.439,72,1.297,73,1.297,74,0.786,75,1.075,83,1.202,84,1.002,101,0.881,103,1.868,105,0.547,109,1.743,110,1.743,113,0.547,114,0.318,120,1.743,150,0.881,155,1.202,156,1.075,161,0.041,162,0.053,163,0.041,177,2.258,241,3.26,242,2.146,243,3.572,244,4.19,245,2.779,246,2.758,247,4.446,248,3.961,249,4.19,250,2.758,251,3.572,252,2.758,253,2.146,254,2.758,255,2.758,256,2.758,257,2.758,258,2.758]],["title/injectables/MonacoEditorLoaderService.html",[69,0.871,259,1.254]],["body/injectables/MonacoEditorLoaderService.html",[3,0.517,4,0.517,8,0.416,9,0.653,10,0.351,24,1.039,26,0.073,53,0.517,54,1.292,56,1.55,57,1.249,67,0.761,69,1.077,70,1.488,72,1.077,73,1.077,74,0.783,75,0.892,77,0.913,83,1.292,84,1.077,101,0.731,105,0.416,112,1.63,113,0.416,114,0.242,139,1.324,161,0.031,162,0.044,163,0.031,177,2.494,224,1.63,245,2.307,253,1.63,259,1.55,260,2.095,261,3.278,262,1.63,263,3.44,264,3.44,265,3.44,266,3.74,267,2.964,268,2.964,269,3.947,270,2.095,271,2.095,272,2.964,273,2.307,274,2.964,275,2.095,276,3.44,277,1.55,278,2.964,279,2.095,280,2.095,281,2.095,282,2.095,283,1.63,284,2.095,285,1.63,286,2.095,287,2.964,288,3.74,289,2.964,290,3.44,291,3.74,292,3.44,293,2.095,294,2.095,295,1.63,296,2.095,297,2.095,298,2.095,299,3.44,300,2.095,301,2.095,302,2.095,303,3.44,304,2.964,305,2.964,306,2.964,307,2.964,308,2.964,309,2.964,310,2.095,311,2.095,312,2.964,313,1.095,314,2.964,315,2.964,316,2.095,317,2.095,318,2.095,319,2.095,320,2.095,321,2.095,322,2.095,323,2.095,324,2.095]],["title/modules/MonacoEditorModule.html",[325,1.254,326,1.045]],["body/modules/MonacoEditorModule.html",[1,1.726,3,0.65,4,0.65,8,0.523,9,0.408,10,0.209,12,1.259,13,1.511,24,0.65,26,0.072,101,1.055,105,0.523,113,0.523,114,0.304,147,1.378,154,1.726,156,1.416,158,1.16,161,0.039,162,0.051,163,0.039,166,1.378,325,1.378,326,2.087,327,1.378,328,1.378,329,2.449,330,1.665,331,3.015,332,2.05,333,2.05,334,2.05,335,2.698,336,2.05,337,1.665,338,2.635,339,2.635,340,3.467,341,2.698,342,2.635,343,2.635,344,3.467,345,3.467,346,2.635,347,2.635,348,2.05]],["title/interfaces/MonacoOptions.html",[349,1.254,350,1.515]],["body/interfaces/MonacoOptions.html",[3,0.74,4,0.74,8,0.595,9,0.465,10,0.237,26,0.07,53,0.74,54,1.642,74,0.915,75,1.442,77,1.98,113,0.595,138,2.26,161,0.044,162,0.055,163,0.044,207,3.728,230,2.731,231,3.363,232,3.363,349,1.568,350,2.381,351,2.999,352,2.334,353,2.334,354,4.321,355,4.321,356,3.363]],["title/directives/ResizedDirective.html",[150,0.591,158,0.591]],["body/directives/ResizedDirective.html",[3,0.549,4,0.549,8,0.442,9,0.677,10,0.346,15,1.618,16,1.859,19,1.164,22,1.124,26,0.072,53,0.549,54,1.348,56,1.618,57,1.663,61,2.009,62,2.009,67,1.124,70,1.556,72,0.809,73,0.809,74,0.801,75,0.67,83,1.348,84,1.395,93,1.164,98,2.111,101,0.763,105,0.442,112,1.549,113,0.614,114,0.357,115,1.164,138,2.241,149,1.674,150,0.763,155,0.97,158,0.763,159,1.859,161,0.033,162,0.046,163,0.033,222,1.408,277,1.859,313,1.164,357,2.762,358,1.408,359,2.989,360,2.989,361,2.766,362,3.094,363,2.766,364,1.733,365,3.094,366,2.766,367,2.227,368,2.227,369,2.227,370,3.4,371,2.227,372,2.227,373,2.766,374,1.408,375,1.408,376,1.618,377,2.989,378,2.989,379,1.733,380,1.733,381,1.733,382,1.733,383,1.408,384,2.408,385,2.408,386,2.408,387,2.766,388,2.766,389,1.733,390,1.733]],["title/classes/ResizedEvent.html",[114,0.277,376,1.254]],["body/classes/ResizedEvent.html",[3,0.623,4,0.623,8,0.501,9,0.522,10,0.267,15,1.322,16,1.763,22,0.918,26,0.072,57,1.471,61,1.322,62,1.322,67,1.225,70,0.918,72,0.918,73,0.918,74,0.501,75,0.761,84,1.225,93,1.322,98,2.206,101,0.832,105,0.501,112,1.654,113,0.669,114,0.389,115,1.322,138,2.316,149,1.764,150,0.832,158,0.623,159,1.763,161,0.037,162,0.05,163,0.037,222,1.597,277,1.984,313,1.322,357,2.131,358,1.597,359,3.151,360,3.151,361,1.967,363,1.967,364,1.967,366,2.624,370,3.678,373,2.624,374,1.597,375,1.597,376,1.984,377,3.377,378,3.377,379,1.967,380,1.967,381,1.967,382,1.967,383,1.597,384,2.624,385,2.624,386,2.624,387,2.953,388,2.953,389,1.967,390,1.967,391,2.527,392,2.527]],["title/coverage.html",[393,2.533]],["body/coverage.html",[0,1.346,1,1.061,8,0.579,9,0.726,10,0.376,11,2.238,12,1.554,13,1.865,14,2.238,24,0.914,26,0.07,42,2.96,51,1.846,69,1.061,74,0.579,114,0.337,150,0.914,154,1.061,156,0.879,158,0.721,161,0.043,162,0.055,163,0.043,241,2.273,242,2.273,259,1.527,261,2.273,262,2.273,277,1.527,349,1.527,350,1.846,352,2.273,353,2.273,357,2.342,358,2.342,376,1.527,393,2.273,394,2.273,395,2.921,396,2.921,397,2.921,398,3.706,399,3.706,400,2.921,401,2.921,402,3.706,403,2.921,404,2.921,405,2.921]],["title/dependencies.html",[328,1.505,406,2.011]],["body/dependencies.html",[10,0.255,24,0.794,26,0.072,105,0.638,149,1.402,161,0.047,162,0.058,163,0.047,211,2.034,283,2.504,313,1.682,328,1.682,375,2.034,407,3.218,408,4.814,409,3.218,410,3.218,411,3.218,412,3.218,413,3.218,414,3.218,415,3.218,416,3.218,417,3.218,418,3.062,419,2.487,420,3.218,421,3.218,422,3.218,423,3.218,424,3.218,425,3.218,426,3.218,427,3.218,428,3.218,429,3.218]],["title/index.html",[53,0.496,430,2.011,431,2.011]],["body/index.html",[0,1.383,2,1.142,10,0.317,12,0.793,22,0.793,24,1.126,26,0.073,27,1.38,29,1.38,46,1.929,63,1.142,64,1.699,65,2.533,66,1.699,77,1.33,88,1.38,101,1.024,103,1.596,105,0.605,113,0.605,114,0.352,148,1.929,161,0.032,162,0.045,163,0.032,166,1.142,198,2.375,211,1.38,230,1.38,273,1.699,285,1.699,295,1.699,325,1.142,326,1.533,327,1.142,329,1.38,330,1.38,337,1.38,341,2.375,348,1.699,356,1.699,374,1.38,383,1.929,394,2.375,418,1.699,419,1.929,432,2.184,433,2.184,434,2.184,435,2.184,436,2.184,437,3.518,438,2.184,439,3.052,440,3.052,441,2.184,442,3.518,443,3.052,444,2.184,445,3.052,446,3.052,447,2.184,448,2.184,449,2.184,450,3.052,451,2.184,452,2.184,453,2.184,454,2.184,455,2.184,456,2.184,457,3.518,458,2.184,459,2.184,460,2.184,461,3.518,462,3.052,463,2.184,464,3.052,465,3.052,466,3.809,467,2.184,468,2.184,469,2.184,470,2.184,471,2.184,472,3.518,473,3.052,474,2.184,475,2.184,476,2.184,477,2.184,478,2.184,479,2.184,480,2.184,481,2.184,482,2.184,483,3.052,484,2.184,485,2.184,486,2.184,487,2.184,488,2.184,489,2.375,490,3.052,491,2.184,492,2.184,493,2.184,494,2.184,495,2.184,496,2.184,497,3.052,498,2.184,499,3.052,500,2.184,501,2.184,502,2.184,503,2.184,504,2.184,505,2.184,506,2.184,507,2.184,508,2.184,509,2.184,510,2.184]],["title/modules.html",[327,1.702]],["body/modules.html",[26,0.063,161,0.055,162,0.063,163,0.055,326,1.636,327,1.963,419,2.373,489,2.922,511,3.755,512,3.755]],["title/overview.html",[513,2.533]],["body/overview.html",[1,1.686,2,1.615,26,0.07,28,2.76,114,0.356,147,1.615,154,1.686,155,1.346,156,1.397,158,1.145,161,0.045,162,0.057,163,0.045,166,1.615,259,1.615,325,2.007,326,2.111,328,1.615,329,1.952,330,1.952,331,2.404,332,2.404,333,2.404,334,2.404,335,2.986,336,2.404,337,1.952,349,1.615,513,2.404,514,3.838]],["title/miscellaneous/variables.html",[515,1.565,516,2.24]],["body/miscellaneous/variables.html",[9,0.643,10,0.374,11,2.172,12,1.605,13,1.81,14,2.387,26,0.067,53,0.868,74,0.824,161,0.052,162,0.061,163,0.052,515,2.739,516,2.739,517,4.154]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":42,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{}}}],["0.15.6",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":44,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["1",{"_index":28,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"overview.html":{}}}],["1.1.1",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":39,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["2",{"_index":514,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["7.2.1",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":212,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["_monacopath",{"_index":263,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["accessors",{"_index":245,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["actual_component",{"_index":160,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["addelectronfixscripts",{"_index":266,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["amd",{"_index":300,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["angular",{"_index":497,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":447,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":105,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":211,"title":{},"body":{"components/MonacoEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/http",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":418,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":435,"title":{},"body":{"index.html":{}}}],["app",{"_index":450,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":467,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":472,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":470,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":463,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":466,"title":{},"body":{"index.html":{}}}],["application",{"_index":499,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":468,"title":{},"body":{"index.html":{}}}],["architect",{"_index":453,"title":{},"body":{"index.html":{}}}],["assets",{"_index":446,"title":{},"body":{"index.html":{}}}],["assets/monaco",{"_index":273,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["automaticlayout",{"_index":231,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["available",{"_index":437,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":276,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["behaviorsubject(false",{"_index":278,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["beta.22",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["bindings",{"_index":482,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":207,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["bootstrap",{"_index":330,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":31,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["both",{"_index":488,"title":{},"body":{"index.html":{}}}],["box",{"_index":29,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["browse",{"_index":512,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":419,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":464,"title":{},"body":{"index.html":{}}}],["build",{"_index":454,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":20,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changedetectionstrategy",{"_index":104,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":21,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes",{"_index":88,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["changes.code",{"_index":125,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.code.firstchange",{"_index":126,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.modified",{"_index":127,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.modified.firstchange",{"_index":128,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.options",{"_index":132,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue",{"_index":214,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["changes.options.currentvalue.theme",{"_index":135,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["changes.options.firstchange",{"_index":133,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.language",{"_index":213,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["changes.options.previousvalue.theme",{"_index":134,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["class",{"_index":114,"title":{"classes/ResizedEvent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classes",{"_index":391,"title":{},"body":{"classes/ResizedEvent.html":{}}}],["cluster_monacoeditormodule",{"_index":332,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["cluster_monacoeditormodule_declarations",{"_index":333,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["cluster_monacoeditormodule_exports",{"_index":334,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["code",{"_index":476,"title":{},"body":{"index.html":{}}}],["column",{"_index":33,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["component",{"_index":0,"title":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.(eg",{"_index":462,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["components/monaco",{"_index":344,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["const",{"_index":112,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor",{"_index":67,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(element",{"_index":364,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(monacoloader",{"_index":68,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["constructor(ngzone",{"_index":268,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["constructor(private",{"_index":115,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["constructor(templateref",{"_index":246,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["container",{"_index":46,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["controlvalueaccessor",{"_index":164,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["core",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["correctly",{"_index":508,"title":{},"body":{"index.html":{}}}],["cover",{"_index":503,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":393,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":469,"title":{},"body":{"index.html":{}}}],["css",{"_index":313,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["current",{"_index":501,"title":{},"body":{"index.html":{}}}],["dark",{"_index":474,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":329,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["declare",{"_index":111,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["default",{"_index":272,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["defined",{"_index":70,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["demo",{"_index":434,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":328,"title":{"dependencies.html":{}},"body":{"modules/MonacoEditorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["designer",{"_index":500,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":498,"title":{},"body":{"index.html":{}}}],["diff",{"_index":12,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["diffeditoroptions",{"_index":492,"title":{},"body":{"index.html":{}}}],["direction",{"_index":32,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["directive",{"_index":150,"title":{"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["directives",{"_index":155,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"overview.html":{}}}],["directives/monaco",{"_index":342,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["directives/resized",{"_index":346,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["display",{"_index":34,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["document.body.appendchild(electronfixscript",{"_index":324,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.body.appendchild(loaderscript",{"_index":309,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createelement('script",{"_index":303,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createtextnode('self.module",{"_index":317,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["document.createtextnode('self.process.browser",{"_index":321,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["documentation",{"_index":394,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["dynamic",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["editor",{"_index":24,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["editor'},{'name",{"_index":153,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editor.component",{"_index":345,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor.component.ts",{"_index":14,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.component.ts:110",{"_index":201,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:116",{"_index":92,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:117",{"_index":192,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:121",{"_index":195,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:125",{"_index":89,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:133",{"_index":197,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:137",{"_index":186,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:172",{"_index":190,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:181",{"_index":188,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:57",{"_index":95,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:58",{"_index":97,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:60",{"_index":81,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":78,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:62",{"_index":80,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:64",{"_index":71,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":90,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.component.ts:71",{"_index":202,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":204,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:74",{"_index":210,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":208,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":185,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":87,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:80",{"_index":209,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:81",{"_index":206,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":183,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:86",{"_index":189,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:96",{"_index":187,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.component.ts:97",{"_index":82,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.idiffeditorconstructionoptions",{"_index":79,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.ieditorconstructionoptions",{"_index":184,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.istandalonecodeeditor",{"_index":203,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["editor.istandalonediffeditor",{"_index":96,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["editor.module.ts",{"_index":339,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html",{"_index":493,"title":{},"body":{"index.html":{}}}],["editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html",{"_index":491,"title":{},"body":{"index.html":{}}}],["editor/min/vs",{"_index":274,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["editor/monaco",{"_index":13,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/src/lib/components/monaco",{"_index":11,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/src/lib/directives/monaco",{"_index":241,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"coverage.html":{}}}],["editor/src/lib/directives/resized",{"_index":357,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["editor/src/lib/interfaces/monaco",{"_index":352,"title":{},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["editor/src/lib/monaco",{"_index":338,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["editor/src/lib/services/monaco",{"_index":261,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["editorcontent",{"_index":55,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["editoroptions",{"_index":473,"title":{},"body":{"index.html":{}}}],["eg",{"_index":483,"title":{},"body":{"index.html":{}}}],["electron",{"_index":507,"title":{},"body":{"index.html":{}}}],["electronfixscript",{"_index":311,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["electronfixscript.appendchild(inlinescript",{"_index":322,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["electronfixscript.appendchild(inlinescript2",{"_index":323,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["elementref",{"_index":98,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ellipsis",{"_index":48,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["entrycomponents",{"_index":340,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["environment",{"_index":315,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["event",{"_index":93,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["event.directive",{"_index":347,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["event.directive.ts",{"_index":358,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["event.directive.ts:21",{"_index":367,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:23",{"_index":372,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:24",{"_index":371,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:25",{"_index":365,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:30",{"_index":368,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:35",{"_index":369,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["event.directive.ts:4",{"_index":392,"title":{},"body":{"classes/ResizedEvent.html":{}}}],["event.newheight",{"_index":145,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["event.newwidth",{"_index":144,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["eventemitter",{"_index":366,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["export",{"_index":113,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["exportas",{"_index":379,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["exports",{"_index":331,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["false",{"_index":226,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["feature",{"_index":459,"title":{},"body":{"index.html":{}}}],["features",{"_index":486,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["filter",{"_index":106,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["filter(isloaded",{"_index":119,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["flex",{"_index":27,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["fn",{"_index":193,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["following",{"_index":487,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":465,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":170,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["function",{"_index":198,"title":{},"body":{"components/MonacoEditorComponent.html":{},"index.html":{}}}],["getting",{"_index":430,"title":{"index.html":{}},"body":{}}],["glob",{"_index":445,"title":{},"body":{"index.html":{}}}],["height",{"_index":45,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["hidden",{"_index":36,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["host",{"_index":25,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["htmldivelement",{"_index":94,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["https://microsoft.github.io/monaco",{"_index":490,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":15,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["import",{"_index":101,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["imports",{"_index":348,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{}}}],["include",{"_index":457,"title":{},"body":{"index.html":{}}}],["index",{"_index":53,"title":{"index.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["initmonaco",{"_index":58,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["injectable",{"_index":259,"title":{"injectables/MonacoEditorLoaderService.html":{}},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["inlinescript",{"_index":316,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["inlinescript2",{"_index":320,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["input",{"_index":103,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"index.html":{}}}],["inputs",{"_index":63,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"index.html":{}}}],["install",{"_index":439,"title":{},"body":{"index.html":{}}}],["installation",{"_index":438,"title":{},"body":{"index.html":{}}}],["interface",{"_index":349,"title":{"interfaces/MonacoOptions.html":{}},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":351,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["isloaded",{"_index":120,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["ismonacoloaded",{"_index":264,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["javascript",{"_index":475,"title":{},"body":{"index.html":{}}}],["js",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["language",{"_index":230,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["layout",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["lib",{"_index":449,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":502,"title":{},"body":{"index.html":{}}}],["library",{"_index":496,"title":{},"body":{"index.html":{}}}],["linenumbers",{"_index":354,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["live",{"_index":433,"title":{},"body":{"index.html":{}}}],["load",{"_index":289,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader",{"_index":301,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.directive",{"_index":343,"title":{},"body":{"modules/MonacoEditorModule.html":{}}}],["loader.directive.ts",{"_index":242,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"coverage.html":{}}}],["loader.directive.ts:6",{"_index":251,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.directive.ts:8",{"_index":250,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.service",{"_index":110,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["loader.service.ts",{"_index":262,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:13",{"_index":270,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:54",{"_index":271,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:6",{"_index":280,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:7",{"_index":279,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:8",{"_index":275,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loader.service.ts:9",{"_index":282,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript",{"_index":299,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.addeventlistener('load",{"_index":308,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.src",{"_index":306,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loaderscript.type",{"_index":304,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["loadmonacoeditor",{"_index":244,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["loadmonacoeditor(value",{"_index":254,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["m.message).join",{"_index":239,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["main",{"_index":458,"title":{},"body":{"index.html":{}}}],["make",{"_index":448,"title":{},"body":{"index.html":{}}}],["matching",{"_index":162,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materia",{"_index":442,"title":{},"body":{"index.html":{}}}],["materialoadmonacoeditor",{"_index":243,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["materialoadmonacoeditor]'},{'name",{"_index":157,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["materiaresized",{"_index":159,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["max",{"_index":37,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{}}}],["methods",{"_index":56,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{}}}],["min",{"_index":40,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["minimap",{"_index":355,"title":{},"body":{"interfaces/MonacoOptions.html":{}}}],["miscellaneous",{"_index":515,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modified",{"_index":64,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"index.html":{}}}],["module",{"_index":325,"title":{"modules/MonacoEditorModule.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":327,"title":{"modules.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"modules.html":{}}}],["monaco",{"_index":10,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(this.container",{"_index":233,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.creatediffeditor(this.container",{"_index":142,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.createmodel(this.modified",{"_index":129,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.createmodel(this.original",{"_index":130,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["monaco.editor.getmodelmarkers({}).map(m",{"_index":238,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.setmodellanguage",{"_index":215,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["monaco.editor.settheme(changes.options.currentvalue.theme",{"_index":136,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["monacodiffeditorcomponent",{"_index":1,"title":{"components/MonacoDiffEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorcomponent",{"_index":154,"title":{"components/MonacoEditorComponent.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorloaderdirective",{"_index":156,"title":{"directives/MonacoEditorLoaderDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"modules/MonacoEditorModule.html":{},"coverage.html":{},"overview.html":{}}}],["monacoeditorloaderservice",{"_index":69,"title":{"injectables/MonacoEditorLoaderService.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"coverage.html":{}}}],["monacoeditorloaderservice.ismonacoloaded.subscribe(isloaded",{"_index":256,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["monacoeditormodule",{"_index":326,"title":{"modules/MonacoEditorModule.html":{}},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["monacoloader",{"_index":76,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["monacooptions",{"_index":350,"title":{"interfaces/MonacoOptions.html":{}},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["monacopath",{"_index":267,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["monacopath(value",{"_index":286,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["motivations",{"_index":494,"title":{},"body":{"index.html":{}}}],["multi",{"_index":171,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["name",{"_index":73,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["nconsole.log(\"hello",{"_index":477,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":302,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["needs",{"_index":504,"title":{},"body":{"index.html":{}}}],["new",{"_index":277,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["newheight",{"_index":378,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["newwidth",{"_index":377,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ng_validators",{"_index":172,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ng_value_accessor",{"_index":168,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ngmodel",{"_index":481,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":341,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{}}}],["ngonchanges",{"_index":59,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngonchanges(changes",{"_index":85,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngondestroy",{"_index":60,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngoninit",{"_index":61,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["ngx",{"_index":23,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ngzone",{"_index":269,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["ngzone.run",{"_index":297,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["node_modules/monaco",{"_index":455,"title":{},"body":{"index.html":{}}}],["noderequire",{"_index":265,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["notably",{"_index":505,"title":{},"body":{"index.html":{}}}],["npm",{"_index":440,"title":{},"body":{"index.html":{}}}],["null",{"_index":224,"title":{},"body":{"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["number",{"_index":370,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["object.assign",{"_index":141,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["oldheight",{"_index":359,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["oldwidth",{"_index":360,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onchanges",{"_index":17,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ondestroy",{"_index":18,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["onerrorstatuschange",{"_index":173,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["ongotamdloader",{"_index":288,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["oninit",{"_index":16,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onresized",{"_index":62,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["onresized(event",{"_index":91,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["ontouched",{"_index":174,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["optional",{"_index":75,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["options",{"_index":65,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"index.html":{}}}],["options.ts",{"_index":353,"title":{},"body":{"interfaces/MonacoOptions.html":{},"coverage.html":{}}}],["opts",{"_index":137,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["original",{"_index":66,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"index.html":{}}}],["originalcode",{"_index":479,"title":{},"body":{"index.html":{}}}],["out",{"_index":337,"title":{},"body":{"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":374,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["output('resized",{"_index":380,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["outputs",{"_index":362,"title":{},"body":{"directives/ResizedDirective.html":{}}}],["overflow",{"_index":35,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["overview",{"_index":513,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":406,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":72,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["parseerror",{"_index":175,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["pastparseerror",{"_index":237,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["paths",{"_index":294,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["position",{"_index":49,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["private",{"_index":57,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["projects",{"_index":451,"title":{},"body":{"index.html":{}}}],["propagatechange",{"_index":176,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["properties",{"_index":54,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{}}}],["provide",{"_index":167,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["providedin",{"_index":284,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["providers",{"_index":166,"title":{},"body":{"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"index.html":{},"overview.html":{}}}],["queries",{"_index":375,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"dependencies.html":{}}}],["reactiveform",{"_index":485,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":138,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["reference",{"_index":436,"title":{},"body":{"index.html":{}}}],["registeronchange",{"_index":178,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronchange(fn",{"_index":191,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registerontouched",{"_index":179,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registerontouched(fn",{"_index":194,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange",{"_index":180,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange(fn",{"_index":196,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["registeronvalidatorchange?(fn",{"_index":227,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["relative",{"_index":50,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["repository",{"_index":441,"title":{},"body":{"index.html":{}}}],["reset",{"_index":336,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}],["resize",{"_index":509,"title":{},"body":{"index.html":{}}}],["resized",{"_index":363,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizeddirective",{"_index":158,"title":{"directives/ResizedDirective.html":{}},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"modules/MonacoEditorModule.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"overview.html":{}}}],["resizedevent",{"_index":376,"title":{"classes/ResizedEvent.html":{}},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{}}}],["resizeevent",{"_index":361,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizesensor",{"_index":373,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["resizesensor(this.element.nativeelement",{"_index":382,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["result",{"_index":161,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":163,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":222,"title":{},"body":{"components/MonacoEditorComponent.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["returns",{"_index":83,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{}}}],["root",{"_index":285,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["rxjs",{"_index":283,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":108,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["sample",{"_index":456,"title":{},"body":{"index.html":{}}}],["saveadd",{"_index":444,"title":{},"body":{"index.html":{}}}],["scrollbeyondlastline",{"_index":232,"title":{},"body":{"components/MonacoEditorComponent.html":{},"interfaces/MonacoOptions.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["services/monaco",{"_index":109,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{}}}],["set",{"_index":253,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["setloadmonacoeditor(value",{"_index":252,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["setmonacopath(value",{"_index":281,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["simplechanges",{"_index":86,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["size",{"_index":510,"title":{},"body":{"index.html":{}}}],["sizing",{"_index":30,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["src/.../monaco",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":9,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"modules/MonacoEditorModule.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":431,"title":{"index.html":{}},"body":{}}],["statements",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"index.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["subscribe",{"_index":122,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["support",{"_index":489,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":511,"title":{},"body":{"modules.html":{}}}],["table",{"_index":51,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":107,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["take(1",{"_index":121,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["templateref",{"_index":247,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["templateurl",{"_index":471,"title":{},"body":{"index.html":{}}}],["text",{"_index":47,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["text/javascript",{"_index":305,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["theme",{"_index":356,"title":{},"body":{"interfaces/MonacoOptions.html":{},"index.html":{}}}],["this._monacopath",{"_index":287,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this._monacopath}/loader.js",{"_index":307,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.addelectronfixscripts",{"_index":310,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.container",{"_index":116,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor",{"_index":124,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.dispose",{"_index":146,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.getmodel",{"_index":216,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.layout",{"_index":143,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidblureditortext",{"_index":240,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":234,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.ondidchangemodeldecorations",{"_index":236,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editor.setmodel",{"_index":131,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["this.editor.setvalue(value",{"_index":219,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.editorcontent.nativeelement",{"_index":117,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.element",{"_index":389,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.element.nativeelement.clientheight",{"_index":386,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.element.nativeelement.clientwidth",{"_index":385,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.initmonaco",{"_index":123,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.ismonacoloaded.next(true",{"_index":298,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.monacoeditorloaderservice.monacopath",{"_index":255,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["this.monacoloader.ismonacoloaded.pipe",{"_index":118,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.noderequire",{"_index":292,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["this.oldheight",{"_index":388,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.oldwidth",{"_index":387,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.onerrorstatuschange",{"_index":228,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.onresized",{"_index":384,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.ontouched",{"_index":221,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.options",{"_index":140,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["this.options.language",{"_index":217,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.parseerror",{"_index":223,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.propagatechange",{"_index":220,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.propagatechange(this.editor.getvalue",{"_index":235,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.resized.next(event",{"_index":390,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.resizeevent",{"_index":381,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["this.value",{"_index":218,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.value].join('\\n",{"_index":229,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["this.viewcontainer.clear",{"_index":258,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":257,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["todo",{"_index":480,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["true",{"_index":139,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["try",{"_index":432,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"interfaces/MonacoOptions.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":319,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["ui/ngx",{"_index":443,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":318,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["understanding",{"_index":314,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["use",{"_index":461,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":169,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["using",{"_index":484,"title":{},"body":{"index.html":{}}}],["valid",{"_index":225,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validate",{"_index":181,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validationerrors",{"_index":199,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["validator",{"_index":165,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["value",{"_index":177,"title":{},"body":{"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["variable",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":516,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["viewchild",{"_index":102,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["viewchild('diffeditor",{"_index":100,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{}}}],["viewchild('editor",{"_index":205,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["viewcontainer",{"_index":248,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["viewcontainerref",{"_index":249,"title":{},"body":{"directives/MonacoEditorLoaderDirective.html":{}}}],["void",{"_index":84,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{},"directives/MonacoEditorLoaderDirective.html":{},"injectables/MonacoEditorLoaderService.html":{},"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{}}}],["vs",{"_index":295,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{},"index.html":{}}}],["want",{"_index":460,"title":{},"body":{"index.html":{}}}],["wanted",{"_index":495,"title":{},"body":{"index.html":{}}}],["wdith",{"_index":41,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["width",{"_index":38,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["window).amdrequire",{"_index":290,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).amdrequire(['vs/editor/editor.main",{"_index":296,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).amdrequire.config",{"_index":293,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["window).require",{"_index":291,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["workaround",{"_index":312,"title":{},"body":{"injectables/MonacoEditorLoaderService.html":{}}}],["works",{"_index":506,"title":{},"body":{"index.html":{}}}],["world!\");\\n",{"_index":478,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":43,"title":{},"body":{"components/MonacoDiffEditorComponent.html":{},"components/MonacoEditorComponent.html":{}}}],["writevalue",{"_index":182,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["writevalue(value",{"_index":200,"title":{},"body":{"components/MonacoEditorComponent.html":{}}}],["x",{"_index":383,"title":{},"body":{"directives/ResizedDirective.html":{},"classes/ResizedEvent.html":{},"index.html":{}}}],["your_app_name",{"_index":452,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":335,"title":{},"body":{"modules/MonacoEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/MonacoDiffEditorComponent.html":{"url":"components/MonacoDiffEditorComponent.html","title":"component - MonacoDiffEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MonacoDiffEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-monaco-diff-editor\n            \n\n\n            \n                styles\n                :host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}\n            \n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                editorContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMonaco\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modified\n                            \n                            \n                                options\n                            \n                            \n                                original\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(monacoLoader: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monacoLoader\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modified\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     editor.IDiffEditorConstructionOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        original\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMonaco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMonaco()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLDivElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     editor.IStandaloneDiffEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('diffEditor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    Input,\n    ChangeDetectionStrategy,\n    SimpleChanges\n} from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\nimport { editor } from 'monaco-editor';\n\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\n\ndeclare const monaco: any;\n\n@Component({\n    selector: 'ngx-monaco-diff-editor',\n    template: `\n\n  \n\n`,\n    styles: [\n        `:host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MonacoDiffEditorComponent implements OnInit, OnChanges, OnDestroy {\n    container: HTMLDivElement;\n    editor: editor.IStandaloneDiffEditor;\n\n    @Input() original: string;\n    @Input() modified: string;\n    @Input() options: editor.IDiffEditorConstructionOptions;\n\n    @ViewChild('diffEditor') editorContent: ElementRef;\n\n    constructor(private monacoLoader: MonacoEditorLoaderService) { }\n\n    ngOnInit() {\n        this.container = this.editorContent.nativeElement;\n        this.monacoLoader.isMonacoLoaded.pipe(\n          filter(isLoaded => isLoaded),\n          take(1),\n        ).subscribe(() => {\n            this.initMonaco();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.editor && ((changes.code && ! changes.code.firstChange) || (changes.modified && ! changes.modified.firstChange))) {\n            const modified = monaco.editor.createModel(this.modified);\n            const original = monaco.editor.createModel(this.original);\n            this.editor.setModel({\n                original,\n                modified\n            });\n        }\n        if (\n            this.editor &&\n            changes.options &&\n            ! changes.options.firstChange &&\n            changes.options.previousValue.theme !== changes.options.currentValue.theme\n          ) {\n            monaco.editor.setTheme(changes.options.currentValue.theme);\n        }\n    }\n\n    private initMonaco() {\n        let opts: editor.IDiffEditorConstructionOptions = {\n            readOnly: true\n        };\n        if (this.options) {\n          opts = Object.assign({}, opts, this.options);\n        }\n        this.editor = monaco.editor.createDiffEditor(this.container, opts);\n\n        const original = monaco.editor.createModel(this.original);\n        const modified = monaco.editor.createModel(this.modified);\n\n        this.editor.setModel({\n            original,\n            modified\n        });\n        this.editor.layout();\n    }\n\n    onResized(event) {\n        if (this.editor) {\n            this.editor.layout({\n                width: event.newWidth,\n                height: event.newHeight\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n    }\n}\n\n    \n\n\n    \n            :host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'MonacoDiffEditorComponent', 'selector': 'ngx-monaco-diff-editor'},{'name': 'MonacoEditorComponent', 'selector': 'ngx-monaco-editor'}];\n    var DIRECTIVES = [{'name': 'MonacoEditorLoaderDirective', 'selector': '[materiaLoadMonacoEditor]'},{'name': 'ResizedDirective', 'selector': '[materiaResized]'}];\n    var ACTUAL_COMPONENT = {'name': 'MonacoDiffEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MonacoEditorComponent.html":{"url":"components/MonacoEditorComponent.html","title":"component - MonacoEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MonacoEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n                ControlValueAccessor\n                Validator\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MonacoEditorComponent), multi: true\n}\n                            {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => MonacoEditorComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                ngx-monaco-editor\n            \n\n\n            \n                styles\n                :host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}\n            \n\n            \n                template\n                \t\n\t\t\n\t\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                editorContent\n                            \n                            \n                                    Private\n                                onErrorStatusChange\n                            \n                            \n                                    Private\n                                onTouched\n                            \n                            \n                                parseError\n                            \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMonaco\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResized\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(monacoLoader: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monacoLoader\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     editor.IEditorConstructionOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:77\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMonaco\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMonaco()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \nonResized(event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            registerOnValidatorChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnValidatorChange(fn: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationErrors\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLDivElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     editor.IStandaloneCodeEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('editor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onErrorStatusChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    Input,\n    ChangeDetectionStrategy,\n    forwardRef,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { filter, take } from 'rxjs/operators';\nimport { editor } from 'monaco-editor';\n\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\n\ndeclare const monaco: any;\n\n@Component({\n    selector: 'ngx-monaco-editor',\n    template: `\n\t\n\t\t\n\t\n`,\n    styles: [\n        `:host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MonacoEditorComponent),\n            multi: true\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => MonacoEditorComponent),\n            multi: true,\n        }\n    ]\n})\nexport class MonacoEditorComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor, Validator {\n    container: HTMLDivElement;\n    editor: editor.IStandaloneCodeEditor;\n\n    value: string;\n    parseError: boolean;\n\n    @Input() options: editor.IEditorConstructionOptions;\n    @ViewChild('editor') editorContent: ElementRef;\n\n    private propagateChange: (_: any) => any;\n    private onTouched: () => void;\n    private onErrorStatusChange: () => void;\n\n    constructor(private monacoLoader: MonacoEditorLoaderService) { }\n\n    ngOnInit() {\n        this.container = this.editorContent.nativeElement;\n        this.monacoLoader.isMonacoLoaded.pipe(\n          filter(isLoaded => isLoaded),\n          take(1),\n        ).subscribe(() => {\n            this.initMonaco();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.editor && changes.options && ! changes.options.firstChange) {\n          if (changes.options.previousValue.language !== changes.options.currentValue) {\n            monaco.editor.setModelLanguage(\n              this.editor.getModel(),\n              this.options && this.options.language ? this.options.language : 'text'\n            );\n          }\n          if (changes.options.previousValue.theme !== changes.options.currentValue) {\n            monaco.editor.setTheme(changes.options.currentValue.theme);\n          }\n        }\n    }\n\n    writeValue(value: any): void {\n        this.value = value;\n        if (this.editor && value) {\n            this.editor.setValue(value);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    validate(): ValidationErrors {\n        return (!this.parseError) ? null : {\n            parseError: {\n                valid: false,\n            }\n        };\n    }\n\n    registerOnValidatorChange?(fn: () => void): void {\n        this.onErrorStatusChange = fn;\n    }\n\n    private initMonaco() {\n        let opts: editor.IEditorConstructionOptions = {\n            value: [this.value].join('\\n'),\n            language: 'text',\n            automaticLayout: true,\n            scrollBeyondLastLine: false\n        };\n        if (this.options) {\n            opts = Object.assign({}, opts, this.options);\n        }\n        this.editor = monaco.editor.create(this.container, opts);\n        this.editor.layout();\n\n        this.editor.onDidChangeModelContent(() => {\n            this.propagateChange(this.editor.getValue());\n        });\n\n        this.editor.onDidChangeModelDecorations(() => {\n            const pastParseError = this.parseError;\n            if (monaco.editor.getModelMarkers({}).map(m => m.message).join(', ')) {\n                this.parseError = true;\n            } else {\n                this.parseError = false;\n            }\n\n            if (pastParseError !== this.parseError) {\n                this.onErrorStatusChange();\n            }\n        });\n\n        this.editor.onDidBlurEditorText(() => {\n            this.onTouched();\n        });\n    }\n\n    onResized(event) {\n        if (this.editor) {\n            this.editor.layout({\n                width: event.newWidth,\n                height: event.newHeight\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n    }\n}\n\n    \n\n\n    \n            :host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'MonacoDiffEditorComponent', 'selector': 'ngx-monaco-diff-editor'},{'name': 'MonacoEditorComponent', 'selector': 'ngx-monaco-editor'}];\n    var DIRECTIVES = [{'name': 'MonacoEditorLoaderDirective', 'selector': '[materiaLoadMonacoEditor]'},{'name': 'ResizedDirective', 'selector': '[materiaResized]'}];\n    var ACTUAL_COMPONENT = {'name': 'MonacoEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MonacoEditorLoaderDirective.html":{"url":"directives/MonacoEditorLoaderDirective.html","title":"directive - MonacoEditorLoaderDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MonacoEditorLoaderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [materiaLoadMonacoEditor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadMonacoEditor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loadMonacoEditor\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, monacoEditorLoaderService: MonacoEditorLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        monacoEditorLoaderService\n                                                  \n                                                        \n                                                                    MonacoEditorLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadMonacoEditor\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:6\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loadMonacoEditor\n                    \n                \n\n\n                \n                    \n                        setloadMonacoEditor(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts:6\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { MonacoEditorLoaderService } from '../services/monaco-editor-loader.service';\n\n@Directive({ selector: '[materiaLoadMonacoEditor]' })\nexport class MonacoEditorLoaderDirective {\n    @Input() set loadMonacoEditor(value: any) {\n        this.monacoEditorLoaderService.monacoPath = value;\n    }\n\n    constructor(\n        private templateRef: TemplateRef,\n        private viewContainer: ViewContainerRef,\n        private monacoEditorLoaderService: MonacoEditorLoaderService) {\n        monacoEditorLoaderService.isMonacoLoaded.subscribe(isLoaded => {\n            if (isLoaded) {\n                this.viewContainer.createEmbeddedView(this.templateRef);\n            } else {\n                this.viewContainer.clear();\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MonacoEditorLoaderService.html":{"url":"injectables/MonacoEditorLoaderService.html","title":"injectable - MonacoEditorLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MonacoEditorLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _monacoPath\n                            \n                            \n                                isMonacoLoaded\n                            \n                            \n                                nodeRequire\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElectronFixScripts\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    monacoPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElectronFixScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElectronFixScripts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _monacoPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/monaco-editor/min/vs'\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMonacoLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeRequire\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        monacoPath\n                    \n                \n\n\n                \n                    \n                        setmonacoPath(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts:9\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class MonacoEditorLoaderService {\n    nodeRequire: any;\n    isMonacoLoaded: BehaviorSubject = new BehaviorSubject(false);\n    private _monacoPath = 'assets/monaco-editor/min/vs';\n    set monacoPath(value: any) {\n        if (value) {\n            this._monacoPath = value;\n        }\n    }\n\n    constructor(ngZone: NgZone) {\n        const onGotAmdLoader = () => {\n            // Load monaco\n            (window).amdRequire =  (window).require;\n            if (this.nodeRequire) {\n                (window).require = this.nodeRequire;\n            }\n            (window).amdRequire.config({ paths: { 'vs': this._monacoPath } });\n            (window).amdRequire(['vs/editor/editor.main'], () => {\n                ngZone.run(() => this.isMonacoLoaded.next(true));\n            });\n        };\n\n        let loaderScript: any = null;\n        // Load AMD loader if necessary\n        if (!(window).require && !(window).amdRequire) {\n\n            loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = `${this._monacoPath}/loader.js`;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n\n        } else if (!(window).amdRequire) {\n\n            this.addElectronFixScripts();\n\n            this.nodeRequire =  (window).require;\n            loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = `${this._monacoPath}/loader.js`;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n\n        } else {\n            onGotAmdLoader();\n        }\n    }\n\n    addElectronFixScripts() {\n        const electronFixScript = document.createElement('script');\n        // workaround monaco-css not understanding the environment\n        const inlineScript = document.createTextNode('self.module = undefined;');\n        // workaround monaco-typescript not understanding the environment\n        const inlineScript2 = document.createTextNode('self.process.browser = true;');\n        electronFixScript.appendChild(inlineScript);\n        electronFixScript.appendChild(inlineScript2);\n        document.body.appendChild(electronFixScript);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MonacoEditorModule.html":{"url":"modules/MonacoEditorModule.html","title":"module - MonacoEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MonacoEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonacoEditorModule\n\n\n\ncluster_MonacoEditorModule_declarations\n\n\n\ncluster_MonacoEditorModule_exports\n\n\n\n\nMonacoDiffEditorComponent\n\nMonacoDiffEditorComponent\n\n\n\nMonacoEditorModule\n\nMonacoEditorModule\n\nMonacoEditorModule -->\n\nMonacoDiffEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorComponent\n\nMonacoEditorComponent\n\nMonacoEditorModule -->\n\nMonacoEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorLoaderDirective\n\nMonacoEditorLoaderDirective\n\nMonacoEditorModule -->\n\nMonacoEditorLoaderDirective->MonacoEditorModule\n\n\n\n\n\nResizedDirective\n\nResizedDirective\n\nMonacoEditorModule -->\n\nResizedDirective->MonacoEditorModule\n\n\n\n\n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent  -->\n\nMonacoEditorModule->MonacoDiffEditorComponent \n\n\n\n\n\nMonacoEditorComponent \n\nMonacoEditorComponent \n\nMonacoEditorComponent  -->\n\nMonacoEditorModule->MonacoEditorComponent \n\n\n\n\n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective  -->\n\nMonacoEditorModule->MonacoEditorLoaderDirective \n\n\n\n\n\nResizedDirective \n\nResizedDirective \n\nResizedDirective  -->\n\nMonacoEditorModule->ResizedDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/monaco-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                        \n                            MonacoEditorLoaderDirective\n                        \n                        \n                            ResizedDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MonacoDiffEditorComponent\n                        \n                        \n                            MonacoEditorComponent\n                        \n                        \n                            MonacoEditorLoaderDirective\n                        \n                        \n                            ResizedDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MonacoEditorLoaderDirective } from './directives/monaco-editor-loader.directive';\nimport { MonacoEditorComponent } from './components/monaco-editor/monaco-editor.component';\nimport { ResizedDirective } from './directives/resized-event.directive';\nimport { MonacoDiffEditorComponent } from './components/monaco-diff-editor/monaco-diff-editor.component';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    MonacoEditorLoaderDirective,\n    MonacoEditorComponent,\n    ResizedDirective,\n    MonacoDiffEditorComponent\n  ],\n  exports: [\n    MonacoEditorLoaderDirective,\n    MonacoEditorComponent,\n    MonacoDiffEditorComponent,\n    ResizedDirective\n  ],\n  entryComponents: [MonacoEditorComponent, MonacoDiffEditorComponent]\n})\nexport class MonacoEditorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonacoOptions.html":{"url":"interfaces/MonacoOptions.html","title":"interface - MonacoOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonacoOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/interfaces/monaco-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        automaticLayout\n                                \n                                \n                                        language\n                                \n                                \n                                            Optional\n                                        lineNumbers\n                                \n                                \n                                            Optional\n                                        minimap\n                                \n                                \n                                            Optional\n                                        readOnly\n                                \n                                \n                                            Optional\n                                        scrollBeyondLastLine\n                                \n                                \n                                            Optional\n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        automaticLayout\n                                    \n                                \n                                \n                                    \n                                        automaticLayout:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineNumbers\n                                    \n                                \n                                \n                                    \n                                        lineNumbers:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimap\n                                    \n                                \n                                \n                                    \n                                        minimap:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollBeyondLastLine\n                                    \n                                \n                                \n                                    \n                                        scrollBeyondLastLine:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MonacoOptions {\n    language: string;\n    lineNumbers?: boolean;\n    theme?: string;\n    readOnly?: boolean;\n    scrollBeyondLastLine?: boolean;\n    automaticLayout?: boolean;\n    minimap?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResizedDirective.html":{"url":"directives/ResizedDirective.html","title":"directive - ResizedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ResizedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [materiaResized]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                oldHeight\n                            \n                            \n                                    Private\n                                oldWidth\n                            \n                            \n                                    Private\n                                resizeEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onResized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        resized\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onResized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onResized()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resizeEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Output, OnInit } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\nexport class ResizedEvent {\n    constructor(\n        readonly element: ElementRef,\n        readonly newWidth: number,\n        readonly newHeight: number,\n        readonly oldWidth: number,\n        readonly oldHeight: number\n    ) { }\n}\n\n@Directive({\n    selector: '[materiaResized]',\n    exportAs: 'materiaResized'\n})\nexport class ResizedDirective implements OnInit {\n\n    @Output('resized')\n    readonly resized = new EventEmitter();\n\n    private oldWidth: number;\n    private oldHeight: number;\n    private resizeEvent: ResizeSensor;\n\n    constructor(private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.resizeEvent = new ResizeSensor(this.element.nativeElement, x => this.onResized());\n        this.onResized();\n    }\n\n    private onResized(): void {\n        const newWidth = this.element.nativeElement.clientWidth;\n        const newHeight = this.element.nativeElement.clientHeight;\n\n        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n            return;\n        }\n\n        const event = new ResizedEvent(\n            this.element,\n            newWidth,\n            newHeight,\n            this.oldWidth,\n            this.oldHeight);\n\n        this.oldWidth = this.element.nativeElement.clientWidth;\n        this.oldHeight = this.element.nativeElement.clientHeight;\n\n        this.resized.next(event);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResizedEvent.html":{"url":"classes/ResizedEvent.html","title":"class - ResizedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResizedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, newWidth: number, newHeight: number, oldWidth: number, oldHeight: number)\n                    \n                \n                        \n                            \n                                Defined in src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oldWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oldHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Output, OnInit } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\nexport class ResizedEvent {\n    constructor(\n        readonly element: ElementRef,\n        readonly newWidth: number,\n        readonly newHeight: number,\n        readonly oldWidth: number,\n        readonly oldHeight: number\n    ) { }\n}\n\n@Directive({\n    selector: '[materiaResized]',\n    exportAs: 'materiaResized'\n})\nexport class ResizedDirective implements OnInit {\n\n    @Output('resized')\n    readonly resized = new EventEmitter();\n\n    private oldWidth: number;\n    private oldHeight: number;\n    private resizeEvent: ResizeSensor;\n\n    constructor(private readonly element: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.resizeEvent = new ResizeSensor(this.element.nativeElement, x => this.onResized());\n        this.onResized();\n    }\n\n    private onResized(): void {\n        const newWidth = this.element.nativeElement.clientWidth;\n        const newHeight = this.element.nativeElement.clientHeight;\n\n        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n            return;\n        }\n\n        const event = new ResizedEvent(\n            this.element,\n            newWidth,\n            newHeight,\n            this.oldWidth,\n            this.oldHeight);\n\n        this.oldWidth = this.element.nativeElement.clientWidth;\n        this.oldHeight = this.element.nativeElement.clientHeight;\n\n        this.resized.next(event);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n            \n            component\n            MonacoDiffEditorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n            \n            component\n            MonacoEditorComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/monaco-editor-loader.directive.ts\n            \n            directive\n            MonacoEditorLoaderDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n            \n            directive\n            ResizedDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/directives/resized-event.directive.ts\n            \n            class\n            ResizedEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/interfaces/monaco-options.ts\n            \n            interface\n            MonacoOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ngx-monaco-editor/src/lib/services/monaco-editor-loader.service.ts\n            \n            injectable\n            MonacoEditorLoaderService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.1\n        \n            @angular/cdk : ^7.2.1\n        \n            @angular/common : ~7.2.1\n        \n            @angular/compiler : ~7.2.1\n        \n            @angular/core : ~7.2.1\n        \n            @angular/flex-layout : 7.0.0-beta.22\n        \n            @angular/forms : ~7.2.1\n        \n            @angular/http : ~7.2.1\n        \n            @angular/material : ^7.2.1\n        \n            @angular/platform-browser : ~7.2.1\n        \n            @angular/platform-browser-dynamic : ~7.2.1\n        \n            @angular/router : ~7.2.1\n        \n            core-js : ^2.5.4\n        \n            css-element-queries : ^1.1.1\n        \n            monaco-editor : ^0.15.6\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDocumentation\nTry it out on : live demo.\nApi reference available on : documentation.\nInstallation\nInstall from npm repository:\nnpm install @materia-ui/ngx-monaco-editor --saveAdd the glob to assets in angular.json (to make monaco-editor lib available to the app):\n{\n    ...\n    \"projects\": {\n      \"YOUR_APP_NAME\": {\n          ...\n          \"architect\": {\n              \"build\": {\n                ...\n                \"options\": {\n                    ...\n                    \"assets\": [\n                        { \"glob\": \"**/*\", \"input\": \"node_modules/monaco-editor\", \"output\": \"assets/monaco-editor/\" }\n                    ],\n                    ...\n                }\n                ...\n              }\n            }\n            ...\n        }\n    },\n    ...\n}Sample\nInclude MonacoEditorModule in Main Module and Feature Modules where you want to use the editor component.(eg: app.module.ts): \nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MonacoEditorModule } from '@materia-ui/ngx-monaco-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MonacoEditorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Create Editor options in component.(eg: app.component.ts)\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  editorOptions = {theme: 'vs-dark', language: 'javascript'};\n  code: string = 'function x() {\\nconsole.log(\"Hello world!\");\\n}';\n  originalCode: string = 'function x() { // TODO }';\n}Include editor component in your html with options input and ngModel bindings  (eg: app.component.html) or using ReactiveForm features.\nInclude diff-editor component in your html and use the following inputs: options, original and modified (eg: app.component.html).\nBoth components support all available monaco-editor options:\n\nEditorOptions: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html,\nDiffEditorOptions: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.idiffeditorconstructionoptions.html.\n\nMotivations\nWe wanted to use monaco-editor library with angular in our desktop application: Materia Designer.\nThe current angular libraries did not cover all of our needs, notably:\n\nWorks on Browser and Electron application,\nSupport flex-box container and correctly resize editor when container size changes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MonacoEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonacoEditorModule\n\n\n\ncluster_MonacoEditorModule_declarations\n\n\n\ncluster_MonacoEditorModule_exports\n\n\n\n\nMonacoDiffEditorComponent\n\nMonacoDiffEditorComponent\n\n\n\nMonacoEditorModule\n\nMonacoEditorModule\n\nMonacoEditorModule -->\n\nMonacoDiffEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorComponent\n\nMonacoEditorComponent\n\nMonacoEditorModule -->\n\nMonacoEditorComponent->MonacoEditorModule\n\n\n\n\n\nMonacoEditorLoaderDirective\n\nMonacoEditorLoaderDirective\n\nMonacoEditorModule -->\n\nMonacoEditorLoaderDirective->MonacoEditorModule\n\n\n\n\n\nResizedDirective\n\nResizedDirective\n\nMonacoEditorModule -->\n\nResizedDirective->MonacoEditorModule\n\n\n\n\n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent \n\nMonacoDiffEditorComponent  -->\n\nMonacoEditorModule->MonacoDiffEditorComponent \n\n\n\n\n\nMonacoEditorComponent \n\nMonacoEditorComponent \n\nMonacoEditorComponent  -->\n\nMonacoEditorModule->MonacoEditorComponent \n\n\n\n\n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective \n\nMonacoEditorLoaderDirective  -->\n\nMonacoEditorModule->MonacoEditorLoaderDirective \n\n\n\n\n\nResizedDirective \n\nResizedDirective \n\nResizedDirective  -->\n\nMonacoEditorModule->ResizedDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            monaco   (src/.../monaco-diff-editor.component.ts)\n                        \n                        \n                            monaco   (src/.../monaco-editor.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-monaco-editor/src/lib/components/monaco-diff-editor/monaco-diff-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monaco\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/ngx-monaco-editor/src/lib/components/monaco-editor/monaco-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            monaco\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
